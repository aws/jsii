{"version":3,"file":"configuration.js","sourceRoot":"","sources":["../src/configuration.ts"],"names":[],"mappings":"","sourcesContent":["import { Stability } from './assembly';\n\n/**\n * Structure of jsii configuration in package.json\n */\nexport interface Config {\n  /**\n   * Output directory of typescript compiler\n   */\n  outdir?: string;\n\n  /**\n   * Determines the format of the jsii toolchain version string that will be\n   * included in the .jsii assembly file's jsiiVersion attribute.\n   *\n   * full (the default) - a version number including a commit hash will be used\n   * example: 0.14.3 (build 1b1062d)\n   *\n   * short - only the version number of jsii will be used\n   * example: 0.14.3\n   */\n  versionFormat?: 'full' | 'short';\n\n  /**\n   * Defines which target languages the module supports.\n   */\n  targets?: {\n    java?: {\n      /*\n       * generated maven package name\n       */\n      package: string;\n\n      /**\n       * groupId and artifactId for generated maven package.\n       */\n      maven: {\n        groupId: string;\n        artifactId: string;\n\n        /**\n         * optional version suffix for maven module version\n         */\n        versionSuffix?: string;\n      };\n    };\n    python?: {\n      /**\n       * name of generated Python module, which will be used by users in import\n       * directives\n       */\n      module: string;\n\n      /**\n       * the PyPI distribution name for the package.\n       */\n      distName: string;\n    };\n    dotnet?: {\n      /**\n       * the root namespace under which types will be declared\n       */\n      namespace: string;\n\n      /**\n       * identifier of the package in the NuGet registry\n       */\n      packageId: string;\n\n      /**\n       * url of the icon to be shown in the NuGet Gallery\n       */\n      iconUrl?: string;\n\n      /**\n       * optional suffix that will be appended at the end of the NuGet package's\n       * version field\n       */\n      versionSuffix?: string;\n    };\n  };\n\n  /**\n   * used to record additional metadata as key-value pairs that will be recorded\n   * as-is into the .jsii assembly file\n   */\n  metadata?: {\n    [key: string]: any;\n  };\n\n  /**\n   * TypeScript compiler options\n   */\n  tsc?: {\n    outDir?: string;\n    rootDir?: string;\n\n    [key: string]: any;\n  };\n}\n\n/**\n * Structure of jsii module package.json\n */\nexport interface PackageJson {\n  /**\n   * module name for typescript module published to npmjs\n   */\n  name: string;\n\n  /**\n   * module's current semantic version number\n   */\n  version: string;\n\n  /**\n   * module's source code repository information\n   */\n  repository:\n    | string\n    | {\n        url: string;\n        type?: string;\n        directory?: string;\n      };\n\n  /**\n   * main module entrypoint file\n   */\n  main: string;\n\n  /**\n   * module's primary author information\n   */\n  author:\n    | string\n    | {\n        name: string;\n        email?: string;\n        url?: string;\n        organization?: boolean;\n      };\n\n  /**\n   * jsii compiler configuration\n   */\n  jsii: Config;\n\n  /**\n   * module's built typescript definitions file location\n   */\n  types: string;\n\n  /**\n   * module's api stability level\n   */\n  stability?: Stability;\n\n  /**\n   * Run-time dependencies that are private to this assembly\n   */\n  dependencies?: Record<string, string>;\n\n  /**\n   * Run-time dependencies that will be shared with other assemblies\n   */\n  peerDependencies?: Record<string, string>;\n\n  /**\n   * Build-time dependencies\n   */\n  devDependencies?: Record<string, string>;\n\n  bundleDependencies?: string[];\n\n  bundledDependencies?: string[];\n\n  [key: string]: unknown;\n}\n"]}