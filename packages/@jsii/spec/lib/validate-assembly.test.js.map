{"version":3,"file":"validate-assembly.test.js","sourceRoot":"","sources":["../src/validate-assembly.test.ts"],"names":[],"mappings":";;AAAA,2BAA+C;AAC/C,+BAA+B;AAE/B,2DAAuD;AAEvD,IAAI,CAAC,0BAA0B,EAAE,GAAG,EAAE,CACpC,MAAM,CAAC,GAAG,EAAE,CAAC,oCAAgB,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC,CAAC;AAEnE,QAAQ,CAAC,2BAA2B,EAAE,GAAG,EAAE;IACzC,MAAM,UAAU,GAAG,cAAO,CACxB,SAAS,EACT,IAAI,EACJ,WAAW,EACX,qBAAqB,CACtB,CAAC;IACF,KAAK,MAAM,MAAM,IAAI,gBAAW,CAAC,UAAU,CAAC,EAAE;QAC5C,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE;YAChB,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CACrB,iBAAY,CAAC,cAAO,CAAC,UAAU,EAAE,MAAM,CAAC,EAAE,EAAE,QAAQ,EAAE,OAAO,EAAE,CAAC,CACjE,CAAC;YACF,MAAM,CAAC,oCAAgB,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC5C,CAAC,CAAC,CAAC;KACJ;AACH,CAAC,CAAC,CAAC","sourcesContent":["import { readFileSync, readdirSync } from 'fs';\nimport { resolve } from 'path';\n\nimport { validateAssembly } from './validate-assembly';\n\ntest('rejects invalid assembly', () =>\n  expect(() => validateAssembly({})).toThrow(/Invalid assembly:/));\n\ndescribe('can load older assemblies', () => {\n  const samplesDir = resolve(\n    __dirname,\n    '..',\n    'test-data',\n    'previous-assemblies',\n  );\n  for (const sample of readdirSync(samplesDir)) {\n    test(sample, () => {\n      const data = JSON.parse(\n        readFileSync(resolve(samplesDir, sample), { encoding: 'utf-8' }),\n      );\n      expect(validateAssembly(data)).toBe(data);\n    });\n  }\n});\n"]}