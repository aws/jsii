{
  "schema": "jsii/1.0",
  "types": {
    "jsii$jsii_test$.Token": {
      "kind": "class",
      "fqn": "jsii$jsii_test$.Token",
      "module": "jsii$jsii_test$",
      "namespace": "jsii$jsii_test$",
      "name": "Token",
      "initializer": {
        "initializer": true
      }
    },
    "jsii$jsii_test$.TestClass3": {
      "kind": "class",
      "properties": [
        {
          "name": "hello",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "fqn": "jsii$jsii_test$.TestClass3",
      "module": "jsii$jsii_test$",
      "namespace": "jsii$jsii_test$",
      "name": "TestClass3",
      "initializer": {
        "initializer": true
      }
    },
    "jsii$jsii_test$.TestClass2": {
      "subtypes": [
        "jsii$jsii_test$.TestClass2.SubTypeOfTestClass2"
      ],
      "kind": "class",
      "properties": [
        {
          "name": "a",
          "type": {
            "primitive": "number"
          }
        },
        {
          "name": "b",
          "type": {
            "primitive": "string"
          }
        },
        {
          "name": "c",
          "type": {
            "fqn": "jsii$jsii_test$.TestClass3"
          }
        }
      ],
      "fqn": "jsii$jsii_test$.TestClass2",
      "module": "jsii$jsii_test$",
      "namespace": "jsii$jsii_test$",
      "name": "TestClass2",
      "initializer": {
        "parameters": [
          {
            "name": "arg1",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "arg2",
            "type": {
              "fqn": "jsii$jsii_test$.TestClass3"
            }
          },
          {
            "name": "arg3",
            "type": {
              "primitive": "number",
              "optional": true
            }
          },
          {
            "name": "arg4",
            "type": {
              "primitive": "boolean",
              "optional": true
            }
          }
        ],
        "initializer": true
      }
    },
    "jsii$jsii_test$.TestClass2.SubTypeOfTestClass2": {
      "subtypes": [
        "jsii$jsii_test$.TestClass2.SubTypeOfTestClass2.Foo"
      ],
      "kind": "class",
      "properties": [
        {
          "name": "yourProp",
          "type": {
            "primitive": "string",
            "optional": true
          },
          "immutable": true
        }
      ],
      "fqn": "jsii$jsii_test$.TestClass2.SubTypeOfTestClass2",
      "module": "jsii$jsii_test$",
      "namespace": "jsii$jsii_test$.TestClass2",
      "name": "SubTypeOfTestClass2",
      "initializer": {
        "initializer": true
      },
      "parenttype": "jsii$jsii_test$.TestClass2"
    },
    "jsii$jsii_test$.TestClass2.SubTypeOfTestClass2.Foo": {
      "kind": "class",
      "fqn": "jsii$jsii_test$.TestClass2.SubTypeOfTestClass2.Foo",
      "module": "jsii$jsii_test$",
      "namespace": "jsii$jsii_test$.TestClass2.SubTypeOfTestClass2",
      "name": "Foo",
      "initializer": {
        "initializer": true
      },
      "parenttype": "jsii$jsii_test$.TestClass2.SubTypeOfTestClass2"
    },
    "jsii$jsii_test$.BaseClass": {
      "kind": "class",
      "properties": [
        {
          "name": "baseProp",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "fqn": "jsii$jsii_test$.BaseClass",
      "module": "jsii$jsii_test$",
      "namespace": "jsii$jsii_test$",
      "name": "BaseClass",
      "initializer": {
        "initializer": true
      }
    },
    "jsii$jsii_test$.TestClass": {
      "docs": {
        "link": "http://amazon.com",
        "description": "Description",
        "author": "benisrae",
        "comment": "This is the comment section"
      },
      "kind": "class",
      "properties": [
        {
          "docs": {
            "comment": "This is documentation for readonlyString"
          },
          "name": "readonlyString",
          "type": {
            "primitive": "string"
          },
          "immutable": true
        },
        {
          "name": "mutableNumber",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "comment": "Read only boolean."
          },
          "name": "readonlyBoolean",
          "type": {
            "primitive": "boolean"
          },
          "immutable": true
        },
        {
          "docs": {
            "example": "This is an example",
            "comment": "Sets the mutable complex object.\nDocumentation for getter"
          },
          "name": "mutableComplex",
          "type": {
            "fqn": "jsii$jsii_test$.TestClass2"
          }
        },
        {
          "name": "optionalMutableBoolean",
          "type": {
            "primitive": "boolean",
            "optional": true
          }
        },
        {
          "name": "optionalReadonlyDate",
          "type": {
            "primitive": "date",
            "optional": true
          },
          "immutable": true
        },
        {
          "name": "listOfStrings",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "name": "optionalListOfNumbers",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "number"
              },
              "kind": "array"
            },
            "optional": true
          }
        },
        {
          "name": "listOfComplex",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "jsii$jsii_test$.TestClass2"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "description": "Map of booleans here",
            "comment": "And a comment"
          },
          "name": "mapOfBooleans",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "boolean"
              },
              "kind": "map"
            }
          }
        },
        {
          "name": "mapOfComplex",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "jsii$jsii_test$.TestClass3"
              },
              "kind": "map"
            }
          }
        },
        {
          "name": "stringOrRef",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "jsii$jsii_test$.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "Docs on getter prevail.\nDocs on setter are not allowed."
          },
          "name": "getterBeforeSetter",
          "type": {
            "primitive": "string"
          }
        },
        {
          "name": "arrayGetter",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "jsii$jsii_test$.TestEnum"
              },
              "kind": "array"
            }
          },
          "immutable": true
        },
        {
          "name": "mapGetter",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "jsii$jsii_test$.TestClass2"
              },
              "kind": "map"
            }
          },
          "immutable": true
        },
        {
          "name": "jsonProperty",
          "type": {
            "primitive": "json"
          }
        },
        {
          "name": "optionalBooleanOrRef",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "jsii$jsii_test$.Token"
                }
              ]
            },
            "optional": true
          }
        },
        {
          "name": "optionalAsUnion",
          "type": {
            "primitive": "string",
            "optional": true
          }
        },
        {
          "name": "arrayOfOptionals",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "jsii$jsii_test$.TestClass3",
                "optional": true
              },
              "kind": "array"
            }
          }
        },
        {
          "name": "readonlyMapOfOptionalsOrRefs",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string",
                "optional": true
              },
              "kind": "map"
            }
          },
          "immutable": true
        }
      ],
      "methods": [
        {
          "docs": {
            "comment": "Documentation for method"
          },
          "name": "methodWithNoParameters"
        },
        {
          "parameters": [
            {
              "docs": {
                "param": "param1 Doc for param1",
                "comment": "Doc for param1"
              },
              "name": "param1",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "param": "param2 Doc for param2",
                "comment": "Doc for param2"
              },
              "name": "param2",
              "type": {
                "primitive": "number"
              }
            },
            {
              "name": "param3",
              "type": {
                "fqn": "jsii$jsii_test$.TestClass3",
                "optional": true
              }
            },
            {
              "name": "param4",
              "type": {
                "fqn": "jsii$jsii_test$.TestClass2",
                "optional": true
              }
            }
          ],
          "docs": {
            "comment": "Documentation for methodWithParams"
          },
          "name": "methodWithParams",
          "returns": {
            "primitive": "boolean"
          }
        }
      ],
      "fqn": "jsii$jsii_test$.TestClass",
      "module": "jsii$jsii_test$",
      "namespace": "jsii$jsii_test$",
      "name": "TestClass",
      "base": {
        "fqn": "jsii$jsii_test$.BaseClass"
      },
      "initializer": {
        "initializer": true
      }
    },
    "jsii$jsii_test$.TestEnum": {
      "docs": {
        "comment": "This is the documentation for this enum."
      },
      "subtypes": [
        "jsii$jsii_test$.TestEnum.SubTypeOfTestEnum"
      ],
      "kind": "enum",
      "members": [
        {
          "name": "Value1"
        },
        {
          "name": "Value2"
        },
        {
          "name": "Value3"
        }
      ],
      "fqn": "jsii$jsii_test$.TestEnum",
      "module": "jsii$jsii_test$",
      "namespace": "jsii$jsii_test$",
      "name": "TestEnum"
    },
    "jsii$jsii_test$.TestEnum.SubTypeOfTestEnum": {
      "kind": "class",
      "properties": [
        {
          "name": "myProp",
          "type": {
            "primitive": "number"
          }
        }
      ],
      "fqn": "jsii$jsii_test$.TestEnum.SubTypeOfTestEnum",
      "module": "jsii$jsii_test$",
      "namespace": "jsii$jsii_test$.TestEnum",
      "name": "SubTypeOfTestEnum",
      "initializer": {
        "initializer": true
      },
      "parenttype": "jsii$jsii_test$.TestEnum"
    },
    "jsii$jsii_test$.TestClass4": {
      "kind": "class",
      "consts": [
        {
          "name": "STRING_CONST",
          "primitive": "string",
          "stringValue": "Hello"
        },
        {
          "name": "STRING_CONST_WITH_DOUBLE_QUOTES",
          "primitive": "string",
          "stringValue": "World"
        },
        {
          "name": "NUMBER_CONST",
          "primitive": "number",
          "numberValue": 1234
        },
        {
          "name": "DOUBLE_CONST",
          "primitive": "number",
          "numberValue": 1234.44
        },
        {
          "name": "BOOLEAN_CONST_FALSE",
          "primitive": "boolean",
          "booleanValue": false
        },
        {
          "name": "BOOLEAN_CONST_TRUE",
          "primitive": "boolean",
          "booleanValue": false
        }
      ],
      "fqn": "jsii$jsii_test$.TestClass4",
      "module": "jsii$jsii_test$",
      "namespace": "jsii$jsii_test$",
      "name": "TestClass4",
      "initializer": {
        "parameters": [
          {
            "name": "p1",
            "type": {
              "primitive": "string"
            }
          }
        ],
        "docs": {
          "comment": "p2 cannot be resolved, but it's optional, so we expect the typespec to just include p1"
        },
        "initializer": true
      }
    },
    "jsii$jsii_test$.A": {
      "subtypes": [
        "jsii$jsii_test$.A.B"
      ],
      "kind": "class",
      "fqn": "jsii$jsii_test$.A",
      "module": "jsii$jsii_test$",
      "namespace": "jsii$jsii_test$",
      "name": "A",
      "initializer": {
        "initializer": true
      }
    },
    "jsii$jsii_test$.A.B": {
      "subtypes": [
        "jsii$jsii_test$.A.B.C"
      ],
      "kind": "class",
      "fqn": "jsii$jsii_test$.A.B",
      "module": "jsii$jsii_test$",
      "namespace": "jsii$jsii_test$.A",
      "name": "B",
      "initializer": {
        "initializer": true
      },
      "parenttype": "jsii$jsii_test$.A"
    },
    "jsii$jsii_test$.A.B.C": {
      "kind": "class",
      "fqn": "jsii$jsii_test$.A.B.C",
      "module": "jsii$jsii_test$",
      "namespace": "jsii$jsii_test$.A.B",
      "name": "C",
      "initializer": {
        "initializer": true
      },
      "parenttype": "jsii$jsii_test$.A.B"
    },
    "jsii$jsii_test$.ExposeExternalDependency": {
      "kind": "class",
      "properties": [
        {
          "name": "froth",
          "type": {
            "primitive": "number"
          }
        }
      ],
      "fqn": "jsii$jsii_test$.ExposeExternalDependency",
      "module": "jsii$jsii_test$",
      "namespace": "jsii$jsii_test$",
      "name": "ExposeExternalDependency",
      "base": {
        "fqn": "jsii$my_dep$.MyDepType"
      },
      "initializer": {
        "parameters": [
          {
            "name": "p",
            "type": {
              "primitive": "number"
            }
          }
        ],
        "initializer": true
      }
    },
    "jsii$jsii_test$.PropertyWithAnyValue": {
      "kind": "class",
      "properties": [
        {
          "name": "myprop",
          "type": {
            "primitive": "any"
          }
        }
      ],
      "fqn": "jsii$jsii_test$.PropertyWithAnyValue",
      "module": "jsii$jsii_test$",
      "namespace": "jsii$jsii_test$",
      "name": "PropertyWithAnyValue",
      "initializer": {
        "initializer": true
      }
    },
    "jsii$jsii_test$.HasLogic": {
      "kind": "class",
      "properties": [
        {
          "docs": {
            "comment": "This property will have logic=true"
          },
          "name": "propWithLogic",
          "type": {
            "primitive": "number"
          }
        },
        {
          "name": "propWithoutLogic",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "fqn": "jsii$jsii_test$.HasLogic",
      "module": "jsii$jsii_test$",
      "namespace": "jsii$jsii_test$",
      "name": "HasLogic",
      "initializer": {
        "initializer": true
      }
    },
    "jsii$jsii_test$.OptionalRef": {
      "kind": "class",
      "properties": [
        {
          "name": "prop1",
          "type": {
            "fqn": "jsii$jsii_test$.Token",
            "optional": true
          }
        },
        {
          "name": "prop2",
          "type": {
            "fqn": "jsii$jsii_test$.Token",
            "optional": true
          }
        }
      ],
      "fqn": "jsii$jsii_test$.OptionalRef",
      "module": "jsii$jsii_test$",
      "namespace": "jsii$jsii_test$",
      "name": "OptionalRef",
      "initializer": {
        "initializer": true
      }
    },
    "jsii$jsii_test$.UnionProperties": {
      "kind": "class",
      "properties": [
        {
          "name": "withPrimitive1",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "jsii$jsii_test$.Token"
                }
              ]
            }
          }
        },
        {
          "name": "withPrimitive2",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "jsii$jsii_test$.Token"
                }
              ]
            }
          }
        },
        {
          "name": "noPrimitive",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "jsii$jsii_test$.Token"
                },
                {
                  "fqn": "jsii$jsii_test$.TestClass3"
                },
                {
                  "fqn": "jsii$jsii_test$.TestClass2"
                }
              ]
            }
          }
        }
      ],
      "fqn": "jsii$jsii_test$.UnionProperties",
      "module": "jsii$jsii_test$",
      "namespace": "jsii$jsii_test$",
      "name": "UnionProperties",
      "initializer": {
        "initializer": true
      }
    },
    "jsii$jsii_test$.EnsureInitializerBase": {
      "kind": "class",
      "fqn": "jsii$jsii_test$.EnsureInitializerBase",
      "module": "jsii$jsii_test$",
      "namespace": "jsii$jsii_test$",
      "name": "EnsureInitializerBase",
      "initializer": {
        "parameters": [
          {
            "name": "arg1",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "arg2",
            "type": {
              "primitive": "boolean"
            }
          }
        ],
        "initializer": true
      }
    },
    "jsii$jsii_test$.EnsureInitializer": {
      "kind": "class",
      "fqn": "jsii$jsii_test$.EnsureInitializer",
      "module": "jsii$jsii_test$",
      "namespace": "jsii$jsii_test$",
      "name": "EnsureInitializer",
      "base": {
        "fqn": "jsii$jsii_test$.EnsureInitializerBase"
      },
      "initializer": {
        "parameters": [
          {
            "name": "arg1",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "arg2",
            "type": {
              "primitive": "boolean"
            }
          }
        ],
        "initializer": true
      }
    },
    "jsii$jsii_test$.EnsureInitializer2": {
      "kind": "class",
      "fqn": "jsii$jsii_test$.EnsureInitializer2",
      "module": "jsii$jsii_test$",
      "namespace": "jsii$jsii_test$",
      "name": "EnsureInitializer2",
      "base": {
        "fqn": "jsii$jsii_test$.EnsureInitializer"
      },
      "initializer": {
        "parameters": [
          {
            "name": "arg1",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "arg2",
            "type": {
              "primitive": "boolean"
            }
          }
        ],
        "initializer": true
      }
    },
    "jsii$jsii_test$.EnsureInitializer3": {
      "kind": "class",
      "fqn": "jsii$jsii_test$.EnsureInitializer3",
      "module": "jsii$jsii_test$",
      "namespace": "jsii$jsii_test$",
      "name": "EnsureInitializer3",
      "base": {
        "fqn": "jsii$jsii_test$.EnsureInitializer2"
      },
      "initializer": {
        "parameters": [
          {
            "name": "ihavemyowninitializer",
            "type": {
              "primitive": "boolean"
            }
          }
        ],
        "initializer": true
      }
    },
    "jsii$jsii_test$.EnsureInitializerBase2": {
      "kind": "class",
      "fqn": "jsii$jsii_test$.EnsureInitializerBase2",
      "module": "jsii$jsii_test$",
      "namespace": "jsii$jsii_test$",
      "name": "EnsureInitializerBase2",
      "initializer": {
        "parameters": [
          {
            "name": "arg1",
            "type": {
              "primitive": "string",
              "optional": true
            }
          },
          {
            "name": "arg2",
            "type": {
              "primitive": "boolean",
              "optional": true
            }
          }
        ],
        "initializer": true
      }
    },
    "jsii$jsii_test$.EnsureInitializer4": {
      "kind": "class",
      "fqn": "jsii$jsii_test$.EnsureInitializer4",
      "module": "jsii$jsii_test$",
      "namespace": "jsii$jsii_test$",
      "name": "EnsureInitializer4",
      "base": {
        "fqn": "jsii$jsii_test$.EnsureInitializerBase2"
      },
      "initializer": {
        "parameters": [
          {
            "name": "arg1",
            "type": {
              "primitive": "string",
              "optional": true
            }
          },
          {
            "name": "arg2",
            "type": {
              "primitive": "boolean",
              "optional": true
            }
          }
        ],
        "initializer": true
      }
    },
    "jsii$jsii_test$.PropertiesInCtor": {
      "kind": "class",
      "properties": [
        {
          "name": "readonlyProp",
          "type": {
            "primitive": "string"
          },
          "immutable": true
        },
        {
          "name": "readWriteProp",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "fqn": "jsii$jsii_test$.PropertiesInCtor",
      "module": "jsii$jsii_test$",
      "namespace": "jsii$jsii_test$",
      "name": "PropertiesInCtor",
      "initializer": {
        "parameters": [
          {
            "name": "readonlyProp",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "readWriteProp",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "privateProp",
            "type": {
              "primitive": "string"
            }
          }
        ],
        "initializer": true
      }
    },
    "jsii$jsii_test$.MyAbstractClass": {
      "kind": "class",
      "methods": [
        {
          "name": "normalMethod"
        },
        {
          "parameters": [
            {
              "name": "value",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "name": "abstractMethod",
          "abstract": true,
          "returns": {
            "primitive": "string"
          }
        }
      ],
      "fqn": "jsii$jsii_test$.MyAbstractClass",
      "module": "jsii$jsii_test$",
      "namespace": "jsii$jsii_test$",
      "name": "MyAbstractClass",
      "abstract": true,
      "initializer": {
        "initializer": true
      }
    },
    "jsii$jsii_test$.DerivedAbstract": {
      "kind": "class",
      "fqn": "jsii$jsii_test$.DerivedAbstract",
      "module": "jsii$jsii_test$",
      "namespace": "jsii$jsii_test$",
      "name": "DerivedAbstract",
      "base": {
        "fqn": "jsii$jsii_test$.MyAbstractClass"
      },
      "abstract": true,
      "initializer": {
        "initializer": true
      }
    },
    "jsii$jsii_test$.ClassWithProtectedStuff": {
      "kind": "class",
      "properties": [
        {
          "name": "paramprop",
          "type": {
            "primitive": "string"
          },
          "protected": true
        },
        {
          "name": "foo",
          "type": {
            "primitive": "number"
          },
          "immutable": true,
          "protected": true
        },
        {
          "name": "goo",
          "type": {
            "primitive": "number"
          },
          "protected": true
        }
      ],
      "methods": [
        {
          "parameters": [
            {
              "name": "val",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "name": "protectedMethod",
          "protected": true,
          "returns": {
            "primitive": "number"
          }
        }
      ],
      "fqn": "jsii$jsii_test$.ClassWithProtectedStuff",
      "module": "jsii$jsii_test$",
      "namespace": "jsii$jsii_test$",
      "name": "ClassWithProtectedStuff",
      "initializer": {
        "parameters": [
          {
            "name": "paramprop",
            "type": {
              "primitive": "string"
            }
          }
        ],
        "initializer": true
      }
    },
    "jsii$jsii_test$.AsyncVirtualMethods": {
      "kind": "class",
      "methods": [
        {
          "name": "overrideMe",
          "returns": {
            "primitive": "number",
            "promise": true
          }
        },
        {
          "name": "dontOverrideMe",
          "returns": {
            "primitive": "number"
          }
        }
      ],
      "fqn": "jsii$jsii_test$.AsyncVirtualMethods",
      "module": "jsii$jsii_test$",
      "namespace": "jsii$jsii_test$",
      "name": "AsyncVirtualMethods",
      "initializer": {
        "initializer": true
      }
    }
  },
  "nametree": {
    "jsii$jsii_test$": {
      "Token": {
        "_": "jsii$jsii_test$.Token"
      },
      "TestClass3": {
        "_": "jsii$jsii_test$.TestClass3"
      },
      "TestClass2": {
        "_": "jsii$jsii_test$.TestClass2",
        "SubTypeOfTestClass2": {
          "_": "jsii$jsii_test$.TestClass2.SubTypeOfTestClass2",
          "Foo": {
            "_": "jsii$jsii_test$.TestClass2.SubTypeOfTestClass2.Foo"
          }
        }
      },
      "BaseClass": {
        "_": "jsii$jsii_test$.BaseClass"
      },
      "TestClass": {
        "_": "jsii$jsii_test$.TestClass"
      },
      "TestEnum": {
        "_": "jsii$jsii_test$.TestEnum",
        "SubTypeOfTestEnum": {
          "_": "jsii$jsii_test$.TestEnum.SubTypeOfTestEnum"
        }
      },
      "TestClass4": {
        "_": "jsii$jsii_test$.TestClass4"
      },
      "A": {
        "_": "jsii$jsii_test$.A",
        "B": {
          "_": "jsii$jsii_test$.A.B",
          "C": {
            "_": "jsii$jsii_test$.A.B.C"
          }
        }
      },
      "ExposeExternalDependency": {
        "_": "jsii$jsii_test$.ExposeExternalDependency"
      },
      "PropertyWithAnyValue": {
        "_": "jsii$jsii_test$.PropertyWithAnyValue"
      },
      "HasLogic": {
        "_": "jsii$jsii_test$.HasLogic"
      },
      "OptionalRef": {
        "_": "jsii$jsii_test$.OptionalRef"
      },
      "UnionProperties": {
        "_": "jsii$jsii_test$.UnionProperties"
      },
      "EnsureInitializerBase": {
        "_": "jsii$jsii_test$.EnsureInitializerBase"
      },
      "EnsureInitializer": {
        "_": "jsii$jsii_test$.EnsureInitializer"
      },
      "EnsureInitializer2": {
        "_": "jsii$jsii_test$.EnsureInitializer2"
      },
      "EnsureInitializer3": {
        "_": "jsii$jsii_test$.EnsureInitializer3"
      },
      "EnsureInitializerBase2": {
        "_": "jsii$jsii_test$.EnsureInitializerBase2"
      },
      "EnsureInitializer4": {
        "_": "jsii$jsii_test$.EnsureInitializer4"
      },
      "PropertiesInCtor": {
        "_": "jsii$jsii_test$.PropertiesInCtor"
      },
      "MyAbstractClass": {
        "_": "jsii$jsii_test$.MyAbstractClass"
      },
      "DerivedAbstract": {
        "_": "jsii$jsii_test$.DerivedAbstract"
      },
      "ClassWithProtectedStuff": {
        "_": "jsii$jsii_test$.ClassWithProtectedStuff"
      },
      "AsyncVirtualMethods": {
        "_": "jsii$jsii_test$.AsyncVirtualMethods"
      }
    }
  },
  "typecount": 29,
  "externalTypes": {
    "jsii$my_dep$.MyDepType": {
      "kind": "class",
      "properties": [
        {
          "getter": true,
          "setter": true,
          "name": "foo",
          "type": {
            "primitive": "string"
          }
        },
        {
          "getter": true,
          "setter": true,
          "name": "goo",
          "type": {
            "fqn": "jsii$my_indirect_dep$.IndirectDep"
          }
        }
      ],
      "fqn": "jsii$my_dep$.MyDepType",
      "module": "jsii$my_dep$",
      "namespace": "jsii$my_dep$",
      "name": "MyDepType",
      "initializer": {
        "parameters": [
          {
            "name": "p",
            "type": {
              "primitive": "number"
            }
          }
        ],
        "initializer": true
      }
    }
  },
  "name": "jsii$jsii_test$",
  "package": "jsii-test",
  "version": "42.42.42",
  "dependencies": {
    "jsii$my_dep$": {
      "package": "my-dep",
      "version": "2.5.2"
    }
  },
  "bundled": {
    "my-bundled-dep": "1.2.3"
  },
  "names": {
    "java": "com.amazon.jsii.test",
    "js": "jsii-test"
  },
  "nativenames": {
    "jsii$my_dep$": {
      "java": "com.acme.mydep"
    },
    "jsii$jsii_test$": {
      "java": "com.amazon.jsii.test",
      "js": "jsii-test"
    }
  },
  "code": "var jsii$jsii_test$ =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst mydep = __webpack_require__(1);\nconst my_bundled_dep_1 = __webpack_require__(2);\nclass Token {\n}\nexports.Token = Token;\nclass TestClass3 {\n    constructor() {\n        this.hello = '';\n    }\n}\nexports.TestClass3 = TestClass3;\nclass TestClass2 {\n    // last argument is union, but it's optional, so the resulting jsii will just not include it.\n    constructor(arg1 = 'hello', arg2, arg3, arg4, arg5) {\n        this.a = 0;\n        this.b = '';\n        this.c = new TestClass3();\n        arg1;\n        arg2;\n        arg3;\n        arg4;\n        arg5;\n        my_bundled_dep_1.hi();\n    }\n}\nexports.TestClass2 = TestClass2;\nclass BaseClass {\n    constructor() {\n        this.baseProp = '';\n    }\n}\nexports.BaseClass = BaseClass;\n/**\n * This is the comment section\n * @link http://amazon.com\n * @description Description\n * @author benisrae\n */\nclass TestClass extends BaseClass {\n    constructor() {\n        // properties\n        super(...arguments);\n        /**\n         * This is documentation for readonlyString\n         */\n        this.readonlyString = '';\n        this.mutableNumber = 0;\n        // list\n        this.listOfStrings = [];\n        this.listOfComplex = [];\n        // map\n        /**\n         * And a comment\n         * @description Map of booleans here\n         */\n        this.mapOfBooleans = {};\n        this.mapOfComplex = {};\n        // refs\n        this.stringOrRef = '';\n        this.jsonProperty = {};\n        this.optionalAsUnion = '';\n        this.arrayOfOptionals = new Array();\n        this.readonlyMapOfOptionalsOrRefs = {};\n    }\n    /**\n     * Read only boolean.\n     */\n    get readonlyBoolean() {\n        return false;\n    }\n    /**\n     * Sets the mutable complex object.\n     */\n    set mutableComplex(value) {\n        value;\n    }\n    /**\n     * Documentation for getter\n     * @example This is an example\n     */\n    get mutableComplex() {\n        return new TestClass2(\"hello\", new TestClass3(), 122);\n    }\n    _ignored() {\n        // this method should not be included\n    }\n    // methods\n    /**\n     * Documentation for method\n     */\n    methodWithNoParameters() { }\n    /**\n     * Documentation for methodWithParams\n     * @param param1 Doc for param1\n     * @param param2 Doc for param2\n     */\n    methodWithParams(param1, param2, param3, param4) {\n        param1;\n        param2;\n        param3;\n        param4;\n        this.notVisible();\n        return true;\n    }\n    notVisible() {\n    }\n    /**\n     * Docs on getter prevail.\n     */\n    get getterBeforeSetter() {\n        return 'hello';\n    }\n    /**\n     * Docs on setter are not allowed.\n     */\n    set getterBeforeSetter(value) {\n        value;\n    }\n    get arrayGetter() {\n        return [];\n    }\n    get mapGetter() {\n        return { \"hello\": { a: 1, b: 'hello', c: { hello: 'hello' } } };\n    }\n}\nexports.TestClass = TestClass;\n/**\n * This is the documentation for this enum.\n */\nvar TestEnum;\n(function (TestEnum) {\n    /**\n     * This is doc for Value1\n     */\n    TestEnum[TestEnum[\"Value1\"] = 0] = \"Value1\";\n    /**\n     * Doc for value2\n     * @author benisrae@\n     */\n    TestEnum[TestEnum[\"Value2\"] = 1] = \"Value2\";\n    TestEnum[\"Value3\"] = \"Hello\";\n})(TestEnum = exports.TestEnum || (exports.TestEnum = {}));\n(function (TestEnum) {\n    class SubTypeOfTestEnum {\n        constructor() {\n            this.myProp = 12;\n        }\n    }\n    TestEnum.SubTypeOfTestEnum = SubTypeOfTestEnum;\n})(TestEnum = exports.TestEnum || (exports.TestEnum = {}));\n(function (TestClass2) {\n    class SubTypeOfTestClass2 {\n        constructor() {\n            this.yourProp = \"Hello\";\n        }\n    }\n    TestClass2.SubTypeOfTestClass2 = SubTypeOfTestClass2;\n})(TestClass2 = exports.TestClass2 || (exports.TestClass2 = {}));\n(function (TestClass2) {\n    var SubTypeOfTestClass2;\n    (function (SubTypeOfTestClass2) {\n        class Foo {\n        }\n        SubTypeOfTestClass2.Foo = Foo;\n    })(SubTypeOfTestClass2 = TestClass2.SubTypeOfTestClass2 || (TestClass2.SubTypeOfTestClass2 = {}));\n})(TestClass2 = exports.TestClass2 || (exports.TestClass2 = {}));\n//\n// Const literals\n// jsii allows constant literals and actually includes the values in the jsii spec\n//\nclass TestClass4 {\n    /**\n     * p2 cannot be resolved, but it's optional, so we expect the typespec to just include p1\n     */\n    constructor(p1, p2, p3) {\n        p1;\n        p2;\n        p3;\n        TestClass4.NON_PRIMITIVE;\n    }\n}\n// primitive consts values are allowed but only if they are simple literal data values\n// no math, no evaluation. literally!!\nTestClass4.STRING_CONST = 'Hello';\nTestClass4.STRING_CONST_WITH_DOUBLE_QUOTES = \"World\";\nTestClass4.NUMBER_CONST = 1234;\nTestClass4.DOUBLE_CONST = 1234.44;\nTestClass4.BOOLEAN_CONST_FALSE = false;\nTestClass4.BOOLEAN_CONST_TRUE = false;\n// ignored (with a warning) because it's a non-primitive literal\nTestClass4.OBJ_LITERAL_CONST = { foo: 1234 };\nTestClass4.NON_LITERAL_CONST = 123 + 45;\nTestClass4.OBJ_CONST = new TestClass();\n// private\nTestClass4.NON_PRIMITIVE = new TestClass();\nexports.TestClass4 = TestClass4;\n//\n// This is good since there are no namesapces without a type.\n//\nclass A {\n}\nexports.A = A;\n(function (A) {\n    class B {\n    }\n    A.B = B;\n})(A = exports.A || (exports.A = {}));\n(function (A) {\n    var B;\n    (function (B) {\n        class C {\n        }\n        B.C = C;\n    })(B = A.B || (A.B = {}));\n})(A = exports.A || (exports.A = {}));\n//\n// Use a type from an external dependency as a base class\n//\nclass ExposeExternalDependency extends mydep.MyDepType {\n    constructor() {\n        super(...arguments);\n        this.froth = 0;\n    }\n}\nexports.ExposeExternalDependency = ExposeExternalDependency;\nclass PropertyWithAnyValue {\n    constructor() {\n        this.myprop = undefined;\n    }\n}\nexports.PropertyWithAnyValue = PropertyWithAnyValue;\n// jsii also indicates whether properties have backing logic or just represent raw data\nclass HasLogic {\n    constructor() {\n        this.propWithoutLogic = '';\n    }\n    /**\n     * This property will have logic=true\n     */\n    get propWithLogic() {\n        return 12;\n    }\n    set propWithLogic(val) {\n        val;\n    }\n}\nexports.HasLogic = HasLogic;\nclass OptionalRef {\n    constructor() {\n        this.prop2 = new Token();\n    }\n}\nexports.OptionalRef = OptionalRef;\nclass UnionProperties {\n    constructor() {\n        this.withPrimitive1 = '';\n        this.withPrimitive2 = '';\n        this.noPrimitive = new TestClass3();\n    }\n}\nexports.UnionProperties = UnionProperties;\n//\n// jsii is expected to automatically copy the initializer from TestClass3\n//\nclass EnsureInitializerBase {\n    constructor(arg1, arg2) {\n        arg1;\n        arg2;\n    }\n}\nexports.EnsureInitializerBase = EnsureInitializerBase;\nclass EnsureInitializer extends EnsureInitializerBase {\n}\nexports.EnsureInitializer = EnsureInitializer;\nclass EnsureInitializer2 extends EnsureInitializer {\n}\nexports.EnsureInitializer2 = EnsureInitializer2;\nclass EnsureInitializer3 extends EnsureInitializer2 {\n    constructor(ihavemyowninitializer) {\n        super('boo', false);\n        ihavemyowninitializer;\n    }\n}\nexports.EnsureInitializer3 = EnsureInitializer3;\n// here initializer has only optional values\n// in the meantime we still expect it to be cloned as is for lack of a evidence that we should do something else\nclass EnsureInitializerBase2 {\n    constructor(arg1, arg2) {\n        arg1;\n        arg2;\n    }\n}\nexports.EnsureInitializerBase2 = EnsureInitializerBase2;\nclass EnsureInitializer4 extends EnsureInitializerBase2 {\n}\nexports.EnsureInitializer4 = EnsureInitializer4;\nclass PropertiesInCtor {\n    constructor(readonlyProp, readWriteProp, privateProp) {\n        this.readonlyProp = readonlyProp;\n        this.readWriteProp = readWriteProp;\n        this.privateProp = privateProp;\n        this.readWriteProp = this.privateProp;\n    }\n}\nexports.PropertiesInCtor = PropertiesInCtor;\nclass MyAbstractClass {\n    normalMethod() {\n    }\n}\nexports.MyAbstractClass = MyAbstractClass;\nclass DerivedAbstract extends MyAbstractClass {\n}\nexports.DerivedAbstract = DerivedAbstract;\nclass ClassWithProtectedStuff {\n    constructor(paramprop) {\n        this.paramprop = paramprop;\n        this.foo = 0;\n    }\n    get goo() {\n        return 123;\n    }\n    set goo(val) {\n        val;\n    }\n    protectedMethod(val) {\n        val;\n        return 123;\n    }\n}\nexports.ClassWithProtectedStuff = ClassWithProtectedStuff;\nclass AsyncVirtualMethods {\n    async overrideMe() {\n        return 42;\n    }\n    dontOverrideMe() {\n        return 42;\n    }\n}\nexports.AsyncVirtualMethods = AsyncVirtualMethods;\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\nmodule.exports = jsii$my_dep$;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nexports.__esModule = true;\nexports.hi = function () { return 'this is coming from a bundled dependency. this means that its code is going to be included in our bundle.js file'; };\n\n\n/***/ })\n/******/ ]);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,"
}
