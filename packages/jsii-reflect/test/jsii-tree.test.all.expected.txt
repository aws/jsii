assemblies
 ├─┬ jsii-calc
 │ ├─┬ dependencies
 │ │ ├── @scope/jsii-calc-base
 │ │ ├── @scope/jsii-calc-base-of-base
 │ │ └── @scope/jsii-calc-lib
 │ └─┬ types
 │   ├─┬ class AbstractClass
 │   │ ├── base: AbstractClassBase
 │   │ ├── interfaces: IInterfaceImplementedByAbstractClass
 │   │ └─┬ members
 │   │   ├── <initializer>() initializer
 │   │   ├─┬ abstractMethod(name) method
 │   │   │ ├── abstract
 │   │   │ ├─┬ parameters
 │   │   │ │ └─┬ name
 │   │   │ │   └── type: string
 │   │   │ └── returns: string
 │   │   ├─┬ nonAbstractMethod() method
 │   │   │ └── returns: number
 │   │   └─┬ propFromInterface property
 │   │     ├── immutable
 │   │     └── type: string
 │   ├─┬ class AbstractClassBase
 │   │ └─┬ members
 │   │   ├── <initializer>() initializer
 │   │   └─┬ abstractProperty property
 │   │     ├── abstract
 │   │     ├── immutable
 │   │     └── type: string
 │   ├─┬ class AbstractClassReturner
 │   │ └─┬ members
 │   │   ├── <initializer>() initializer
 │   │   ├─┬ giveMeAbstract() method
 │   │   │ └── returns: jsii-calc.AbstractClass
 │   │   ├─┬ giveMeInterface() method
 │   │   │ └── returns: jsii-calc.IInterfaceImplementedByAbstractClass
 │   │   └─┬ returnAbstractFromProperty property
 │   │     ├── immutable
 │   │     └── type: jsii-calc.AbstractClassBase
 │   ├─┬ class Add
 │   │ ├── base: BinaryOperation
 │   │ └─┬ members
 │   │   ├─┬ <initializer>(lhs,rhs) initializer
 │   │   │ └─┬ parameters
 │   │   │   ├─┬ lhs
 │   │   │   │ └── type: @scope/jsii-calc-lib.Value
 │   │   │   └─┬ rhs
 │   │   │     └── type: @scope/jsii-calc-lib.Value
 │   │   ├─┬ toString() method
 │   │   │ └── returns: string
 │   │   └─┬ value property
 │   │     ├── immutable
 │   │     └── type: number
 │   ├─┬ class AllTypes
 │   │ └─┬ members
 │   │   ├── <initializer>() initializer
 │   │   ├─┬ anyIn(inp) method
 │   │   │ ├─┬ parameters
 │   │   │ │ └─┬ inp
 │   │   │ │   └── type: any
 │   │   │ └── returns: void
 │   │   ├─┬ anyOut() method
 │   │   │ └── returns: any
 │   │   ├─┬ enumMethod(value) method
 │   │   │ ├─┬ parameters
 │   │   │ │ └─┬ value
 │   │   │ │   └── type: jsii-calc.StringEnum
 │   │   │ └── returns: jsii-calc.StringEnum
 │   │   ├─┬ enumPropertyValue property
 │   │   │ ├── immutable
 │   │   │ └── type: number
 │   │   ├─┬ anyArrayProperty property
 │   │   │ └── type: Array<any>
 │   │   ├─┬ anyMapProperty property
 │   │   │ └── type: Map<string => any>
 │   │   ├─┬ anyProperty property
 │   │   │ └── type: any
 │   │   ├─┬ arrayProperty property
 │   │   │ └── type: Array<string>
 │   │   ├─┬ booleanProperty property
 │   │   │ └── type: boolean
 │   │   ├─┬ dateProperty property
 │   │   │ └── type: date
 │   │   ├─┬ enumProperty property
 │   │   │ └── type: jsii-calc.AllTypesEnum
 │   │   ├─┬ jsonProperty property
 │   │   │ └── type: json
 │   │   ├─┬ mapProperty property
 │   │   │ └── type: Map<string => @scope/jsii-calc-lib.Number>
 │   │   ├─┬ numberProperty property
 │   │   │ └── type: number
 │   │   ├─┬ stringProperty property
 │   │   │ └── type: string
 │   │   ├─┬ unionArrayProperty property
 │   │   │ └── type: Array<number | @scope/jsii-calc-lib.Value>
 │   │   ├─┬ unionMapProperty property
 │   │   │ └── type: Map<string => string | number | @scope/jsii-calc-lib.Number>
 │   │   ├─┬ unionProperty property
 │   │   │ └── type: string | number | jsii-calc.Multiply | @scope/jsii-calc-lib.Number
 │   │   ├─┬ unknownArrayProperty property
 │   │   │ └── type: Array<any>
 │   │   ├─┬ unknownMapProperty property
 │   │   │ └── type: Map<string => any>
 │   │   ├─┬ unknownProperty property
 │   │   │ └── type: any
 │   │   └─┬ optionalEnumValue property
 │   │     └── type: Optional<jsii-calc.StringEnum>
 │   ├─┬ class AllowedMethodNames
 │   │ └─┬ members
 │   │   ├── <initializer>() initializer
 │   │   ├─┬ getBar(_p1,_p2) method
 │   │   │ ├─┬ parameters
 │   │   │ │ ├─┬ _p1
 │   │   │ │ │ └── type: string
 │   │   │ │ └─┬ _p2
 │   │   │ │   └── type: number
 │   │   │ └── returns: void
 │   │   ├─┬ getFoo(withParam) method
 │   │   │ ├─┬ parameters
 │   │   │ │ └─┬ withParam
 │   │   │ │   └── type: string
 │   │   │ └── returns: string
 │   │   ├─┬ setBar(_x,_y,_z) method
 │   │   │ ├─┬ parameters
 │   │   │ │ ├─┬ _x
 │   │   │ │ │ └── type: string
 │   │   │ │ ├─┬ _y
 │   │   │ │ │ └── type: number
 │   │   │ │ └─┬ _z
 │   │   │ │   └── type: boolean
 │   │   │ └── returns: void
 │   │   └─┬ setFoo(_x,_y) method
 │   │     ├─┬ parameters
 │   │     │ ├─┬ _x
 │   │     │ │ └── type: string
 │   │     │ └─┬ _y
 │   │     │   └── type: number
 │   │     └── returns: void
 │   ├─┬ class AsyncVirtualMethods
 │   │ └─┬ members
 │   │   ├── <initializer>() initializer
 │   │   ├─┬ callMe() method
 │   │   │ └── returns: Promise<number>
 │   │   ├─┬ callMe2() method
 │   │   │ └── returns: Promise<number>
 │   │   ├─┬ callMeDoublePromise() method
 │   │   │ └── returns: Promise<number>
 │   │   ├─┬ dontOverrideMe() method
 │   │   │ └── returns: number
 │   │   ├─┬ overrideMe(mult) method
 │   │   │ ├─┬ parameters
 │   │   │ │ └─┬ mult
 │   │   │ │   └── type: number
 │   │   │ └── returns: Promise<number>
 │   │   └─┬ overrideMeToo() method
 │   │     └── returns: Promise<number>
 │   ├─┬ class AugmentableClass
 │   │ └─┬ members
 │   │   ├── <initializer>() initializer
 │   │   ├─┬ methodOne() method
 │   │   │ └── returns: void
 │   │   └─┬ methodTwo() method
 │   │     └── returns: void
 │   ├─┬ class BinaryOperation
 │   │ ├── base: Operation
 │   │ ├── interfaces: IFriendly
 │   │ └─┬ members
 │   │   ├─┬ <initializer>(lhs,rhs) initializer
 │   │   │ └─┬ parameters
 │   │   │   ├─┬ lhs
 │   │   │   │ └── type: @scope/jsii-calc-lib.Value
 │   │   │   └─┬ rhs
 │   │   │     └── type: @scope/jsii-calc-lib.Value
 │   │   ├─┬ hello() method
 │   │   │ └── returns: string
 │   │   ├─┬ lhs property
 │   │   │ ├── immutable
 │   │   │ └── type: @scope/jsii-calc-lib.Value
 │   │   └─┬ rhs property
 │   │     ├── immutable
 │   │     └── type: @scope/jsii-calc-lib.Value
 │   ├─┬ class Calculator
 │   │ ├── base: CompositeOperation
 │   │ └─┬ members
 │   │   ├─┬ <initializer>(props) initializer
 │   │   │ └─┬ parameters
 │   │   │   └─┬ props
 │   │   │     └── type: Optional<jsii-calc.CalculatorProps>
 │   │   ├─┬ add(value) method
 │   │   │ ├─┬ parameters
 │   │   │ │ └─┬ value
 │   │   │ │   └── type: number
 │   │   │ └── returns: void
 │   │   ├─┬ mul(value) method
 │   │   │ ├─┬ parameters
 │   │   │ │ └─┬ value
 │   │   │ │   └── type: number
 │   │   │ └── returns: void
 │   │   ├─┬ neg() method
 │   │   │ └── returns: void
 │   │   ├─┬ pow(value) method
 │   │   │ ├─┬ parameters
 │   │   │ │ └─┬ value
 │   │   │ │   └── type: number
 │   │   │ └── returns: void
 │   │   ├─┬ readUnionValue() method
 │   │   │ └── returns: number
 │   │   ├─┬ expression property
 │   │   │ ├── immutable
 │   │   │ └── type: @scope/jsii-calc-lib.Value
 │   │   ├─┬ operationsLog property
 │   │   │ ├── immutable
 │   │   │ └── type: Array<@scope/jsii-calc-lib.Value>
 │   │   ├─┬ operationsMap property
 │   │   │ ├── immutable
 │   │   │ └── type: Map<string => Array<@scope/jsii-calc-lib.Value>>
 │   │   ├─┬ curr property
 │   │   │ └── type: @scope/jsii-calc-lib.Value
 │   │   ├─┬ maxValue property
 │   │   │ └── type: Optional<number>
 │   │   └─┬ unionProperty property
 │   │     └── type: Optional<jsii-calc.Add | jsii-calc.Multiply | jsii-calc.Power>
 │   ├─┬ class ClassThatImplementsTheInternalInterface
 │   │ ├── interfaces: INonInternalInterface
 │   │ └─┬ members
 │   │   ├── <initializer>() initializer
 │   │   ├─┬ a property
 │   │   │ └── type: string
 │   │   ├─┬ b property
 │   │   │ └── type: string
 │   │   ├─┬ c property
 │   │   │ └── type: string
 │   │   └─┬ d property
 │   │     └── type: string
 │   ├─┬ class ClassThatImplementsThePrivateInterface
 │   │ ├── interfaces: INonInternalInterface
 │   │ └─┬ members
 │   │   ├── <initializer>() initializer
 │   │   ├─┬ a property
 │   │   │ └── type: string
 │   │   ├─┬ b property
 │   │   │ └── type: string
 │   │   ├─┬ c property
 │   │   │ └── type: string
 │   │   └─┬ e property
 │   │     └── type: string
 │   ├─┬ class ClassWithDocs
 │   │ └─┬ members
 │   │   └── <initializer>() initializer
 │   ├─┬ class ClassWithMutableObjectLiteralProperty
 │   │ └─┬ members
 │   │   ├── <initializer>() initializer
 │   │   └─┬ mutableObject property
 │   │     └── type: jsii-calc.IMutableObjectLiteral
 │   ├─┬ class ClassWithPrivateConstructorAndAutomaticProperties
 │   │ ├── interfaces: IInterfaceWithProperties
 │   │ └─┬ members
 │   │   ├─┬ create(readOnlyString,readWriteString) method
 │   │   │ ├── static
 │   │   │ ├─┬ parameters
 │   │   │ │ ├─┬ readOnlyString
 │   │   │ │ │ └── type: string
 │   │   │ │ └─┬ readWriteString
 │   │   │ │   └── type: string
 │   │   │ └── returns: jsii-calc.ClassWithPrivateConstructorAndAutomaticProperties
 │   │   ├─┬ readOnlyString property
 │   │   │ ├── immutable
 │   │   │ └── type: string
 │   │   └─┬ readWriteString property
 │   │     └── type: string
 │   ├─┬ class ConstructorPassesThisOut
 │   │ └─┬ members
 │   │   └─┬ <initializer>(consumer) initializer
 │   │     └─┬ parameters
 │   │       └─┬ consumer
 │   │         └── type: jsii-calc.PartiallyInitializedThisConsumer
 │   ├─┬ class Constructors
 │   │ └─┬ members
 │   │   ├── <initializer>() initializer
 │   │   ├─┬ hiddenInterface() method
 │   │   │ ├── static
 │   │   │ └── returns: jsii-calc.IPublicInterface
 │   │   ├─┬ hiddenInterfaces() method
 │   │   │ ├── static
 │   │   │ └── returns: Array<jsii-calc.IPublicInterface>
 │   │   ├─┬ hiddenSubInterfaces() method
 │   │   │ ├── static
 │   │   │ └── returns: Array<jsii-calc.IPublicInterface>
 │   │   ├─┬ makeClass() method
 │   │   │ ├── static
 │   │   │ └── returns: jsii-calc.PublicClass
 │   │   ├─┬ makeInterface() method
 │   │   │ ├── static
 │   │   │ └── returns: jsii-calc.IPublicInterface
 │   │   ├─┬ makeInterface2() method
 │   │   │ ├── static
 │   │   │ └── returns: jsii-calc.IPublicInterface2
 │   │   └─┬ makeInterfaces() method
 │   │     ├── static
 │   │     └── returns: Array<jsii-calc.IPublicInterface>
 │   ├─┬ class ConsumersOfThisCrazyTypeSystem
 │   │ └─┬ members
 │   │   ├── <initializer>() initializer
 │   │   ├─┬ consumeAnotherPublicInterface(obj) method
 │   │   │ ├─┬ parameters
 │   │   │ │ └─┬ obj
 │   │   │ │   └── type: jsii-calc.IAnotherPublicInterface
 │   │   │ └── returns: string
 │   │   └─┬ consumeNonInternalInterface(obj) method
 │   │     ├─┬ parameters
 │   │     │ └─┬ obj
 │   │     │   └── type: jsii-calc.INonInternalInterface
 │   │     └── returns: any
 │   ├─┬ class DefaultedConstructorArgument
 │   │ └─┬ members
 │   │   ├─┬ <initializer>(arg1,arg2,arg3) initializer
 │   │   │ └─┬ parameters
 │   │   │   ├─┬ arg1
 │   │   │   │ └── type: Optional<number>
 │   │   │   ├─┬ arg2
 │   │   │   │ └── type: Optional<string>
 │   │   │   └─┬ arg3
 │   │   │     └── type: Optional<date>
 │   │   ├─┬ arg1 property
 │   │   │ ├── immutable
 │   │   │ └── type: number
 │   │   ├─┬ arg3 property
 │   │   │ ├── immutable
 │   │   │ └── type: date
 │   │   └─┬ arg2 property
 │   │     ├── immutable
 │   │     └── type: Optional<string>
 │   ├─┬ class Base
 │   │ └─┬ members
 │   │   ├── <initializer>() initializer
 │   │   └─┬ prop property
 │   │     └── type: string
 │   ├─┬ class Derived
 │   │ ├── base: Base
 │   │ └─┬ members
 │   │   └── <initializer>() initializer
 │   ├─┬ class DoNotOverridePrivates
 │   │ └─┬ members
 │   │   ├── <initializer>() initializer
 │   │   ├─┬ changePrivatePropertyValue(newValue) method
 │   │   │ ├─┬ parameters
 │   │   │ │ └─┬ newValue
 │   │   │ │   └── type: string
 │   │   │ └── returns: void
 │   │   ├─┬ privateMethodValue() method
 │   │   │ └── returns: string
 │   │   └─┬ privatePropertyValue() method
 │   │     └── returns: string
 │   ├─┬ class DoNotRecognizeAnyAsOptional
 │   │ └─┬ members
 │   │   ├── <initializer>() initializer
 │   │   └─┬ method(_requiredAny,_optionalAny,_optionalString) method
 │   │     ├─┬ parameters
 │   │     │ ├─┬ _requiredAny
 │   │     │ │ └── type: any
 │   │     │ ├─┬ _optionalAny
 │   │     │ │ └── type: any
 │   │     │ └─┬ _optionalString
 │   │     │   └── type: Optional<string>
 │   │     └── returns: void
 │   ├─┬ class DocumentedClass
 │   │ └─┬ members
 │   │   ├── <initializer>() initializer
 │   │   ├─┬ greet(greetee) method
 │   │   │ ├─┬ parameters
 │   │   │ │ └─┬ greetee
 │   │   │ │   └── type: Optional<jsii-calc.Greetee>
 │   │   │ └── returns: number
 │   │   └─┬ hola() method
 │   │     └── returns: void
 │   ├─┬ class DontComplainAboutVariadicAfterOptional
 │   │ └─┬ members
 │   │   ├── <initializer>() initializer
 │   │   └─┬ optionalAndVariadic(optional,things) method
 │   │     ├── variadic
 │   │     ├─┬ parameters
 │   │     │ ├─┬ optional
 │   │     │ │ └── type: Optional<string>
 │   │     │ └─┬ things
 │   │     │   ├── type: string
 │   │     │   └── variadic
 │   │     └── returns: string
 │   ├─┬ class DoubleTrouble
 │   │ ├── interfaces: IFriendlyRandomGenerator
 │   │ └─┬ members
 │   │   ├── <initializer>() initializer
 │   │   ├─┬ hello() method
 │   │   │ └── returns: string
 │   │   └─┬ next() method
 │   │     └── returns: number
 │   ├─┬ class EraseUndefinedHashValues
 │   │ └─┬ members
 │   │   ├── <initializer>() initializer
 │   │   ├─┬ doesKeyExist(opts,key) method
 │   │   │ ├── static
 │   │   │ ├─┬ parameters
 │   │   │ │ ├─┬ opts
 │   │   │ │ │ └── type: jsii-calc.EraseUndefinedHashValuesOptions
 │   │   │ │ └─┬ key
 │   │   │ │   └── type: string
 │   │   │ └── returns: boolean
 │   │   ├─┬ prop1IsNull() method
 │   │   │ ├── static
 │   │   │ └── returns: any
 │   │   └─┬ prop2IsUndefined() method
 │   │     ├── static
 │   │     └── returns: any
 │   ├─┬ class ExportedBaseClass
 │   │ └─┬ members
 │   │   ├─┬ <initializer>(success) initializer
 │   │   │ └─┬ parameters
 │   │   │   └─┬ success
 │   │   │     └── type: boolean
 │   │   └─┬ success property
 │   │     ├── immutable
 │   │     └── type: boolean
 │   ├─┬ class GiveMeStructs
 │   │ └─┬ members
 │   │   ├── <initializer>() initializer
 │   │   ├─┬ derivedToFirst(derived) method
 │   │   │ ├─┬ parameters
 │   │   │ │ └─┬ derived
 │   │   │ │   └── type: jsii-calc.DerivedStruct
 │   │   │ └── returns: @scope/jsii-calc-lib.MyFirstStruct
 │   │   ├─┬ readDerivedNonPrimitive(derived) method
 │   │   │ ├─┬ parameters
 │   │   │ │ └─┬ derived
 │   │   │ │   └── type: jsii-calc.DerivedStruct
 │   │   │ └── returns: jsii-calc.DoubleTrouble
 │   │   ├─┬ readFirstNumber(first) method
 │   │   │ ├─┬ parameters
 │   │   │ │ └─┬ first
 │   │   │ │   └── type: @scope/jsii-calc-lib.MyFirstStruct
 │   │   │ └── returns: number
 │   │   └─┬ structLiteral property
 │   │     ├── immutable
 │   │     └── type: @scope/jsii-calc-lib.StructWithOnlyOptionals
 │   ├─┬ class GreetingAugmenter
 │   │ └─┬ members
 │   │   ├── <initializer>() initializer
 │   │   └─┬ betterGreeting(friendly) method
 │   │     ├─┬ parameters
 │   │     │ └─┬ friendly
 │   │     │   └── type: @scope/jsii-calc-lib.IFriendly
 │   │     └── returns: string
 │   ├─┬ class ImplementInternalInterface
 │   │ └─┬ members
 │   │   ├── <initializer>() initializer
 │   │   └─┬ prop property
 │   │     └── type: string
 │   ├─┬ class ImplementsInterfaceWithInternal
 │   │ ├── interfaces: IInterfaceWithInternal
 │   │ └─┬ members
 │   │   ├── <initializer>() initializer
 │   │   └─┬ visible() method
 │   │     └── returns: void
 │   ├─┬ class ImplementsInterfaceWithInternalSubclass
 │   │ ├── base: ImplementsInterfaceWithInternal
 │   │ └─┬ members
 │   │   └── <initializer>() initializer
 │   ├─┬ class ImplementsPrivateInterface
 │   │ └─┬ members
 │   │   ├── <initializer>() initializer
 │   │   └─┬ private property
 │   │     └── type: string
 │   ├─┬ class InbetweenClass
 │   │ ├── base: PublicClass
 │   │ ├── interfaces: IPublicInterface2
 │   │ └─┬ members
 │   │   ├── <initializer>() initializer
 │   │   └─┬ ciao() method
 │   │     └── returns: string
 │   ├─┬ class Foo
 │   │ └─┬ members
 │   │   ├── <initializer>() initializer
 │   │   └─┬ bar property
 │   │     └── type: Optional<string>
 │   ├─┬ class JSII417Derived
 │   │ ├── base: JSII417PublicBaseOfBase
 │   │ └─┬ members
 │   │   ├─┬ <initializer>(property) initializer
 │   │   │ └─┬ parameters
 │   │   │   └─┬ property
 │   │   │     └── type: string
 │   │   ├─┬ bar() method
 │   │   │ └── returns: void
 │   │   ├─┬ baz() method
 │   │   │ └── returns: void
 │   │   └─┬ property property
 │   │     ├── immutable
 │   │     ├── protected
 │   │     └── type: string
 │   ├─┬ class JSII417PublicBaseOfBase
 │   │ └─┬ members
 │   │   ├── <initializer>() initializer
 │   │   ├─┬ makeInstance() method
 │   │   │ ├── static
 │   │   │ └── returns: jsii-calc.JSII417PublicBaseOfBase
 │   │   ├─┬ foo() method
 │   │   │ └── returns: void
 │   │   └─┬ hasRoot property
 │   │     ├── immutable
 │   │     └── type: boolean
 │   ├─┬ class JSObjectLiteralForInterface
 │   │ └─┬ members
 │   │   ├── <initializer>() initializer
 │   │   ├─┬ giveMeFriendly() method
 │   │   │ └── returns: @scope/jsii-calc-lib.IFriendly
 │   │   └─┬ giveMeFriendlyGenerator() method
 │   │     └── returns: jsii-calc.IFriendlyRandomGenerator
 │   ├─┬ class JSObjectLiteralToNative
 │   │ └─┬ members
 │   │   ├── <initializer>() initializer
 │   │   └─┬ returnLiteral() method
 │   │     └── returns: jsii-calc.JSObjectLiteralToNativeClass
 │   ├─┬ class JSObjectLiteralToNativeClass
 │   │ └─┬ members
 │   │   ├── <initializer>() initializer
 │   │   ├─┬ propA property
 │   │   │ └── type: string
 │   │   └─┬ propB property
 │   │     └── type: number
 │   ├─┬ class JavaReservedWords
 │   │ └─┬ members
 │   │   ├── <initializer>() initializer
 │   │   ├─┬ abstract() method
 │   │   │ └── returns: void
 │   │   ├─┬ assert() method
 │   │   │ └── returns: void
 │   │   ├─┬ boolean() method
 │   │   │ └── returns: void
 │   │   ├─┬ break() method
 │   │   │ └── returns: void
 │   │   ├─┬ byte() method
 │   │   │ └── returns: void
 │   │   ├─┬ case() method
 │   │   │ └── returns: void
 │   │   ├─┬ catch() method
 │   │   │ └── returns: void
 │   │   ├─┬ char() method
 │   │   │ └── returns: void
 │   │   ├─┬ class() method
 │   │   │ └── returns: void
 │   │   ├─┬ const() method
 │   │   │ └── returns: void
 │   │   ├─┬ continue() method
 │   │   │ └── returns: void
 │   │   ├─┬ default() method
 │   │   │ └── returns: void
 │   │   ├─┬ do() method
 │   │   │ └── returns: void
 │   │   ├─┬ double() method
 │   │   │ └── returns: void
 │   │   ├─┬ else() method
 │   │   │ └── returns: void
 │   │   ├─┬ enum() method
 │   │   │ └── returns: void
 │   │   ├─┬ extends() method
 │   │   │ └── returns: void
 │   │   ├─┬ false() method
 │   │   │ └── returns: void
 │   │   ├─┬ final() method
 │   │   │ └── returns: void
 │   │   ├─┬ finally() method
 │   │   │ └── returns: void
 │   │   ├─┬ float() method
 │   │   │ └── returns: void
 │   │   ├─┬ for() method
 │   │   │ └── returns: void
 │   │   ├─┬ goto() method
 │   │   │ └── returns: void
 │   │   ├─┬ if() method
 │   │   │ └── returns: void
 │   │   ├─┬ implements() method
 │   │   │ └── returns: void
 │   │   ├─┬ import() method
 │   │   │ └── returns: void
 │   │   ├─┬ instanceof() method
 │   │   │ └── returns: void
 │   │   ├─┬ int() method
 │   │   │ └── returns: void
 │   │   ├─┬ interface() method
 │   │   │ └── returns: void
 │   │   ├─┬ long() method
 │   │   │ └── returns: void
 │   │   ├─┬ native() method
 │   │   │ └── returns: void
 │   │   ├─┬ new() method
 │   │   │ └── returns: void
 │   │   ├─┬ null() method
 │   │   │ └── returns: void
 │   │   ├─┬ package() method
 │   │   │ └── returns: void
 │   │   ├─┬ private() method
 │   │   │ └── returns: void
 │   │   ├─┬ protected() method
 │   │   │ └── returns: void
 │   │   ├─┬ public() method
 │   │   │ └── returns: void
 │   │   ├─┬ return() method
 │   │   │ └── returns: void
 │   │   ├─┬ short() method
 │   │   │ └── returns: void
 │   │   ├─┬ static() method
 │   │   │ └── returns: void
 │   │   ├─┬ strictfp() method
 │   │   │ └── returns: void
 │   │   ├─┬ super() method
 │   │   │ └── returns: void
 │   │   ├─┬ switch() method
 │   │   │ └── returns: void
 │   │   ├─┬ synchronized() method
 │   │   │ └── returns: void
 │   │   ├─┬ this() method
 │   │   │ └── returns: void
 │   │   ├─┬ throw() method
 │   │   │ └── returns: void
 │   │   ├─┬ throws() method
 │   │   │ └── returns: void
 │   │   ├─┬ transient() method
 │   │   │ └── returns: void
 │   │   ├─┬ true() method
 │   │   │ └── returns: void
 │   │   ├─┬ try() method
 │   │   │ └── returns: void
 │   │   ├─┬ void() method
 │   │   │ └── returns: void
 │   │   ├─┬ volatile() method
 │   │   │ └── returns: void
 │   │   └─┬ while property
 │   │     └── type: string
 │   ├─┬ class JsiiAgent
 │   │ └─┬ members
 │   │   ├── <initializer>() initializer
 │   │   └─┬ jsiiAgent property
 │   │     ├── immutable
 │   │     ├── static
 │   │     └── type: Optional<string>
 │   ├─┬ class Multiply
 │   │ ├── base: BinaryOperation
 │   │ ├── interfaces: IFriendlier,IRandomNumberGenerator
 │   │ └─┬ members
 │   │   ├─┬ <initializer>(lhs,rhs) initializer
 │   │   │ └─┬ parameters
 │   │   │   ├─┬ lhs
 │   │   │   │ └── type: @scope/jsii-calc-lib.Value
 │   │   │   └─┬ rhs
 │   │   │     └── type: @scope/jsii-calc-lib.Value
 │   │   ├─┬ farewell() method
 │   │   │ └── returns: string
 │   │   ├─┬ goodbye() method
 │   │   │ └── returns: string
 │   │   ├─┬ next() method
 │   │   │ └── returns: number
 │   │   ├─┬ toString() method
 │   │   │ └── returns: string
 │   │   └─┬ value property
 │   │     ├── immutable
 │   │     └── type: number
 │   ├─┬ class Negate
 │   │ ├── base: UnaryOperation
 │   │ ├── interfaces: IFriendlier
 │   │ └─┬ members
 │   │   ├─┬ <initializer>(operand) initializer
 │   │   │ └─┬ parameters
 │   │   │   └─┬ operand
 │   │   │     └── type: @scope/jsii-calc-lib.Value
 │   │   ├─┬ farewell() method
 │   │   │ └── returns: string
 │   │   ├─┬ goodbye() method
 │   │   │ └── returns: string
 │   │   ├─┬ hello() method
 │   │   │ └── returns: string
 │   │   ├─┬ toString() method
 │   │   │ └── returns: string
 │   │   └─┬ value property
 │   │     ├── immutable
 │   │     └── type: number
 │   ├─┬ class NodeStandardLibrary
 │   │ └─┬ members
 │   │   ├── <initializer>() initializer
 │   │   ├─┬ cryptoSha256() method
 │   │   │ └── returns: string
 │   │   ├─┬ fsReadFile() method
 │   │   │ └── returns: Promise<string>
 │   │   ├─┬ fsReadFileSync() method
 │   │   │ └── returns: string
 │   │   └─┬ osPlatform property
 │   │     ├── immutable
 │   │     └── type: string
 │   ├─┬ class NullShouldBeTreatedAsUndefined
 │   │ └─┬ members
 │   │   ├─┬ <initializer>(_param1,optional) initializer
 │   │   │ └─┬ parameters
 │   │   │   ├─┬ _param1
 │   │   │   │ └── type: string
 │   │   │   └─┬ optional
 │   │   │     └── type: any
 │   │   ├─┬ giveMeUndefined(value) method
 │   │   │ ├─┬ parameters
 │   │   │ │ └─┬ value
 │   │   │ │   └── type: any
 │   │   │ └── returns: void
 │   │   ├─┬ giveMeUndefinedInsideAnObject(input) method
 │   │   │ ├─┬ parameters
 │   │   │ │ └─┬ input
 │   │   │ │   └── type: jsii-calc.NullShouldBeTreatedAsUndefinedData
 │   │   │ └── returns: void
 │   │   ├─┬ verifyPropertyIsUndefined() method
 │   │   │ └── returns: void
 │   │   └─┬ changeMeToUndefined property
 │   │     └── type: Optional<string>
 │   ├─┬ class NumberGenerator
 │   │ └─┬ members
 │   │   ├─┬ <initializer>(generator) initializer
 │   │   │ └─┬ parameters
 │   │   │   └─┬ generator
 │   │   │     └── type: jsii-calc.IRandomNumberGenerator
 │   │   ├─┬ isSameGenerator(gen) method
 │   │   │ ├─┬ parameters
 │   │   │ │ └─┬ gen
 │   │   │ │   └── type: jsii-calc.IRandomNumberGenerator
 │   │   │ └── returns: boolean
 │   │   ├─┬ nextTimes100() method
 │   │   │ └── returns: number
 │   │   └─┬ generator property
 │   │     └── type: jsii-calc.IRandomNumberGenerator
 │   ├─┬ class ObjectRefsInCollections
 │   │ └─┬ members
 │   │   ├── <initializer>() initializer
 │   │   ├─┬ sumFromArray(values) method
 │   │   │ ├─┬ parameters
 │   │   │ │ └─┬ values
 │   │   │ │   └── type: Array<@scope/jsii-calc-lib.Value>
 │   │   │ └── returns: number
 │   │   └─┬ sumFromMap(values) method
 │   │     ├─┬ parameters
 │   │     │ └─┬ values
 │   │     │   └── type: Map<string => @scope/jsii-calc-lib.Value>
 │   │     └── returns: number
 │   ├─┬ class Old
 │   │ └─┬ members
 │   │   ├── <initializer>() initializer
 │   │   └─┬ doAThing() method
 │   │     └── returns: void
 │   ├─┬ class OptionalConstructorArgument
 │   │ └─┬ members
 │   │   ├─┬ <initializer>(arg1,arg2,arg3) initializer
 │   │   │ └─┬ parameters
 │   │   │   ├─┬ arg1
 │   │   │   │ └── type: number
 │   │   │   ├─┬ arg2
 │   │   │   │ └── type: string
 │   │   │   └─┬ arg3
 │   │   │     └── type: Optional<date>
 │   │   ├─┬ arg1 property
 │   │   │ ├── immutable
 │   │   │ └── type: number
 │   │   ├─┬ arg2 property
 │   │   │ ├── immutable
 │   │   │ └── type: string
 │   │   └─┬ arg3 property
 │   │     ├── immutable
 │   │     └── type: Optional<date>
 │   ├─┬ class OptionalStructConsumer
 │   │ └─┬ members
 │   │   ├─┬ <initializer>(optionalStruct) initializer
 │   │   │ └─┬ parameters
 │   │   │   └─┬ optionalStruct
 │   │   │     └── type: Optional<jsii-calc.OptionalStruct>
 │   │   ├─┬ parameterWasUndefined property
 │   │   │ ├── immutable
 │   │   │ └── type: boolean
 │   │   └─┬ fieldValue property
 │   │     ├── immutable
 │   │     └── type: Optional<string>
 │   ├─┬ class OverrideReturnsObject
 │   │ └─┬ members
 │   │   ├── <initializer>() initializer
 │   │   └─┬ test(obj) method
 │   │     ├─┬ parameters
 │   │     │ └─┬ obj
 │   │     │   └── type: jsii-calc.IReturnsNumber
 │   │     └── returns: number
 │   ├─┬ class PartiallyInitializedThisConsumer
 │   │ └─┬ members
 │   │   ├── <initializer>() initializer
 │   │   └─┬ consumePartiallyInitializedThis(obj,dt,ev) method
 │   │     ├── abstract
 │   │     ├─┬ parameters
 │   │     │ ├─┬ obj
 │   │     │ │ └── type: jsii-calc.ConstructorPassesThisOut
 │   │     │ ├─┬ dt
 │   │     │ │ └── type: date
 │   │     │ └─┬ ev
 │   │     │   └── type: jsii-calc.AllTypesEnum
 │   │     └── returns: string
 │   ├─┬ class Polymorphism
 │   │ └─┬ members
 │   │   ├── <initializer>() initializer
 │   │   └─┬ sayHello(friendly) method
 │   │     ├─┬ parameters
 │   │     │ └─┬ friendly
 │   │     │   └── type: @scope/jsii-calc-lib.IFriendly
 │   │     └── returns: string
 │   ├─┬ class Power
 │   │ ├── base: CompositeOperation
 │   │ └─┬ members
 │   │   ├─┬ <initializer>(base,pow) initializer
 │   │   │ └─┬ parameters
 │   │   │   ├─┬ base
 │   │   │   │ └── type: @scope/jsii-calc-lib.Value
 │   │   │   └─┬ pow
 │   │   │     └── type: @scope/jsii-calc-lib.Value
 │   │   ├─┬ base property
 │   │   │ ├── immutable
 │   │   │ └── type: @scope/jsii-calc-lib.Value
 │   │   ├─┬ expression property
 │   │   │ ├── immutable
 │   │   │ └── type: @scope/jsii-calc-lib.Value
 │   │   └─┬ pow property
 │   │     ├── immutable
 │   │     └── type: @scope/jsii-calc-lib.Value
 │   ├─┬ class PublicClass
 │   │ └─┬ members
 │   │   ├── <initializer>() initializer
 │   │   └─┬ hello() method
 │   │     └── returns: void
 │   ├─┬ class PythonReservedWords
 │   │ └─┬ members
 │   │   ├── <initializer>() initializer
 │   │   ├─┬ and() method
 │   │   │ └── returns: void
 │   │   ├─┬ as() method
 │   │   │ └── returns: void
 │   │   ├─┬ assert() method
 │   │   │ └── returns: void
 │   │   ├─┬ async() method
 │   │   │ └── returns: void
 │   │   ├─┬ await() method
 │   │   │ └── returns: void
 │   │   ├─┬ break() method
 │   │   │ └── returns: void
 │   │   ├─┬ class() method
 │   │   │ └── returns: void
 │   │   ├─┬ continue() method
 │   │   │ └── returns: void
 │   │   ├─┬ def() method
 │   │   │ └── returns: void
 │   │   ├─┬ del() method
 │   │   │ └── returns: void
 │   │   ├─┬ elif() method
 │   │   │ └── returns: void
 │   │   ├─┬ else() method
 │   │   │ └── returns: void
 │   │   ├─┬ except() method
 │   │   │ └── returns: void
 │   │   ├─┬ finally() method
 │   │   │ └── returns: void
 │   │   ├─┬ for() method
 │   │   │ └── returns: void
 │   │   ├─┬ from() method
 │   │   │ └── returns: void
 │   │   ├─┬ global() method
 │   │   │ └── returns: void
 │   │   ├─┬ if() method
 │   │   │ └── returns: void
 │   │   ├─┬ import() method
 │   │   │ └── returns: void
 │   │   ├─┬ in() method
 │   │   │ └── returns: void
 │   │   ├─┬ is() method
 │   │   │ └── returns: void
 │   │   ├─┬ lambda() method
 │   │   │ └── returns: void
 │   │   ├─┬ nonlocal() method
 │   │   │ └── returns: void
 │   │   ├─┬ not() method
 │   │   │ └── returns: void
 │   │   ├─┬ or() method
 │   │   │ └── returns: void
 │   │   ├─┬ pass() method
 │   │   │ └── returns: void
 │   │   ├─┬ raise() method
 │   │   │ └── returns: void
 │   │   ├─┬ return() method
 │   │   │ └── returns: void
 │   │   ├─┬ try() method
 │   │   │ └── returns: void
 │   │   ├─┬ while() method
 │   │   │ └── returns: void
 │   │   ├─┬ with() method
 │   │   │ └── returns: void
 │   │   └─┬ yield() method
 │   │     └── returns: void
 │   ├─┬ class ReferenceEnumFromScopedPackage
 │   │ └─┬ members
 │   │   ├── <initializer>() initializer
 │   │   ├─┬ loadFoo() method
 │   │   │ └── returns: Optional<@scope/jsii-calc-lib.EnumFromScopedModule>
 │   │   ├─┬ saveFoo(value) method
 │   │   │ ├─┬ parameters
 │   │   │ │ └─┬ value
 │   │   │ │   └── type: @scope/jsii-calc-lib.EnumFromScopedModule
 │   │   │ └── returns: void
 │   │   └─┬ foo property
 │   │     └── type: Optional<@scope/jsii-calc-lib.EnumFromScopedModule>
 │   ├─┬ class ReturnsPrivateImplementationOfInterface
 │   │ └─┬ members
 │   │   ├── <initializer>() initializer
 │   │   └─┬ privateImplementation property
 │   │     ├── immutable
 │   │     └── type: jsii-calc.IPrivatelyImplemented
 │   ├─┬ class RuntimeTypeChecking
 │   │ └─┬ members
 │   │   ├── <initializer>() initializer
 │   │   ├─┬ methodWithDefaultedArguments(arg1,arg2,arg3) method
 │   │   │ ├─┬ parameters
 │   │   │ │ ├─┬ arg1
 │   │   │ │ │ └── type: Optional<number>
 │   │   │ │ ├─┬ arg2
 │   │   │ │ │ └── type: Optional<string>
 │   │   │ │ └─┬ arg3
 │   │   │ │   └── type: Optional<date>
 │   │   │ └── returns: void
 │   │   ├─┬ methodWithOptionalAnyArgument(arg) method
 │   │   │ ├─┬ parameters
 │   │   │ │ └─┬ arg
 │   │   │ │   └── type: any
 │   │   │ └── returns: void
 │   │   └─┬ methodWithOptionalArguments(arg1,arg2,arg3) method
 │   │     ├─┬ parameters
 │   │     │ ├─┬ arg1
 │   │     │ │ └── type: number
 │   │     │ ├─┬ arg2
 │   │     │ │ └── type: string
 │   │     │ └─┬ arg3
 │   │     │   └── type: Optional<date>
 │   │     └── returns: void
 │   ├─┬ class SingleInstanceTwoTypes
 │   │ └─┬ members
 │   │   ├── <initializer>() initializer
 │   │   ├─┬ interface1() method
 │   │   │ └── returns: jsii-calc.InbetweenClass
 │   │   └─┬ interface2() method
 │   │     └── returns: jsii-calc.IPublicInterface
 │   ├─┬ class StaticContext
 │   │ └─┬ members
 │   │   ├─┬ canAccessStaticContext() method
 │   │   │ ├── static
 │   │   │ └── returns: boolean
 │   │   └─┬ staticVariable property
 │   │     ├── static
 │   │     └── type: boolean
 │   ├─┬ class Statics
 │   │ └─┬ members
 │   │   ├─┬ <initializer>(value) initializer
 │   │   │ └─┬ parameters
 │   │   │   └─┬ value
 │   │   │     └── type: string
 │   │   ├─┬ staticMethod(name) method
 │   │   │ ├── static
 │   │   │ ├─┬ parameters
 │   │   │ │ └─┬ name
 │   │   │ │   └── type: string
 │   │   │ └── returns: string
 │   │   ├─┬ justMethod() method
 │   │   │ └── returns: string
 │   │   ├─┬ BAR property
 │   │   │ ├── const
 │   │   │ ├── immutable
 │   │   │ ├── static
 │   │   │ └── type: number
 │   │   ├─┬ ConstObj property
 │   │   │ ├── const
 │   │   │ ├── immutable
 │   │   │ ├── static
 │   │   │ └── type: jsii-calc.DoubleTrouble
 │   │   ├─┬ Foo property
 │   │   │ ├── const
 │   │   │ ├── immutable
 │   │   │ ├── static
 │   │   │ └── type: string
 │   │   ├─┬ zooBar property
 │   │   │ ├── const
 │   │   │ ├── immutable
 │   │   │ ├── static
 │   │   │ └── type: Map<string => string>
 │   │   ├─┬ instance property
 │   │   │ ├── static
 │   │   │ └── type: jsii-calc.Statics
 │   │   ├─┬ nonConstStatic property
 │   │   │ ├── static
 │   │   │ └── type: number
 │   │   └─┬ value property
 │   │     ├── immutable
 │   │     └── type: string
 │   ├─┬ class StripInternal
 │   │ └─┬ members
 │   │   ├── <initializer>() initializer
 │   │   └─┬ youSeeMe property
 │   │     └── type: string
 │   ├─┬ class Sum
 │   │ ├── base: CompositeOperation
 │   │ └─┬ members
 │   │   ├── <initializer>() initializer
 │   │   ├─┬ expression property
 │   │   │ ├── immutable
 │   │   │ └── type: @scope/jsii-calc-lib.Value
 │   │   └─┬ parts property
 │   │     └── type: Array<@scope/jsii-calc-lib.Value>
 │   ├─┬ class SyncVirtualMethods
 │   │ └─┬ members
 │   │   ├── <initializer>() initializer
 │   │   ├─┬ callerIsAsync() method
 │   │   │ └── returns: Promise<number>
 │   │   ├─┬ callerIsMethod() method
 │   │   │ └── returns: number
 │   │   ├─┬ modifyOtherProperty(value) method
 │   │   │ ├─┬ parameters
 │   │   │ │ └─┬ value
 │   │   │ │   └── type: string
 │   │   │ └── returns: void
 │   │   ├─┬ modifyValueOfTheProperty(value) method
 │   │   │ ├─┬ parameters
 │   │   │ │ └─┬ value
 │   │   │ │   └── type: string
 │   │   │ └── returns: void
 │   │   ├─┬ readA() method
 │   │   │ └── returns: number
 │   │   ├─┬ retrieveOtherProperty() method
 │   │   │ └── returns: string
 │   │   ├─┬ retrieveReadOnlyProperty() method
 │   │   │ └── returns: string
 │   │   ├─┬ retrieveValueOfTheProperty() method
 │   │   │ └── returns: string
 │   │   ├─┬ virtualMethod(n) method
 │   │   │ ├─┬ parameters
 │   │   │ │ └─┬ n
 │   │   │ │   └── type: number
 │   │   │ └── returns: number
 │   │   ├─┬ writeA(value) method
 │   │   │ ├─┬ parameters
 │   │   │ │ └─┬ value
 │   │   │ │   └── type: number
 │   │   │ └── returns: void
 │   │   ├─┬ readonlyProperty property
 │   │   │ ├── immutable
 │   │   │ └── type: string
 │   │   ├─┬ a property
 │   │   │ └── type: number
 │   │   ├─┬ callerIsProperty property
 │   │   │ └── type: number
 │   │   ├─┬ otherProperty property
 │   │   │ └── type: string
 │   │   ├─┬ theProperty property
 │   │   │ └── type: string
 │   │   └─┬ valueOfOtherProperty property
 │   │     └── type: string
 │   ├─┬ class Thrower
 │   │ └─┬ members
 │   │   ├── <initializer>() initializer
 │   │   └─┬ throwError() method
 │   │     └── returns: void
 │   ├─┬ class UnaryOperation
 │   │ ├── base: Operation
 │   │ └─┬ members
 │   │   ├─┬ <initializer>(operand) initializer
 │   │   │ └─┬ parameters
 │   │   │   └─┬ operand
 │   │   │     └── type: @scope/jsii-calc-lib.Value
 │   │   └─┬ operand property
 │   │     ├── immutable
 │   │     └── type: @scope/jsii-calc-lib.Value
 │   ├─┬ class UseBundledDependency
 │   │ └─┬ members
 │   │   ├── <initializer>() initializer
 │   │   └─┬ value() method
 │   │     └── returns: any
 │   ├─┬ class UseCalcBase
 │   │ └─┬ members
 │   │   ├── <initializer>() initializer
 │   │   └─┬ hello() method
 │   │     └── returns: @scope/jsii-calc-base.Base
 │   ├─┬ class UsesInterfaceWithProperties
 │   │ └─┬ members
 │   │   ├─┬ <initializer>(obj) initializer
 │   │   │ └─┬ parameters
 │   │   │   └─┬ obj
 │   │   │     └── type: jsii-calc.IInterfaceWithProperties
 │   │   ├─┬ justRead() method
 │   │   │ └── returns: string
 │   │   ├─┬ readStringAndNumber(ext) method
 │   │   │ ├─┬ parameters
 │   │   │ │ └─┬ ext
 │   │   │ │   └── type: jsii-calc.IInterfaceWithPropertiesExtension
 │   │   │ └── returns: string
 │   │   ├─┬ writeAndRead(value) method
 │   │   │ ├─┬ parameters
 │   │   │ │ └─┬ value
 │   │   │ │   └── type: string
 │   │   │ └── returns: string
 │   │   └─┬ obj property
 │   │     ├── immutable
 │   │     └── type: jsii-calc.IInterfaceWithProperties
 │   ├─┬ class VariadicMethod
 │   │ └─┬ members
 │   │   ├─┬ <initializer>(prefix) initializer
 │   │   │ ├── variadic
 │   │   │ └─┬ parameters
 │   │   │   └─┬ prefix
 │   │   │     ├── type: number
 │   │   │     └── variadic
 │   │   └─┬ asArray(first,others) method
 │   │     ├── variadic
 │   │     ├─┬ parameters
 │   │     │ ├─┬ first
 │   │     │ │ └── type: number
 │   │     │ └─┬ others
 │   │     │   ├── type: number
 │   │     │   └── variadic
 │   │     └── returns: Array<number>
 │   ├─┬ class VirtualMethodPlayground
 │   │ └─┬ members
 │   │   ├── <initializer>() initializer
 │   │   ├─┬ overrideMeAsync(index) method
 │   │   │ ├─┬ parameters
 │   │   │ │ └─┬ index
 │   │   │ │   └── type: number
 │   │   │ └── returns: Promise<number>
 │   │   ├─┬ overrideMeSync(index) method
 │   │   │ ├─┬ parameters
 │   │   │ │ └─┬ index
 │   │   │ │   └── type: number
 │   │   │ └── returns: number
 │   │   ├─┬ parallelSumAsync(count) method
 │   │   │ ├─┬ parameters
 │   │   │ │ └─┬ count
 │   │   │ │   └── type: number
 │   │   │ └── returns: Promise<number>
 │   │   ├─┬ serialSumAsync(count) method
 │   │   │ ├─┬ parameters
 │   │   │ │ └─┬ count
 │   │   │ │   └── type: number
 │   │   │ └── returns: Promise<number>
 │   │   └─┬ sumSync(count) method
 │   │     ├─┬ parameters
 │   │     │ └─┬ count
 │   │     │   └── type: number
 │   │     └── returns: number
 │   ├─┬ class CompositeOperation
 │   │ ├── base: Operation
 │   │ └─┬ members
 │   │   ├── <initializer>() initializer
 │   │   ├─┬ toString() method
 │   │   │ └── returns: string
 │   │   ├─┬ expression property
 │   │   │ ├── abstract
 │   │   │ ├── immutable
 │   │   │ └── type: @scope/jsii-calc-lib.Value
 │   │   ├─┬ value property
 │   │   │ ├── immutable
 │   │   │ └── type: number
 │   │   ├─┬ decorationPostfixes property
 │   │   │ └── type: Array<string>
 │   │   ├─┬ decorationPrefixes property
 │   │   │ └── type: Array<string>
 │   │   └─┬ stringStyle property
 │   │     └── type: jsii-calc.composition.CompositeOperation.CompositionStringStyle
 │   ├─┬ interface CalculatorProps
 │   │ └─┬ members
 │   │   ├─┬ initialValue property
 │   │   │ ├── abstract
 │   │   │ ├── immutable
 │   │   │ └── type: Optional<number>
 │   │   └─┬ maximumValue property
 │   │     ├── abstract
 │   │     ├── immutable
 │   │     └── type: Optional<number>
 │   ├─┬ interface DerivedStruct
 │   │ ├─┬ interfaces
 │   │ │ └── MyFirstStruct
 │   │ └─┬ members
 │   │   ├─┬ anotherRequired property
 │   │   │ ├── abstract
 │   │   │ ├── immutable
 │   │   │ └── type: date
 │   │   ├─┬ bool property
 │   │   │ ├── abstract
 │   │   │ ├── immutable
 │   │   │ └── type: boolean
 │   │   ├─┬ nonPrimitive property
 │   │   │ ├── abstract
 │   │   │ ├── immutable
 │   │   │ └── type: jsii-calc.DoubleTrouble
 │   │   ├─┬ anotherOptional property
 │   │   │ ├── abstract
 │   │   │ ├── immutable
 │   │   │ └── type: Optional<Map<string => @scope/jsii-calc-lib.Value>>
 │   │   ├─┬ optionalAny property
 │   │   │ ├── abstract
 │   │   │ ├── immutable
 │   │   │ └── type: any
 │   │   └─┬ optionalArray property
 │   │     ├── abstract
 │   │     ├── immutable
 │   │     └── type: Optional<Array<string>>
 │   ├─┬ interface EraseUndefinedHashValuesOptions
 │   │ └─┬ members
 │   │   ├─┬ option1 property
 │   │   │ ├── abstract
 │   │   │ ├── immutable
 │   │   │ └── type: Optional<string>
 │   │   └─┬ option2 property
 │   │     ├── abstract
 │   │     ├── immutable
 │   │     └── type: Optional<string>
 │   ├─┬ interface ExtendsInternalInterface
 │   │ └─┬ members
 │   │   ├─┬ boom property
 │   │   │ ├── abstract
 │   │   │ ├── immutable
 │   │   │ └── type: boolean
 │   │   └─┬ prop property
 │   │     ├── abstract
 │   │     ├── immutable
 │   │     └── type: string
 │   ├─┬ interface Greetee
 │   │ └─┬ members
 │   │   └─┬ name property
 │   │     ├── abstract
 │   │     ├── immutable
 │   │     └── type: Optional<string>
 │   ├─┬ interface IAnotherPublicInterface
 │   │ └─┬ members
 │   │   └─┬ a property
 │   │     ├── abstract
 │   │     └── type: string
 │   ├─┬ interface IExtendsPrivateInterface
 │   │ └─┬ members
 │   │   ├─┬ moreThings property
 │   │   │ ├── abstract
 │   │   │ ├── immutable
 │   │   │ └── type: Array<string>
 │   │   └─┬ private property
 │   │     ├── abstract
 │   │     └── type: string
 │   ├─┬ interface IFriendlier
 │   │ ├─┬ interfaces
 │   │ │ └── IFriendly
 │   │ └─┬ members
 │   │   ├─┬ farewell() method
 │   │   │ ├── abstract
 │   │   │ └── returns: string
 │   │   └─┬ goodbye() method
 │   │     ├── abstract
 │   │     └── returns: string
 │   ├─┬ interface IFriendlyRandomGenerator
 │   │ ├─┬ interfaces
 │   │ │ ├── IRandomNumberGenerator
 │   │ │ └── IFriendly
 │   │ └── members
 │   ├─┬ interface IInterfaceImplementedByAbstractClass
 │   │ └─┬ members
 │   │   └─┬ propFromInterface property
 │   │     ├── abstract
 │   │     ├── immutable
 │   │     └── type: string
 │   ├─┬ interface IInterfaceThatShouldNotBeADataType
 │   │ ├─┬ interfaces
 │   │ │ └── IInterfaceWithMethods
 │   │ └─┬ members
 │   │   └─┬ otherValue property
 │   │     ├── abstract
 │   │     ├── immutable
 │   │     └── type: string
 │   ├─┬ interface IInterfaceWithInternal
 │   │ └─┬ members
 │   │   └─┬ visible() method
 │   │     ├── abstract
 │   │     └── returns: void
 │   ├─┬ interface IInterfaceWithMethods
 │   │ └─┬ members
 │   │   ├─┬ doThings() method
 │   │   │ ├── abstract
 │   │   │ └── returns: void
 │   │   └─┬ value property
 │   │     ├── abstract
 │   │     ├── immutable
 │   │     └── type: string
 │   ├─┬ interface IInterfaceWithOptionalMethodArguments
 │   │ └─┬ members
 │   │   └─┬ hello(arg1,arg2) method
 │   │     ├── abstract
 │   │     ├─┬ parameters
 │   │     │ ├─┬ arg1
 │   │     │ │ └── type: string
 │   │     │ └─┬ arg2
 │   │     │   └── type: Optional<number>
 │   │     └── returns: void
 │   ├─┬ interface IInterfaceWithProperties
 │   │ └─┬ members
 │   │   ├─┬ readOnlyString property
 │   │   │ ├── abstract
 │   │   │ ├── immutable
 │   │   │ └── type: string
 │   │   └─┬ readWriteString property
 │   │     ├── abstract
 │   │     └── type: string
 │   ├─┬ interface IInterfaceWithPropertiesExtension
 │   │ ├─┬ interfaces
 │   │ │ └── IInterfaceWithProperties
 │   │ └─┬ members
 │   │   └─┬ foo property
 │   │     ├── abstract
 │   │     └── type: number
 │   ├─┬ interface IJSII417Derived
 │   │ ├─┬ interfaces
 │   │ │ └── IJSII417PublicBaseOfBase
 │   │ └─┬ members
 │   │   ├─┬ bar() method
 │   │   │ ├── abstract
 │   │   │ └── returns: void
 │   │   ├─┬ baz() method
 │   │   │ ├── abstract
 │   │   │ └── returns: void
 │   │   └─┬ property property
 │   │     ├── abstract
 │   │     ├── immutable
 │   │     └── type: string
 │   ├─┬ interface IJSII417PublicBaseOfBase
 │   │ └─┬ members
 │   │   ├─┬ foo() method
 │   │   │ ├── abstract
 │   │   │ └── returns: void
 │   │   └─┬ hasRoot property
 │   │     ├── abstract
 │   │     ├── immutable
 │   │     └── type: boolean
 │   ├─┬ interface IMutableObjectLiteral
 │   │ └─┬ members
 │   │   └─┬ value property
 │   │     ├── abstract
 │   │     └── type: string
 │   ├─┬ interface INonInternalInterface
 │   │ ├─┬ interfaces
 │   │ │ └── IAnotherPublicInterface
 │   │ └─┬ members
 │   │   ├─┬ b property
 │   │   │ ├── abstract
 │   │   │ └── type: string
 │   │   └─┬ c property
 │   │     ├── abstract
 │   │     └── type: string
 │   ├─┬ interface IPrivatelyImplemented
 │   │ └─┬ members
 │   │   └─┬ success property
 │   │     ├── abstract
 │   │     ├── immutable
 │   │     └── type: boolean
 │   ├─┬ interface IPublicInterface
 │   │ └─┬ members
 │   │   └─┬ bye() method
 │   │     ├── abstract
 │   │     └── returns: string
 │   ├─┬ interface IPublicInterface2
 │   │ └─┬ members
 │   │   └─┬ ciao() method
 │   │     ├── abstract
 │   │     └── returns: string
 │   ├─┬ interface IRandomNumberGenerator
 │   │ └─┬ members
 │   │   └─┬ next() method
 │   │     ├── abstract
 │   │     └── returns: number
 │   ├─┬ interface IReturnsNumber
 │   │ └─┬ members
 │   │   ├─┬ obtainNumber() method
 │   │   │ ├── abstract
 │   │   │ └── returns: @scope/jsii-calc-lib.IDoublable
 │   │   └─┬ numberProp property
 │   │     ├── abstract
 │   │     ├── immutable
 │   │     └── type: @scope/jsii-calc-lib.Number
 │   ├─┬ interface ImplictBaseOfBase
 │   │ ├─┬ interfaces
 │   │ │ └── BaseProps
 │   │ └─┬ members
 │   │   └─┬ goo property
 │   │     ├── abstract
 │   │     ├── immutable
 │   │     └── type: date
 │   ├─┬ interface Hello
 │   │ └─┬ members
 │   │   └─┬ foo property
 │   │     ├── abstract
 │   │     ├── immutable
 │   │     └── type: number
 │   ├─┬ interface Hello
 │   │ └─┬ members
 │   │   └─┬ foo property
 │   │     ├── abstract
 │   │     ├── immutable
 │   │     └── type: number
 │   ├─┬ interface LoadBalancedFargateServiceProps
 │   │ └─┬ members
 │   │   ├─┬ containerPort property
 │   │   │ ├── abstract
 │   │   │ ├── immutable
 │   │   │ └── type: Optional<number>
 │   │   ├─┬ cpu property
 │   │   │ ├── abstract
 │   │   │ ├── immutable
 │   │   │ └── type: Optional<string>
 │   │   ├─┬ memoryMiB property
 │   │   │ ├── abstract
 │   │   │ ├── immutable
 │   │   │ └── type: Optional<string>
 │   │   ├─┬ publicLoadBalancer property
 │   │   │ ├── abstract
 │   │   │ ├── immutable
 │   │   │ └── type: Optional<boolean>
 │   │   └─┬ publicTasks property
 │   │     ├── abstract
 │   │     ├── immutable
 │   │     └── type: Optional<boolean>
 │   ├─┬ interface NullShouldBeTreatedAsUndefinedData
 │   │ └─┬ members
 │   │   ├─┬ arrayWithThreeElementsAndUndefinedAsSecondArgument property
 │   │   │ ├── abstract
 │   │   │ ├── immutable
 │   │   │ └── type: Array<any>
 │   │   └─┬ thisShouldBeUndefined property
 │   │     ├── abstract
 │   │     ├── immutable
 │   │     └── type: any
 │   ├─┬ interface OptionalStruct
 │   │ └─┬ members
 │   │   └─┬ field property
 │   │     ├── abstract
 │   │     ├── immutable
 │   │     └── type: Optional<string>
 │   ├─┬ interface UnionProperties
 │   │ └─┬ members
 │   │   ├─┬ bar property
 │   │   │ ├── abstract
 │   │   │ ├── immutable
 │   │   │ └── type: string | number | jsii-calc.AllTypes
 │   │   └─┬ foo property
 │   │     ├── abstract
 │   │     ├── immutable
 │   │     └── type: Optional<string | number>
 │   ├─┬ enum AllTypesEnum
 │   │ ├── MyEnumValue
 │   │ ├── YourEnumValue
 │   │ └── ThisIsGreat
 │   ├─┬ enum StringEnum
 │   │ ├── A
 │   │ ├── B
 │   │ └── C
 │   └─┬ enum CompositionStringStyle
 │     ├── Normal
 │     └── Decorated
 ├─┬ @scope/jsii-calc-base
 │ ├─┬ dependencies
 │ │ └── @scope/jsii-calc-base-of-base
 │ └─┬ types
 │   ├─┬ class Base
 │   │ └─┬ members
 │   │   ├── <initializer>() initializer
 │   │   └─┬ typeName() method
 │   │     └── returns: any
 │   ├─┬ interface BaseProps
 │   │ ├─┬ interfaces
 │   │ │ └── VeryBaseProps
 │   │ └─┬ members
 │   │   └─┬ bar property
 │   │     ├── abstract
 │   │     ├── immutable
 │   │     └── type: string
 │   └─┬ interface IBaseInterface
 │     ├─┬ interfaces
 │     │ └── IVeryBaseInterface
 │     └─┬ members
 │       └─┬ bar() method
 │         ├── abstract
 │         └── returns: void
 ├─┬ @scope/jsii-calc-base-of-base
 │ └─┬ types
 │   ├─┬ class Very
 │   │ └─┬ members
 │   │   ├── <initializer>() initializer
 │   │   └─┬ hey() method
 │   │     └── returns: number
 │   ├─┬ interface IVeryBaseInterface
 │   │ └─┬ members
 │   │   └─┬ foo() method
 │   │     ├── abstract
 │   │     └── returns: void
 │   └─┬ interface VeryBaseProps
 │     └─┬ members
 │       └─┬ foo property
 │         ├── abstract
 │         ├── immutable
 │         └── type: @scope/jsii-calc-base-of-base.Very
 └─┬ @scope/jsii-calc-lib
   ├─┬ dependencies
   │ └── @scope/jsii-calc-base
   └─┬ types
     ├─┬ class Number
     │ ├── base: Value
     │ ├── interfaces: IDoublable
     │ └─┬ members
     │   ├─┬ <initializer>(value) initializer
     │   │ └─┬ parameters
     │   │   └─┬ value
     │   │     └── type: number
     │   ├─┬ doubleValue property
     │   │ ├── immutable
     │   │ └── type: number
     │   └─┬ value property
     │     ├── immutable
     │     └── type: number
     ├─┬ class Operation
     │ ├── base: Value
     │ └─┬ members
     │   ├── <initializer>() initializer
     │   └─┬ toString() method
     │     ├── abstract
     │     └── returns: string
     ├─┬ class Value
     │ ├── base: Base
     │ └─┬ members
     │   ├── <initializer>() initializer
     │   ├─┬ toString() method
     │   │ └── returns: string
     │   └─┬ value property
     │     ├── abstract
     │     ├── immutable
     │     └── type: number
     ├─┬ interface IDoublable
     │ └─┬ members
     │   └─┬ doubleValue property
     │     ├── abstract
     │     ├── immutable
     │     └── type: number
     ├─┬ interface IFriendly
     │ └─┬ members
     │   └─┬ hello() method
     │     ├── abstract
     │     └── returns: string
     ├─┬ interface IThreeLevelsInterface
     │ ├─┬ interfaces
     │ │ └── IBaseInterface
     │ └─┬ members
     │   └─┬ baz() method
     │     ├── abstract
     │     └── returns: void
     ├─┬ interface MyFirstStruct
     │ └─┬ members
     │   ├─┬ anumber property
     │   │ ├── abstract
     │   │ ├── immutable
     │   │ └── type: number
     │   ├─┬ astring property
     │   │ ├── abstract
     │   │ ├── immutable
     │   │ └── type: string
     │   └─┬ firstOptional property
     │     ├── abstract
     │     ├── immutable
     │     └── type: Optional<Array<string>>
     ├─┬ interface StructWithOnlyOptionals
     │ └─┬ members
     │   ├─┬ optional1 property
     │   │ ├── abstract
     │   │ ├── immutable
     │   │ └── type: Optional<string>
     │   ├─┬ optional2 property
     │   │ ├── abstract
     │   │ ├── immutable
     │   │ └── type: Optional<number>
     │   └─┬ optional3 property
     │     ├── abstract
     │     ├── immutable
     │     └── type: Optional<boolean>
     └─┬ enum EnumFromScopedModule
       ├── Value1
       └── Value2
