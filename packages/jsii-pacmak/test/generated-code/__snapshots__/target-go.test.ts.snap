// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Generated code for "@scope/jsii-calc-base": <outDir>/ 1`] = `
<root>
 ‚îó‚îÅ üìÅ golang
    ‚îó‚îÅ üìÑ scopejsiicalcbase.go
`;

exports[`Generated code for "@scope/jsii-calc-base": <outDir>/golang/scopejsiicalcbase.go 1`] = `
package scopejsiicalcbase

import (
    "github.com/aws-cdk/jsii/jsii"
)

// Class interface
type BaseIface interface {
    TypeName() jsii.Any
}

// Struct proxy
type Base struct {
}

func NewBase() BaseIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "Base",
        Method: "NewBase",
        Parameters: []string{}
    })

    return &Base{
     // props
    }
}

func (b *Base) TypeName() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "Base",
        Method: "TypeName",
        Parameters: []string{}
    })
    return nil
}

// Struct interface
type BasePropsIface interface {
    GetFoo() jsii.Any
    GetBar() string
}

// Struct proxy
type BaseProps struct {
    Foo jsii.Any
    Bar string
}

func (b BaseProps) GetFoo() jsii.Any {
    return b.Foo
}

func (b BaseProps) GetBar() string {
    return b.Bar
}


// Behaviorial interface
type IBaseInterface interface {
    @scope/jsii-calc-base-of-base.IVeryBaseInterface
    Bar()
}


`;

exports[`Generated code for "@scope/jsii-calc-base-of-base": <outDir>/ 1`] = `
<root>
 ‚îó‚îÅ üìÅ golang
    ‚îó‚îÅ üìÑ scopejsiicalcbaseofbase.go
`;

exports[`Generated code for "@scope/jsii-calc-base-of-base": <outDir>/golang/scopejsiicalcbaseofbase.go 1`] = `
package scopejsiicalcbaseofbase

import (
    "github.com/aws-cdk/jsii/jsii"
)

// Behaviorial interface
type IVeryBaseInterface interface {
    Foo()
}

// Class interface
type StaticConsumerIface interface {
    Consume() jsii.Any
}

// Struct proxy
type StaticConsumer struct {
}

func (s *StaticConsumer) Consume() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "StaticConsumer",
        Method: "Consume",
        Parameters: []string{"_args any"}
    })
    return nil
}

// Class interface
type VeryIface interface {
    Hey() float64
}

// Struct proxy
type Very struct {
}

func NewVery() VeryIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "Very",
        Method: "NewVery",
        Parameters: []string{}
    })

    return &Very{
     // props
    }
}

func (v *Very) Hey() float64  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "Very",
        Method: "Hey",
        Parameters: []string{}
    })
    return 0.0
}

// Struct interface
type VeryBasePropsIface interface {
    GetFoo() Very
}

// Struct proxy
type VeryBaseProps struct {
    Foo Very
}

func (v VeryBaseProps) GetFoo() Very {
    return v.Foo
}



`;

exports[`Generated code for "@scope/jsii-calc-lib": <outDir>/ 1`] = `
<root>
 ‚îó‚îÅ üìÅ golang
    ‚î£‚îÅ üìÅ scopejsiicalclib
    ‚îÉ  ‚îó‚îÅ üìÑ submodule.go
    ‚îó‚îÅ üìÑ scopejsiicalclib.go
`;

exports[`Generated code for "@scope/jsii-calc-lib": <outDir>/golang/scopejsiicalclib.go 1`] = `
package scopejsiicalclib

import (
    "github.com/aws-cdk/jsii/jsii"
)

type EnumFromScopedModule string

const (
    EnumFromScopedModuleValue1 EnumFromScopedModule = "VALUE1"
    EnumFromScopedModuleValue2 EnumFromScopedModule = "VALUE2"
)

// Behaviorial interface
type IDoublable interface {
    GetDoubleValue() float64
}

// Behaviorial interface
type IFriendly interface {
    Hello() string
}

// Behaviorial interface
type IThreeLevelsInterface interface {
    @scope/jsii-calc-base-of-base.IVeryBaseInterface
    @scope/jsii-calc-base.IBaseInterface
    Baz()
}

// Struct interface
type MyFirstStructIface interface {
    GetAnumber() float64
    GetAstring() string
    GetFirstOptional() []string
}

// Struct proxy
type MyFirstStruct struct {
    Anumber float64
    Astring string
    FirstOptional []string
}

func (m MyFirstStruct) GetAnumber() float64 {
    return m.Anumber
}

func (m MyFirstStruct) GetAstring() string {
    return m.Astring
}

func (m MyFirstStruct) GetFirstOptional() []string {
    return m.FirstOptional
}


// Class interface
type NumberIface interface {
    @scope/jsii-calc-lib.IDoublable
    GetValue() float64
    SetValue()
    GetDoubleValue() float64
    SetDoubleValue()
    TypeName() jsii.Any
    ToString() string
}

// Struct proxy
type Number struct {
    Value float64
    DoubleValue float64
}

func (n Number) GetValue() float64 {
    return n.Value
}

func (n Number) GetDoubleValue() float64 {
    return n.DoubleValue
}


// Creates a Number object.
func NewNumber(value number) NumberIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "Number",
        Method: "NewNumber",
        Parameters: []string{value number}
    })

    return &Number{
     // props
    }
}

func (n Number) SetValue(val float64) {
    n.Value = val
}

func (n Number) SetDoubleValue(val float64) {
    n.DoubleValue = val
}

func (n *Number) TypeName() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "Number",
        Method: "TypeName",
        Parameters: []string{}
    })
    return nil
}

func (n *Number) ToString() string  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "Number",
        Method: "ToString",
        Parameters: []string{}
    })
    return "NOOP_RETURN_STRING"
}

// Class interface
type NumericValueIface interface {
    GetValue() float64
    SetValue()
    TypeName() jsii.Any
    ToString() string
}

// Struct proxy
type NumericValue struct {
    Value float64
}

func (n NumericValue) GetValue() float64 {
    return n.Value
}


func NewNumericValue() NumericValueIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "NumericValue",
        Method: "NewNumericValue",
        Parameters: []string{}
    })

    return &NumericValue{
     // props
    }
}

func (n NumericValue) SetValue(val float64) {
    n.Value = val
}

func (n *NumericValue) TypeName() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "NumericValue",
        Method: "TypeName",
        Parameters: []string{}
    })
    return nil
}

func (n *NumericValue) ToString() string  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "NumericValue",
        Method: "ToString",
        Parameters: []string{}
    })
    return "NOOP_RETURN_STRING"
}

// Class interface
type OperationIface interface {
    GetValue() float64
    SetValue()
    TypeName() jsii.Any
    ToString() string
}

// Struct proxy
type Operation struct {
    Value float64
}

func (o Operation) GetValue() float64 {
    return o.Value
}


func NewOperation() OperationIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "Operation",
        Method: "NewOperation",
        Parameters: []string{}
    })

    return &Operation{
     // props
    }
}

func (o Operation) SetValue(val float64) {
    o.Value = val
}

func (o *Operation) TypeName() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "Operation",
        Method: "TypeName",
        Parameters: []string{}
    })
    return nil
}

func (o *Operation) ToString() string  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "Operation",
        Method: "ToString",
        Parameters: []string{}
    })
    return "NOOP_RETURN_STRING"
}

// Struct interface
type StructWithOnlyOptionalsIface interface {
    GetOptional1() string
    GetOptional2() float64
    GetOptional3() bool
}

// Struct proxy
type StructWithOnlyOptionals struct {
    Optional1 string
    Optional2 float64
    Optional3 bool
}

func (s StructWithOnlyOptionals) GetOptional1() string {
    return s.Optional1
}

func (s StructWithOnlyOptionals) GetOptional2() float64 {
    return s.Optional2
}

func (s StructWithOnlyOptionals) GetOptional3() bool {
    return s.Optional3
}



`;

exports[`Generated code for "@scope/jsii-calc-lib": <outDir>/golang/scopejsiicalclib/submodule.go 1`] = `
package submodule

import (
    "github.com/aws-cdk/jsii/jsii"
)

// Behaviorial interface
type IReflectable interface {
    GetEntries() []ReflectableEntry
}

// Class interface
type NestingClassIface interface {
}

// Struct proxy
type NestingClass struct {
}

// Class interface
type NestedClassIface interface {
    GetProperty() string
    SetProperty()
}

// Struct proxy
type NestedClass struct {
    Property string
}

func (n NestedClass) GetProperty() string {
    return n.Property
}


func NewNestedClass() NestedClassIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "NestedClass",
        Method: "NewNestedClass",
        Parameters: []string{}
    })

    return &NestedClass{
     // props
    }
}

func (n NestedClass) SetProperty(val string) {
    n.Property = val
}

// Struct interface
type NestedStructIface interface {
    GetName() string
}

// Struct proxy
type NestedStruct struct {
    Name string
}

func (n NestedStruct) GetName() string {
    return n.Name
}


// Struct interface
type ReflectableEntryIface interface {
    GetKey() string
    GetValue() jsii.Any
}

// Struct proxy
type ReflectableEntry struct {
    Key string
    Value jsii.Any
}

func (r ReflectableEntry) GetKey() string {
    return r.Key
}

func (r ReflectableEntry) GetValue() jsii.Any {
    return r.Value
}


// Class interface
type ReflectorIface interface {
    AsMap() map[string]jsii.Any
}

// Struct proxy
type Reflector struct {
}

func NewReflector() ReflectorIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "Reflector",
        Method: "NewReflector",
        Parameters: []string{}
    })

    return &Reflector{
     // props
    }
}

func (r *Reflector) AsMap() map[string]jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "Reflector",
        Method: "AsMap",
        Parameters: []string{"reflectable @scope/jsii-calc-lib.submodule.IReflectable"}
    })
    return nil
}


`;

exports[`Generated code for "jsii-calc": <outDir>/ 1`] = `
<root>
 ‚îó‚îÅ üìÅ golang
    ‚î£‚îÅ üìÅ jsiicalc
    ‚îÉ  ‚î£‚îÅ üìÑ composition.go
    ‚îÉ  ‚î£‚îÅ üìÑ derivedclasshasnoproperties.go
    ‚îÉ  ‚î£‚îÅ üìÑ interfaceinnamespaceincludesclasses.go
    ‚îÉ  ‚î£‚îÅ üìÑ interfaceinnamespaceonlyinterface.go
    ‚îÉ  ‚î£‚îÅ üìÑ pythonself.go
    ‚îÉ  ‚î£‚îÅ üìÅ submodule
    ‚îÉ  ‚îÉ  ‚î£‚îÅ üìÑ backreferences.go
    ‚îÉ  ‚îÉ  ‚î£‚îÅ üìÑ child.go
    ‚îÉ  ‚îÉ  ‚î£‚îÅ üìÑ isolated.go
    ‚îÉ  ‚îÉ  ‚î£‚îÅ üìÅ nestedsubmodule
    ‚îÉ  ‚îÉ  ‚îÉ  ‚îó‚îÅ üìÑ deeplynested.go
    ‚îÉ  ‚îÉ  ‚îó‚îÅ üìÑ nestedsubmodule.go
    ‚îÉ  ‚îó‚îÅ üìÑ submodule.go
    ‚îó‚îÅ üìÑ jsiicalc.go
`;

exports[`Generated code for "jsii-calc": <outDir>/golang/jsiicalc.go 1`] = `
package jsiicalc

import (
    "github.com/aws-cdk/jsii/jsii"
    "composition"
)

// Class interface
type AbstractClassIface interface {
    jsii-calc.IInterfaceImplementedByAbstractClass
    GetAbstractProperty() string
    SetAbstractProperty()
    GetPropFromInterface() string
    SetPropFromInterface()
    AbstractMethod() string
    NonAbstractMethod() float64
}

// Struct proxy
type AbstractClass struct {
    AbstractProperty string
    PropFromInterface string
}

func (a AbstractClass) GetAbstractProperty() string {
    return a.AbstractProperty
}

func (a AbstractClass) GetPropFromInterface() string {
    return a.PropFromInterface
}


func NewAbstractClass() AbstractClassIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "AbstractClass",
        Method: "NewAbstractClass",
        Parameters: []string{}
    })

    return &AbstractClass{
     // props
    }
}

func (a AbstractClass) SetAbstractProperty(val string) {
    a.AbstractProperty = val
}

func (a AbstractClass) SetPropFromInterface(val string) {
    a.PropFromInterface = val
}

func (a *AbstractClass) AbstractMethod() string  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "AbstractClass",
        Method: "AbstractMethod",
        Parameters: []string{"name string"}
    })
    return "NOOP_RETURN_STRING"
}

func (a *AbstractClass) NonAbstractMethod() float64  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "AbstractClass",
        Method: "NonAbstractMethod",
        Parameters: []string{}
    })
    return 0.0
}

// Class interface
type AbstractClassBaseIface interface {
    GetAbstractProperty() string
    SetAbstractProperty()
}

// Struct proxy
type AbstractClassBase struct {
    AbstractProperty string
}

func (a AbstractClassBase) GetAbstractProperty() string {
    return a.AbstractProperty
}


func NewAbstractClassBase() AbstractClassBaseIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "AbstractClassBase",
        Method: "NewAbstractClassBase",
        Parameters: []string{}
    })

    return &AbstractClassBase{
     // props
    }
}

func (a AbstractClassBase) SetAbstractProperty(val string) {
    a.AbstractProperty = val
}

// Class interface
type AbstractClassReturnerIface interface {
    GetReturnAbstractFromProperty() AbstractClassBase
    SetReturnAbstractFromProperty()
    GiveMeAbstract() AbstractClass
    GiveMeInterface() IInterfaceImplementedByAbstractClass
}

// Struct proxy
type AbstractClassReturner struct {
    ReturnAbstractFromProperty AbstractClassBase
}

func (a AbstractClassReturner) GetReturnAbstractFromProperty() AbstractClassBase {
    return a.ReturnAbstractFromProperty
}


func NewAbstractClassReturner() AbstractClassReturnerIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "AbstractClassReturner",
        Method: "NewAbstractClassReturner",
        Parameters: []string{}
    })

    return &AbstractClassReturner{
     // props
    }
}

func (a AbstractClassReturner) SetReturnAbstractFromProperty(val AbstractClassBase) {
    a.ReturnAbstractFromProperty = val
}

func (a *AbstractClassReturner) GiveMeAbstract() AbstractClass  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "AbstractClassReturner",
        Method: "GiveMeAbstract",
        Parameters: []string{}
    })
    return AbstractClass{}
}

func (a *AbstractClassReturner) GiveMeInterface() IInterfaceImplementedByAbstractClass  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "AbstractClassReturner",
        Method: "GiveMeInterface",
        Parameters: []string{}
    })
    return nil
}

// Class interface
type AbstractSuiteIface interface {
    GetProperty() string
    SomeMethod() string
    WorkItAll() string
}

// Struct proxy
type AbstractSuite struct {
    Property string
}

func (a AbstractSuite) GetProperty() string {
    return a.Property
}


func NewAbstractSuite() AbstractSuiteIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "AbstractSuite",
        Method: "NewAbstractSuite",
        Parameters: []string{}
    })

    return &AbstractSuite{
     // props
    }
}

func (a AbstractSuite) SetProperty(val string) {
    a.Property = val
}

func (a *AbstractSuite) SomeMethod() string  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "AbstractSuite",
        Method: "SomeMethod",
        Parameters: []string{"str string"}
    })
    return "NOOP_RETURN_STRING"
}

func (a *AbstractSuite) WorkItAll() string  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "AbstractSuite",
        Method: "WorkItAll",
        Parameters: []string{"seed string"}
    })
    return "NOOP_RETURN_STRING"
}

// Class interface
type AddIface interface {
    @scope/jsii-calc-lib.IFriendly
    GetValue() float64
    SetValue()
    GetLhs() jsii.Any
    SetLhs()
    GetRhs() jsii.Any
    SetRhs()
    TypeName() jsii.Any
    ToString() string
    Hello() string
}

// Struct proxy
type Add struct {
    Value float64
    Lhs jsii.Any
    Rhs jsii.Any
}

func (a Add) GetValue() float64 {
    return a.Value
}

func (a Add) GetLhs() jsii.Any {
    return a.Lhs
}

func (a Add) GetRhs() jsii.Any {
    return a.Rhs
}


// Creates a BinaryOperation.
func NewAdd(lhs @scope/jsii-calc-lib.NumericValue, rhs @scope/jsii-calc-lib.NumericValue) AddIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "Add",
        Method: "NewAdd",
        Parameters: []string{lhs @scope/jsii-calc-lib.NumericValue, rhs @scope/jsii-calc-lib.NumericValue}
    })

    return &Add{
     // props
    }
}

func (a Add) SetValue(val float64) {
    a.Value = val
}

func (a Add) SetLhs(val jsii.Any) {
    a.Lhs = val
}

func (a Add) SetRhs(val jsii.Any) {
    a.Rhs = val
}

func (a *Add) TypeName() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "Add",
        Method: "TypeName",
        Parameters: []string{}
    })
    return nil
}

func (a *Add) ToString() string  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "Add",
        Method: "ToString",
        Parameters: []string{}
    })
    return "NOOP_RETURN_STRING"
}

func (a *Add) Hello() string  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "Add",
        Method: "Hello",
        Parameters: []string{}
    })
    return "NOOP_RETURN_STRING"
}

// Class interface
type AllTypesIface interface {
    GetEnumPropertyValue() float64
    SetEnumPropertyValue()
    GetAnyArrayProperty() []jsii.Any
    SetAnyArrayProperty()
    GetAnyMapProperty() map[string]jsii.Any
    SetAnyMapProperty()
    GetAnyProperty() jsii.Any
    SetAnyProperty()
    GetArrayProperty() []string
    SetArrayProperty()
    GetBooleanProperty() bool
    SetBooleanProperty()
    GetDateProperty() string
    SetDateProperty()
    GetEnumProperty() AllTypesEnum
    SetEnumProperty()
    GetJsonProperty() map[string]jsii.Any
    SetJsonProperty()
    GetMapProperty() map[string]jsii.Any
    SetMapProperty()
    GetNumberProperty() float64
    SetNumberProperty()
    GetStringProperty() string
    SetStringProperty()
    GetUnionArrayProperty() []jsii.Any
    SetUnionArrayProperty()
    GetUnionMapProperty() map[string]jsii.Any
    SetUnionMapProperty()
    GetUnionProperty() jsii.Any
    SetUnionProperty()
    GetUnknownArrayProperty() []jsii.Any
    SetUnknownArrayProperty()
    GetUnknownMapProperty() map[string]jsii.Any
    SetUnknownMapProperty()
    GetUnknownProperty() jsii.Any
    SetUnknownProperty()
    GetOptionalEnumValue() StringEnum
    SetOptionalEnumValue()
    AnyIn() jsii.Any
    AnyOut() jsii.Any
    EnumMethod() StringEnum
}

// Struct proxy
type AllTypes struct {
    EnumPropertyValue float64
    AnyArrayProperty []jsii.Any
    AnyMapProperty map[string]jsii.Any
    AnyProperty jsii.Any
    ArrayProperty []string
    BooleanProperty bool
    DateProperty string
    EnumProperty AllTypesEnum
    JsonProperty map[string]jsii.Any
    MapProperty map[string]jsii.Any
    NumberProperty float64
    StringProperty string
    UnionArrayProperty []jsii.Any
    UnionMapProperty map[string]jsii.Any
    UnionProperty jsii.Any
    UnknownArrayProperty []jsii.Any
    UnknownMapProperty map[string]jsii.Any
    UnknownProperty jsii.Any
    OptionalEnumValue StringEnum
}

func (a AllTypes) GetEnumPropertyValue() float64 {
    return a.EnumPropertyValue
}

func (a AllTypes) GetAnyArrayProperty() []jsii.Any {
    return a.AnyArrayProperty
}

func (a AllTypes) GetAnyMapProperty() map[string]jsii.Any {
    return a.AnyMapProperty
}

func (a AllTypes) GetAnyProperty() jsii.Any {
    return a.AnyProperty
}

func (a AllTypes) GetArrayProperty() []string {
    return a.ArrayProperty
}

func (a AllTypes) GetBooleanProperty() bool {
    return a.BooleanProperty
}

func (a AllTypes) GetDateProperty() string {
    return a.DateProperty
}

func (a AllTypes) GetEnumProperty() AllTypesEnum {
    return a.EnumProperty
}

func (a AllTypes) GetJsonProperty() map[string]jsii.Any {
    return a.JsonProperty
}

func (a AllTypes) GetMapProperty() map[string]jsii.Any {
    return a.MapProperty
}

func (a AllTypes) GetNumberProperty() float64 {
    return a.NumberProperty
}

func (a AllTypes) GetStringProperty() string {
    return a.StringProperty
}

func (a AllTypes) GetUnionArrayProperty() []jsii.Any {
    return a.UnionArrayProperty
}

func (a AllTypes) GetUnionMapProperty() map[string]jsii.Any {
    return a.UnionMapProperty
}

func (a AllTypes) GetUnionProperty() jsii.Any {
    return a.UnionProperty
}

func (a AllTypes) GetUnknownArrayProperty() []jsii.Any {
    return a.UnknownArrayProperty
}

func (a AllTypes) GetUnknownMapProperty() map[string]jsii.Any {
    return a.UnknownMapProperty
}

func (a AllTypes) GetUnknownProperty() jsii.Any {
    return a.UnknownProperty
}

func (a AllTypes) GetOptionalEnumValue() StringEnum {
    return a.OptionalEnumValue
}


func NewAllTypes() AllTypesIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "AllTypes",
        Method: "NewAllTypes",
        Parameters: []string{}
    })

    return &AllTypes{
     // props
    }
}

func (a AllTypes) SetEnumPropertyValue(val float64) {
    a.EnumPropertyValue = val
}

func (a AllTypes) SetAnyArrayProperty(val []jsii.Any) {
    a.AnyArrayProperty = val
}

func (a AllTypes) SetAnyMapProperty(val map[string]jsii.Any) {
    a.AnyMapProperty = val
}

func (a AllTypes) SetAnyProperty(val jsii.Any) {
    a.AnyProperty = val
}

func (a AllTypes) SetArrayProperty(val []string) {
    a.ArrayProperty = val
}

func (a AllTypes) SetBooleanProperty(val bool) {
    a.BooleanProperty = val
}

func (a AllTypes) SetDateProperty(val string) {
    a.DateProperty = val
}

func (a AllTypes) SetEnumProperty(val AllTypesEnum) {
    a.EnumProperty = val
}

func (a AllTypes) SetJsonProperty(val map[string]jsii.Any) {
    a.JsonProperty = val
}

func (a AllTypes) SetMapProperty(val map[string]jsii.Any) {
    a.MapProperty = val
}

func (a AllTypes) SetNumberProperty(val float64) {
    a.NumberProperty = val
}

func (a AllTypes) SetStringProperty(val string) {
    a.StringProperty = val
}

func (a AllTypes) SetUnionArrayProperty(val []jsii.Any) {
    a.UnionArrayProperty = val
}

func (a AllTypes) SetUnionMapProperty(val map[string]jsii.Any) {
    a.UnionMapProperty = val
}

func (a AllTypes) SetUnionProperty(val jsii.Any) {
    a.UnionProperty = val
}

func (a AllTypes) SetUnknownArrayProperty(val []jsii.Any) {
    a.UnknownArrayProperty = val
}

func (a AllTypes) SetUnknownMapProperty(val map[string]jsii.Any) {
    a.UnknownMapProperty = val
}

func (a AllTypes) SetUnknownProperty(val jsii.Any) {
    a.UnknownProperty = val
}

func (a AllTypes) SetOptionalEnumValue(val StringEnum) {
    a.OptionalEnumValue = val
}

func (a *AllTypes) AnyIn() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "AllTypes",
        Method: "AnyIn",
        Parameters: []string{"inp any"}
    })
    return nil
}

func (a *AllTypes) AnyOut() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "AllTypes",
        Method: "AnyOut",
        Parameters: []string{}
    })
    return nil
}

func (a *AllTypes) EnumMethod() StringEnum  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "AllTypes",
        Method: "EnumMethod",
        Parameters: []string{"value jsii-calc.StringEnum"}
    })
    return "ENUM_DUMMY"
}

type AllTypesEnum string

const (
    AllTypesEnumMyEnumValue AllTypesEnum = "MY_ENUM_VALUE"
    AllTypesEnumYourEnumValue AllTypesEnum = "YOUR_ENUM_VALUE"
    AllTypesEnumThisIsGreat AllTypesEnum = "THIS_IS_GREAT"
)

// Class interface
type AllowedMethodNamesIface interface {
    GetBar() jsii.Any
    GetFoo() string
    SetBar() jsii.Any
    SetFoo() jsii.Any
}

// Struct proxy
type AllowedMethodNames struct {
}

func NewAllowedMethodNames() AllowedMethodNamesIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "AllowedMethodNames",
        Method: "NewAllowedMethodNames",
        Parameters: []string{}
    })

    return &AllowedMethodNames{
     // props
    }
}

func (a *AllowedMethodNames) GetBar() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "AllowedMethodNames",
        Method: "GetBar",
        Parameters: []string{"_p1 string", "_p2 number"}
    })
    return nil
}

func (a *AllowedMethodNames) GetFoo() string  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "AllowedMethodNames",
        Method: "GetFoo",
        Parameters: []string{"withParam string"}
    })
    return "NOOP_RETURN_STRING"
}

func (a *AllowedMethodNames) SetBar() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "AllowedMethodNames",
        Method: "SetBar",
        Parameters: []string{"_x string", "_y number", "_z boolean"}
    })
    return nil
}

func (a *AllowedMethodNames) SetFoo() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "AllowedMethodNames",
        Method: "SetFoo",
        Parameters: []string{"_x string", "_y number"}
    })
    return nil
}

// Class interface
type AmbiguousParametersIface interface {
    GetProps() StructParameterType
    SetProps()
    GetScope() Bell
    SetScope()
}

// Struct proxy
type AmbiguousParameters struct {
    Props StructParameterType
    Scope Bell
}

func (a AmbiguousParameters) GetProps() StructParameterType {
    return a.Props
}

func (a AmbiguousParameters) GetScope() Bell {
    return a.Scope
}


func NewAmbiguousParameters(scope jsii-calc.Bell, props jsii-calc.StructParameterType) AmbiguousParametersIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "AmbiguousParameters",
        Method: "NewAmbiguousParameters",
        Parameters: []string{scope jsii-calc.Bell, props jsii-calc.StructParameterType}
    })

    return &AmbiguousParameters{
     // props
    }
}

func (a AmbiguousParameters) SetProps(val StructParameterType) {
    a.Props = val
}

func (a AmbiguousParameters) SetScope(val Bell) {
    a.Scope = val
}

// Class interface
type AnonymousImplementationProviderIface interface {
    jsii-calc.IAnonymousImplementationProvider
    ProvideAsClass() Implementation
    ProvideAsInterface() IAnonymouslyImplementMe
}

// Struct proxy
type AnonymousImplementationProvider struct {
}

func NewAnonymousImplementationProvider() AnonymousImplementationProviderIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "AnonymousImplementationProvider",
        Method: "NewAnonymousImplementationProvider",
        Parameters: []string{}
    })

    return &AnonymousImplementationProvider{
     // props
    }
}

func (a *AnonymousImplementationProvider) ProvideAsClass() Implementation  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "AnonymousImplementationProvider",
        Method: "ProvideAsClass",
        Parameters: []string{}
    })
    return Implementation{}
}

func (a *AnonymousImplementationProvider) ProvideAsInterface() IAnonymouslyImplementMe  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "AnonymousImplementationProvider",
        Method: "ProvideAsInterface",
        Parameters: []string{}
    })
    return nil
}

// Class interface
type AsyncVirtualMethodsIface interface {
    CallMe() float64
    CallMe2() float64
    CallMeDoublePromise() float64
    DontOverrideMe() float64
    OverrideMe() float64
    OverrideMeToo() float64
}

// Struct proxy
type AsyncVirtualMethods struct {
}

func NewAsyncVirtualMethods() AsyncVirtualMethodsIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "AsyncVirtualMethods",
        Method: "NewAsyncVirtualMethods",
        Parameters: []string{}
    })

    return &AsyncVirtualMethods{
     // props
    }
}

func (a *AsyncVirtualMethods) CallMe() float64  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "AsyncVirtualMethods",
        Method: "CallMe",
        Parameters: []string{}
    })
    return 0.0
}

func (a *AsyncVirtualMethods) CallMe2() float64  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "AsyncVirtualMethods",
        Method: "CallMe2",
        Parameters: []string{}
    })
    return 0.0
}

func (a *AsyncVirtualMethods) CallMeDoublePromise() float64  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "AsyncVirtualMethods",
        Method: "CallMeDoublePromise",
        Parameters: []string{}
    })
    return 0.0
}

func (a *AsyncVirtualMethods) DontOverrideMe() float64  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "AsyncVirtualMethods",
        Method: "DontOverrideMe",
        Parameters: []string{}
    })
    return 0.0
}

func (a *AsyncVirtualMethods) OverrideMe() float64  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "AsyncVirtualMethods",
        Method: "OverrideMe",
        Parameters: []string{"mult number"}
    })
    return 0.0
}

func (a *AsyncVirtualMethods) OverrideMeToo() float64  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "AsyncVirtualMethods",
        Method: "OverrideMeToo",
        Parameters: []string{}
    })
    return 0.0
}

// Class interface
type AugmentableClassIface interface {
    MethodOne() jsii.Any
    MethodTwo() jsii.Any
}

// Struct proxy
type AugmentableClass struct {
}

func NewAugmentableClass() AugmentableClassIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "AugmentableClass",
        Method: "NewAugmentableClass",
        Parameters: []string{}
    })

    return &AugmentableClass{
     // props
    }
}

func (a *AugmentableClass) MethodOne() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "AugmentableClass",
        Method: "MethodOne",
        Parameters: []string{}
    })
    return nil
}

func (a *AugmentableClass) MethodTwo() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "AugmentableClass",
        Method: "MethodTwo",
        Parameters: []string{}
    })
    return nil
}

// Class interface
type BaseJsii976Iface interface {
}

// Struct proxy
type BaseJsii976 struct {
}

func NewBaseJsii976() BaseJsii976Iface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "BaseJsii976",
        Method: "NewBaseJsii976",
        Parameters: []string{}
    })

    return &BaseJsii976{
     // props
    }
}

// Class interface
type BellIface interface {
    jsii-calc.IBell
    GetRung() bool
    SetRung()
    Ring() jsii.Any
}

// Struct proxy
type Bell struct {
    Rung bool
}

func (b Bell) GetRung() bool {
    return b.Rung
}


func NewBell() BellIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "Bell",
        Method: "NewBell",
        Parameters: []string{}
    })

    return &Bell{
     // props
    }
}

func (b Bell) SetRung(val bool) {
    b.Rung = val
}

func (b *Bell) Ring() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "Bell",
        Method: "Ring",
        Parameters: []string{}
    })
    return nil
}

// Class interface
type BinaryOperationIface interface {
    @scope/jsii-calc-lib.IFriendly
    GetValue() float64
    SetValue()
    GetLhs() jsii.Any
    SetLhs()
    GetRhs() jsii.Any
    SetRhs()
    TypeName() jsii.Any
    ToString() string
    Hello() string
}

// Struct proxy
type BinaryOperation struct {
    Value float64
    Lhs jsii.Any
    Rhs jsii.Any
}

func (b BinaryOperation) GetValue() float64 {
    return b.Value
}

func (b BinaryOperation) GetLhs() jsii.Any {
    return b.Lhs
}

func (b BinaryOperation) GetRhs() jsii.Any {
    return b.Rhs
}


// Creates a BinaryOperation.
func NewBinaryOperation(lhs @scope/jsii-calc-lib.NumericValue, rhs @scope/jsii-calc-lib.NumericValue) BinaryOperationIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "BinaryOperation",
        Method: "NewBinaryOperation",
        Parameters: []string{lhs @scope/jsii-calc-lib.NumericValue, rhs @scope/jsii-calc-lib.NumericValue}
    })

    return &BinaryOperation{
     // props
    }
}

func (b BinaryOperation) SetValue(val float64) {
    b.Value = val
}

func (b BinaryOperation) SetLhs(val jsii.Any) {
    b.Lhs = val
}

func (b BinaryOperation) SetRhs(val jsii.Any) {
    b.Rhs = val
}

func (b *BinaryOperation) TypeName() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "BinaryOperation",
        Method: "TypeName",
        Parameters: []string{}
    })
    return nil
}

func (b *BinaryOperation) ToString() string  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "BinaryOperation",
        Method: "ToString",
        Parameters: []string{}
    })
    return "NOOP_RETURN_STRING"
}

func (b *BinaryOperation) Hello() string  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "BinaryOperation",
        Method: "Hello",
        Parameters: []string{}
    })
    return "NOOP_RETURN_STRING"
}

// Class interface
type BurriedAnonymousObjectIface interface {
    Check() bool
    GiveItBack() jsii.Any
}

// Struct proxy
type BurriedAnonymousObject struct {
}

func NewBurriedAnonymousObject() BurriedAnonymousObjectIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "BurriedAnonymousObject",
        Method: "NewBurriedAnonymousObject",
        Parameters: []string{}
    })

    return &BurriedAnonymousObject{
     // props
    }
}

func (b *BurriedAnonymousObject) Check() bool  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "BurriedAnonymousObject",
        Method: "Check",
        Parameters: []string{}
    })
    return true
}

func (b *BurriedAnonymousObject) GiveItBack() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "BurriedAnonymousObject",
        Method: "GiveItBack",
        Parameters: []string{"value any"}
    })
    return nil
}

// Class interface
type CalculatorIface interface {
    GetValue() float64
    SetValue()
    GetExpression() jsii.Any
    SetExpression()
    GetDecorationPostfixes() []string
    SetDecorationPostfixes()
    GetDecorationPrefixes() []string
    SetDecorationPrefixes()
    GetStringStyle() composition.CompositionStringStyle
    SetStringStyle()
    GetOperationsLog() []jsii.Any
    SetOperationsLog()
    GetOperationsMap() map[string][]jsii.Any
    SetOperationsMap()
    GetCurr() jsii.Any
    SetCurr()
    GetMaxValue() float64
    SetMaxValue()
    GetUnionProperty() jsii.Any
    SetUnionProperty()
    TypeName() jsii.Any
    ToString() string
    Add() jsii.Any
    Mul() jsii.Any
    Neg() jsii.Any
    Pow() jsii.Any
    ReadUnionValue() float64
}

// Struct proxy
type Calculator struct {
    Value float64
    Expression jsii.Any
    DecorationPostfixes []string
    DecorationPrefixes []string
    StringStyle composition.CompositionStringStyle
    OperationsLog []jsii.Any
    OperationsMap map[string][]jsii.Any
    Curr jsii.Any
    MaxValue float64
    UnionProperty jsii.Any
}

func (c Calculator) GetValue() float64 {
    return c.Value
}

func (c Calculator) GetExpression() jsii.Any {
    return c.Expression
}

func (c Calculator) GetDecorationPostfixes() []string {
    return c.DecorationPostfixes
}

func (c Calculator) GetDecorationPrefixes() []string {
    return c.DecorationPrefixes
}

func (c Calculator) GetStringStyle() composition.CompositionStringStyle {
    return c.StringStyle
}

func (c Calculator) GetOperationsLog() []jsii.Any {
    return c.OperationsLog
}

func (c Calculator) GetOperationsMap() map[string][]jsii.Any {
    return c.OperationsMap
}

func (c Calculator) GetCurr() jsii.Any {
    return c.Curr
}

func (c Calculator) GetMaxValue() float64 {
    return c.MaxValue
}

func (c Calculator) GetUnionProperty() jsii.Any {
    return c.UnionProperty
}


// Creates a Calculator object.
func NewCalculator(props jsii-calc.CalculatorProps) CalculatorIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "Calculator",
        Method: "NewCalculator",
        Parameters: []string{props jsii-calc.CalculatorProps}
    })

    return &Calculator{
     // props
    }
}

func (c Calculator) SetValue(val float64) {
    c.Value = val
}

func (c Calculator) SetExpression(val jsii.Any) {
    c.Expression = val
}

func (c Calculator) SetDecorationPostfixes(val []string) {
    c.DecorationPostfixes = val
}

func (c Calculator) SetDecorationPrefixes(val []string) {
    c.DecorationPrefixes = val
}

func (c Calculator) SetStringStyle(val composition.CompositionStringStyle) {
    c.StringStyle = val
}

func (c Calculator) SetOperationsLog(val []jsii.Any) {
    c.OperationsLog = val
}

func (c Calculator) SetOperationsMap(val map[string][]jsii.Any) {
    c.OperationsMap = val
}

func (c Calculator) SetCurr(val jsii.Any) {
    c.Curr = val
}

func (c Calculator) SetMaxValue(val float64) {
    c.MaxValue = val
}

func (c Calculator) SetUnionProperty(val jsii.Any) {
    c.UnionProperty = val
}

func (c *Calculator) TypeName() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "Calculator",
        Method: "TypeName",
        Parameters: []string{}
    })
    return nil
}

func (c *Calculator) ToString() string  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "Calculator",
        Method: "ToString",
        Parameters: []string{}
    })
    return "NOOP_RETURN_STRING"
}

func (c *Calculator) Add() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "Calculator",
        Method: "Add",
        Parameters: []string{"value number"}
    })
    return nil
}

func (c *Calculator) Mul() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "Calculator",
        Method: "Mul",
        Parameters: []string{"value number"}
    })
    return nil
}

func (c *Calculator) Neg() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "Calculator",
        Method: "Neg",
        Parameters: []string{}
    })
    return nil
}

func (c *Calculator) Pow() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "Calculator",
        Method: "Pow",
        Parameters: []string{"value number"}
    })
    return nil
}

func (c *Calculator) ReadUnionValue() float64  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "Calculator",
        Method: "ReadUnionValue",
        Parameters: []string{}
    })
    return 0.0
}

// Struct interface
type CalculatorPropsIface interface {
    GetInitialValue() float64
    GetMaximumValue() float64
}

// Struct proxy
type CalculatorProps struct {
    InitialValue float64
    MaximumValue float64
}

func (c CalculatorProps) GetInitialValue() float64 {
    return c.InitialValue
}

func (c CalculatorProps) GetMaximumValue() float64 {
    return c.MaximumValue
}


// Struct interface
type ChildStruct982Iface interface {
    GetFoo() string
    GetBar() float64
}

// Struct proxy
type ChildStruct982 struct {
    Foo string
    Bar float64
}

func (c ChildStruct982) GetFoo() string {
    return c.Foo
}

func (c ChildStruct982) GetBar() float64 {
    return c.Bar
}


// Class interface
type ClassThatImplementsTheInternalInterfaceIface interface {
    jsii-calc.INonInternalInterface
    jsii-calc.IAnotherPublicInterface
    GetA() string
    SetA()
    GetB() string
    SetB()
    GetC() string
    SetC()
    GetD() string
    SetD()
}

// Struct proxy
type ClassThatImplementsTheInternalInterface struct {
    A string
    B string
    C string
    D string
}

func (c ClassThatImplementsTheInternalInterface) GetA() string {
    return c.A
}

func (c ClassThatImplementsTheInternalInterface) GetB() string {
    return c.B
}

func (c ClassThatImplementsTheInternalInterface) GetC() string {
    return c.C
}

func (c ClassThatImplementsTheInternalInterface) GetD() string {
    return c.D
}


func NewClassThatImplementsTheInternalInterface() ClassThatImplementsTheInternalInterfaceIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "ClassThatImplementsTheInternalInterface",
        Method: "NewClassThatImplementsTheInternalInterface",
        Parameters: []string{}
    })

    return &ClassThatImplementsTheInternalInterface{
     // props
    }
}

func (c ClassThatImplementsTheInternalInterface) SetA(val string) {
    c.A = val
}

func (c ClassThatImplementsTheInternalInterface) SetB(val string) {
    c.B = val
}

func (c ClassThatImplementsTheInternalInterface) SetC(val string) {
    c.C = val
}

func (c ClassThatImplementsTheInternalInterface) SetD(val string) {
    c.D = val
}

// Class interface
type ClassThatImplementsThePrivateInterfaceIface interface {
    jsii-calc.INonInternalInterface
    jsii-calc.IAnotherPublicInterface
    GetA() string
    SetA()
    GetB() string
    SetB()
    GetC() string
    SetC()
    GetE() string
    SetE()
}

// Struct proxy
type ClassThatImplementsThePrivateInterface struct {
    A string
    B string
    C string
    E string
}

func (c ClassThatImplementsThePrivateInterface) GetA() string {
    return c.A
}

func (c ClassThatImplementsThePrivateInterface) GetB() string {
    return c.B
}

func (c ClassThatImplementsThePrivateInterface) GetC() string {
    return c.C
}

func (c ClassThatImplementsThePrivateInterface) GetE() string {
    return c.E
}


func NewClassThatImplementsThePrivateInterface() ClassThatImplementsThePrivateInterfaceIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "ClassThatImplementsThePrivateInterface",
        Method: "NewClassThatImplementsThePrivateInterface",
        Parameters: []string{}
    })

    return &ClassThatImplementsThePrivateInterface{
     // props
    }
}

func (c ClassThatImplementsThePrivateInterface) SetA(val string) {
    c.A = val
}

func (c ClassThatImplementsThePrivateInterface) SetB(val string) {
    c.B = val
}

func (c ClassThatImplementsThePrivateInterface) SetC(val string) {
    c.C = val
}

func (c ClassThatImplementsThePrivateInterface) SetE(val string) {
    c.E = val
}

// Class interface
type ClassWithCollectionsIface interface {
    GetStaticArray() []string
    SetStaticArray()
    GetStaticMap() map[string]string
    SetStaticMap()
    GetArray() []string
    SetArray()
    GetMap() map[string]string
    SetMap()
    CreateAList() []string
    CreateAMap() map[string]string
}

// Struct proxy
type ClassWithCollections struct {
    StaticArray []string
    StaticMap map[string]string
    Array []string
    Map map[string]string
}

func (c ClassWithCollections) GetStaticArray() []string {
    return c.StaticArray
}

func (c ClassWithCollections) GetStaticMap() map[string]string {
    return c.StaticMap
}

func (c ClassWithCollections) GetArray() []string {
    return c.Array
}

func (c ClassWithCollections) GetMap() map[string]string {
    return c.Map
}


func NewClassWithCollections(map Map<string => string>, array Array<string>) ClassWithCollectionsIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "ClassWithCollections",
        Method: "NewClassWithCollections",
        Parameters: []string{map Map<string => string>, array Array<string>}
    })

    return &ClassWithCollections{
     // props
    }
}

func (c ClassWithCollections) SetStaticArray(val []string) {
    c.StaticArray = val
}

func (c ClassWithCollections) SetStaticMap(val map[string]string) {
    c.StaticMap = val
}

func (c ClassWithCollections) SetArray(val []string) {
    c.Array = val
}

func (c ClassWithCollections) SetMap(val map[string]string) {
    c.Map = val
}

func (c *ClassWithCollections) CreateAList() []string  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "ClassWithCollections",
        Method: "CreateAList",
        Parameters: []string{}
    })
    return nil
}

func (c *ClassWithCollections) CreateAMap() map[string]string  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "ClassWithCollections",
        Method: "CreateAMap",
        Parameters: []string{}
    })
    return nil
}

// Class interface
type ClassWithDocsIface interface {
}

// Struct proxy
type ClassWithDocs struct {
}

func NewClassWithDocs() ClassWithDocsIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "ClassWithDocs",
        Method: "NewClassWithDocs",
        Parameters: []string{}
    })

    return &ClassWithDocs{
     // props
    }
}

// Class interface
type ClassWithJavaReservedWordsIface interface {
    GetInt() string
    SetInt()
    Import() string
}

// Struct proxy
type ClassWithJavaReservedWords struct {
    Int string
}

func (c ClassWithJavaReservedWords) GetInt() string {
    return c.Int
}


func NewClassWithJavaReservedWords(int string) ClassWithJavaReservedWordsIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "ClassWithJavaReservedWords",
        Method: "NewClassWithJavaReservedWords",
        Parameters: []string{int string}
    })

    return &ClassWithJavaReservedWords{
     // props
    }
}

func (c ClassWithJavaReservedWords) SetInt(val string) {
    c.Int = val
}

func (c *ClassWithJavaReservedWords) Import() string  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "ClassWithJavaReservedWords",
        Method: "Import",
        Parameters: []string{"assert string"}
    })
    return "NOOP_RETURN_STRING"
}

// Class interface
type ClassWithMutableObjectLiteralPropertyIface interface {
    GetMutableObject() IMutableObjectLiteral
    SetMutableObject()
}

// Struct proxy
type ClassWithMutableObjectLiteralProperty struct {
    MutableObject IMutableObjectLiteral
}

func (c ClassWithMutableObjectLiteralProperty) GetMutableObject() IMutableObjectLiteral {
    return c.MutableObject
}


func NewClassWithMutableObjectLiteralProperty() ClassWithMutableObjectLiteralPropertyIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "ClassWithMutableObjectLiteralProperty",
        Method: "NewClassWithMutableObjectLiteralProperty",
        Parameters: []string{}
    })

    return &ClassWithMutableObjectLiteralProperty{
     // props
    }
}

func (c ClassWithMutableObjectLiteralProperty) SetMutableObject(val IMutableObjectLiteral) {
    c.MutableObject = val
}

// Class interface
type ClassWithPrivateConstructorAndAutomaticPropertiesIface interface {
    jsii-calc.IInterfaceWithProperties
    GetReadOnlyString() string
    SetReadOnlyString()
    GetReadWriteString() string
    SetReadWriteString()
    Create() ClassWithPrivateConstructorAndAutomaticProperties
}

// Struct proxy
type ClassWithPrivateConstructorAndAutomaticProperties struct {
    ReadOnlyString string
    ReadWriteString string
}

func (c ClassWithPrivateConstructorAndAutomaticProperties) GetReadOnlyString() string {
    return c.ReadOnlyString
}

func (c ClassWithPrivateConstructorAndAutomaticProperties) GetReadWriteString() string {
    return c.ReadWriteString
}


func (c ClassWithPrivateConstructorAndAutomaticProperties) SetReadOnlyString(val string) {
    c.ReadOnlyString = val
}

func (c ClassWithPrivateConstructorAndAutomaticProperties) SetReadWriteString(val string) {
    c.ReadWriteString = val
}

func (c *ClassWithPrivateConstructorAndAutomaticProperties) Create() ClassWithPrivateConstructorAndAutomaticProperties  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "ClassWithPrivateConstructorAndAutomaticProperties",
        Method: "Create",
        Parameters: []string{"readOnlyString string", "readWriteString string"}
    })
    return ClassWithPrivateConstructorAndAutomaticProperties{}
}

// Class interface
type ConfusingToJacksonIface interface {
    GetUnionProperty() jsii.Any
    SetUnionProperty()
    MakeInstance() ConfusingToJackson
    MakeStructInstance() ConfusingToJacksonStruct
}

// Struct proxy
type ConfusingToJackson struct {
    UnionProperty jsii.Any
}

func (c ConfusingToJackson) GetUnionProperty() jsii.Any {
    return c.UnionProperty
}


func (c ConfusingToJackson) SetUnionProperty(val jsii.Any) {
    c.UnionProperty = val
}

func (c *ConfusingToJackson) MakeInstance() ConfusingToJackson  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "ConfusingToJackson",
        Method: "MakeInstance",
        Parameters: []string{}
    })
    return ConfusingToJackson{}
}

func (c *ConfusingToJackson) MakeStructInstance() ConfusingToJacksonStruct  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "ConfusingToJackson",
        Method: "MakeStructInstance",
        Parameters: []string{}
    })
    return nil
}

// Struct interface
type ConfusingToJacksonStructIface interface {
    GetUnionProperty() jsii.Any
}

// Struct proxy
type ConfusingToJacksonStruct struct {
    UnionProperty jsii.Any
}

func (c ConfusingToJacksonStruct) GetUnionProperty() jsii.Any {
    return c.UnionProperty
}


// Class interface
type ConstructorPassesThisOutIface interface {
}

// Struct proxy
type ConstructorPassesThisOut struct {
}

func NewConstructorPassesThisOut(consumer jsii-calc.PartiallyInitializedThisConsumer) ConstructorPassesThisOutIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "ConstructorPassesThisOut",
        Method: "NewConstructorPassesThisOut",
        Parameters: []string{consumer jsii-calc.PartiallyInitializedThisConsumer}
    })

    return &ConstructorPassesThisOut{
     // props
    }
}

// Class interface
type ConstructorsIface interface {
    HiddenInterface() IPublicInterface
    HiddenInterfaces() []IPublicInterface
    HiddenSubInterfaces() []IPublicInterface
    MakeClass() PublicClass
    MakeInterface() IPublicInterface
    MakeInterface2() IPublicInterface2
    MakeInterfaces() []IPublicInterface
}

// Struct proxy
type Constructors struct {
}

func NewConstructors() ConstructorsIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "Constructors",
        Method: "NewConstructors",
        Parameters: []string{}
    })

    return &Constructors{
     // props
    }
}

func (c *Constructors) HiddenInterface() IPublicInterface  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "Constructors",
        Method: "HiddenInterface",
        Parameters: []string{}
    })
    return nil
}

func (c *Constructors) HiddenInterfaces() []IPublicInterface  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "Constructors",
        Method: "HiddenInterfaces",
        Parameters: []string{}
    })
    return nil
}

func (c *Constructors) HiddenSubInterfaces() []IPublicInterface  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "Constructors",
        Method: "HiddenSubInterfaces",
        Parameters: []string{}
    })
    return nil
}

func (c *Constructors) MakeClass() PublicClass  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "Constructors",
        Method: "MakeClass",
        Parameters: []string{}
    })
    return PublicClass{}
}

func (c *Constructors) MakeInterface() IPublicInterface  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "Constructors",
        Method: "MakeInterface",
        Parameters: []string{}
    })
    return nil
}

func (c *Constructors) MakeInterface2() IPublicInterface2  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "Constructors",
        Method: "MakeInterface2",
        Parameters: []string{}
    })
    return nil
}

func (c *Constructors) MakeInterfaces() []IPublicInterface  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "Constructors",
        Method: "MakeInterfaces",
        Parameters: []string{}
    })
    return nil
}

// Class interface
type ConsumePureInterfaceIface interface {
    WorkItBaby() StructB
}

// Struct proxy
type ConsumePureInterface struct {
}

func NewConsumePureInterface(delegate jsii-calc.IStructReturningDelegate) ConsumePureInterfaceIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "ConsumePureInterface",
        Method: "NewConsumePureInterface",
        Parameters: []string{delegate jsii-calc.IStructReturningDelegate}
    })

    return &ConsumePureInterface{
     // props
    }
}

func (c *ConsumePureInterface) WorkItBaby() StructB  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "ConsumePureInterface",
        Method: "WorkItBaby",
        Parameters: []string{}
    })
    return nil
}

// Class interface
type ConsumerCanRingBellIface interface {
    StaticImplementedByObjectLiteral() bool
    StaticImplementedByPrivateClass() bool
    StaticImplementedByPublicClass() bool
    StaticWhenTypedAsClass() bool
    ImplementedByObjectLiteral() bool
    ImplementedByPrivateClass() bool
    ImplementedByPublicClass() bool
    WhenTypedAsClass() bool
}

// Struct proxy
type ConsumerCanRingBell struct {
}

func NewConsumerCanRingBell() ConsumerCanRingBellIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "ConsumerCanRingBell",
        Method: "NewConsumerCanRingBell",
        Parameters: []string{}
    })

    return &ConsumerCanRingBell{
     // props
    }
}

func (c *ConsumerCanRingBell) StaticImplementedByObjectLiteral() bool  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "ConsumerCanRingBell",
        Method: "StaticImplementedByObjectLiteral",
        Parameters: []string{"ringer jsii-calc.IBellRinger"}
    })
    return true
}

func (c *ConsumerCanRingBell) StaticImplementedByPrivateClass() bool  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "ConsumerCanRingBell",
        Method: "StaticImplementedByPrivateClass",
        Parameters: []string{"ringer jsii-calc.IBellRinger"}
    })
    return true
}

func (c *ConsumerCanRingBell) StaticImplementedByPublicClass() bool  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "ConsumerCanRingBell",
        Method: "StaticImplementedByPublicClass",
        Parameters: []string{"ringer jsii-calc.IBellRinger"}
    })
    return true
}

func (c *ConsumerCanRingBell) StaticWhenTypedAsClass() bool  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "ConsumerCanRingBell",
        Method: "StaticWhenTypedAsClass",
        Parameters: []string{"ringer jsii-calc.IConcreteBellRinger"}
    })
    return true
}

func (c *ConsumerCanRingBell) ImplementedByObjectLiteral() bool  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "ConsumerCanRingBell",
        Method: "ImplementedByObjectLiteral",
        Parameters: []string{"ringer jsii-calc.IBellRinger"}
    })
    return true
}

func (c *ConsumerCanRingBell) ImplementedByPrivateClass() bool  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "ConsumerCanRingBell",
        Method: "ImplementedByPrivateClass",
        Parameters: []string{"ringer jsii-calc.IBellRinger"}
    })
    return true
}

func (c *ConsumerCanRingBell) ImplementedByPublicClass() bool  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "ConsumerCanRingBell",
        Method: "ImplementedByPublicClass",
        Parameters: []string{"ringer jsii-calc.IBellRinger"}
    })
    return true
}

func (c *ConsumerCanRingBell) WhenTypedAsClass() bool  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "ConsumerCanRingBell",
        Method: "WhenTypedAsClass",
        Parameters: []string{"ringer jsii-calc.IConcreteBellRinger"}
    })
    return true
}

// Class interface
type ConsumersOfThisCrazyTypeSystemIface interface {
    ConsumeAnotherPublicInterface() string
    ConsumeNonInternalInterface() jsii.Any
}

// Struct proxy
type ConsumersOfThisCrazyTypeSystem struct {
}

func NewConsumersOfThisCrazyTypeSystem() ConsumersOfThisCrazyTypeSystemIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "ConsumersOfThisCrazyTypeSystem",
        Method: "NewConsumersOfThisCrazyTypeSystem",
        Parameters: []string{}
    })

    return &ConsumersOfThisCrazyTypeSystem{
     // props
    }
}

func (c *ConsumersOfThisCrazyTypeSystem) ConsumeAnotherPublicInterface() string  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "ConsumersOfThisCrazyTypeSystem",
        Method: "ConsumeAnotherPublicInterface",
        Parameters: []string{"obj jsii-calc.IAnotherPublicInterface"}
    })
    return "NOOP_RETURN_STRING"
}

func (c *ConsumersOfThisCrazyTypeSystem) ConsumeNonInternalInterface() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "ConsumersOfThisCrazyTypeSystem",
        Method: "ConsumeNonInternalInterface",
        Parameters: []string{"obj jsii-calc.INonInternalInterface"}
    })
    return nil
}

// Class interface
type DataRendererIface interface {
    Render() string
    RenderArbitrary() string
    RenderMap() string
}

// Struct proxy
type DataRenderer struct {
}

func NewDataRenderer() DataRendererIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "DataRenderer",
        Method: "NewDataRenderer",
        Parameters: []string{}
    })

    return &DataRenderer{
     // props
    }
}

func (d *DataRenderer) Render() string  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "DataRenderer",
        Method: "Render",
        Parameters: []string{"data @scope/jsii-calc-lib.MyFirstStruct"}
    })
    return "NOOP_RETURN_STRING"
}

func (d *DataRenderer) RenderArbitrary() string  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "DataRenderer",
        Method: "RenderArbitrary",
        Parameters: []string{"data Map<string => any>"}
    })
    return "NOOP_RETURN_STRING"
}

func (d *DataRenderer) RenderMap() string  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "DataRenderer",
        Method: "RenderMap",
        Parameters: []string{"map Map<string => any>"}
    })
    return "NOOP_RETURN_STRING"
}

// Class interface
type DefaultedConstructorArgumentIface interface {
    GetArg1() float64
    SetArg1()
    GetArg3() string
    SetArg3()
    GetArg2() string
    SetArg2()
}

// Struct proxy
type DefaultedConstructorArgument struct {
    Arg1 float64
    Arg3 string
    Arg2 string
}

func (d DefaultedConstructorArgument) GetArg1() float64 {
    return d.Arg1
}

func (d DefaultedConstructorArgument) GetArg3() string {
    return d.Arg3
}

func (d DefaultedConstructorArgument) GetArg2() string {
    return d.Arg2
}


func NewDefaultedConstructorArgument(arg1 number, arg2 string, arg3 date) DefaultedConstructorArgumentIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "DefaultedConstructorArgument",
        Method: "NewDefaultedConstructorArgument",
        Parameters: []string{arg1 number, arg2 string, arg3 date}
    })

    return &DefaultedConstructorArgument{
     // props
    }
}

func (d DefaultedConstructorArgument) SetArg1(val float64) {
    d.Arg1 = val
}

func (d DefaultedConstructorArgument) SetArg3(val string) {
    d.Arg3 = val
}

func (d DefaultedConstructorArgument) SetArg2(val string) {
    d.Arg2 = val
}

// Class interface
type Demonstrate982Iface interface {
    TakeThis() ChildStruct982
    TakeThisToo() ParentStruct982
}

// Struct proxy
type Demonstrate982 struct {
}

func NewDemonstrate982() Demonstrate982Iface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "Demonstrate982",
        Method: "NewDemonstrate982",
        Parameters: []string{}
    })

    return &Demonstrate982{
     // props
    }
}

func (d *Demonstrate982) TakeThis() ChildStruct982  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "Demonstrate982",
        Method: "TakeThis",
        Parameters: []string{}
    })
    return nil
}

func (d *Demonstrate982) TakeThisToo() ParentStruct982  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "Demonstrate982",
        Method: "TakeThisToo",
        Parameters: []string{}
    })
    return nil
}

// Class interface
type DeprecatedClassIface interface {
    GetReadonlyProperty() string
    SetReadonlyProperty()
    GetMutableProperty() float64
    SetMutableProperty()
    Method() jsii.Any
}

// Struct proxy
type DeprecatedClass struct {
    ReadonlyProperty string
    MutableProperty float64
}

func (d DeprecatedClass) GetReadonlyProperty() string {
    return d.ReadonlyProperty
}

func (d DeprecatedClass) GetMutableProperty() float64 {
    return d.MutableProperty
}


func NewDeprecatedClass(readonlyString string, mutableNumber number) DeprecatedClassIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "DeprecatedClass",
        Method: "NewDeprecatedClass",
        Parameters: []string{readonlyString string, mutableNumber number}
    })

    return &DeprecatedClass{
     // props
    }
}

func (d DeprecatedClass) SetReadonlyProperty(val string) {
    d.ReadonlyProperty = val
}

func (d DeprecatedClass) SetMutableProperty(val float64) {
    d.MutableProperty = val
}

func (d *DeprecatedClass) Method() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "DeprecatedClass",
        Method: "Method",
        Parameters: []string{}
    })
    return nil
}

type DeprecatedEnum string

const (
    DeprecatedEnumOptionA DeprecatedEnum = "OPTION_A"
    DeprecatedEnumOptionB DeprecatedEnum = "OPTION_B"
)

// Struct interface
type DeprecatedStructIface interface {
    GetReadonlyProperty() string
}

// Struct proxy
type DeprecatedStruct struct {
    ReadonlyProperty string
}

func (d DeprecatedStruct) GetReadonlyProperty() string {
    return d.ReadonlyProperty
}


// Struct interface
type DerivedStructIface interface {
    GetAnumber() float64
    GetAstring() string
    GetFirstOptional() []string
    GetAnotherRequired() string
    GetBool() bool
    GetNonPrimitive() DoubleTrouble
    GetAnotherOptional() map[string]jsii.Any
    GetOptionalAny() jsii.Any
    GetOptionalArray() []string
}

// Struct proxy
type DerivedStruct struct {
    Anumber float64
    Astring string
    FirstOptional []string
    AnotherRequired string
    Bool bool
    NonPrimitive DoubleTrouble
    AnotherOptional map[string]jsii.Any
    OptionalAny jsii.Any
    OptionalArray []string
}

func (d DerivedStruct) GetAnumber() float64 {
    return d.Anumber
}

func (d DerivedStruct) GetAstring() string {
    return d.Astring
}

func (d DerivedStruct) GetFirstOptional() []string {
    return d.FirstOptional
}

func (d DerivedStruct) GetAnotherRequired() string {
    return d.AnotherRequired
}

func (d DerivedStruct) GetBool() bool {
    return d.Bool
}

func (d DerivedStruct) GetNonPrimitive() DoubleTrouble {
    return d.NonPrimitive
}

func (d DerivedStruct) GetAnotherOptional() map[string]jsii.Any {
    return d.AnotherOptional
}

func (d DerivedStruct) GetOptionalAny() jsii.Any {
    return d.OptionalAny
}

func (d DerivedStruct) GetOptionalArray() []string {
    return d.OptionalArray
}


// Struct interface
type DiamondInheritanceBaseLevelStructIface interface {
    GetBaseLevelProperty() string
}

// Struct proxy
type DiamondInheritanceBaseLevelStruct struct {
    BaseLevelProperty string
}

func (d DiamondInheritanceBaseLevelStruct) GetBaseLevelProperty() string {
    return d.BaseLevelProperty
}


// Struct interface
type DiamondInheritanceFirstMidLevelStructIface interface {
    GetBaseLevelProperty() string
    GetFirstMidLevelProperty() string
}

// Struct proxy
type DiamondInheritanceFirstMidLevelStruct struct {
    BaseLevelProperty string
    FirstMidLevelProperty string
}

func (d DiamondInheritanceFirstMidLevelStruct) GetBaseLevelProperty() string {
    return d.BaseLevelProperty
}

func (d DiamondInheritanceFirstMidLevelStruct) GetFirstMidLevelProperty() string {
    return d.FirstMidLevelProperty
}


// Struct interface
type DiamondInheritanceSecondMidLevelStructIface interface {
    GetBaseLevelProperty() string
    GetSecondMidLevelProperty() string
}

// Struct proxy
type DiamondInheritanceSecondMidLevelStruct struct {
    BaseLevelProperty string
    SecondMidLevelProperty string
}

func (d DiamondInheritanceSecondMidLevelStruct) GetBaseLevelProperty() string {
    return d.BaseLevelProperty
}

func (d DiamondInheritanceSecondMidLevelStruct) GetSecondMidLevelProperty() string {
    return d.SecondMidLevelProperty
}


// Struct interface
type DiamondInheritanceTopLevelStructIface interface {
    GetBaseLevelProperty() string
    GetFirstMidLevelProperty() string
    GetSecondMidLevelProperty() string
    GetTopLevelProperty() string
}

// Struct proxy
type DiamondInheritanceTopLevelStruct struct {
    BaseLevelProperty string
    FirstMidLevelProperty string
    SecondMidLevelProperty string
    TopLevelProperty string
}

func (d DiamondInheritanceTopLevelStruct) GetBaseLevelProperty() string {
    return d.BaseLevelProperty
}

func (d DiamondInheritanceTopLevelStruct) GetFirstMidLevelProperty() string {
    return d.FirstMidLevelProperty
}

func (d DiamondInheritanceTopLevelStruct) GetSecondMidLevelProperty() string {
    return d.SecondMidLevelProperty
}

func (d DiamondInheritanceTopLevelStruct) GetTopLevelProperty() string {
    return d.TopLevelProperty
}


// Class interface
type DisappointingCollectionSourceIface interface {
    GetMaybeList() []string
    SetMaybeList()
    GetMaybeMap() map[string]float64
    SetMaybeMap()
}

// Struct proxy
type DisappointingCollectionSource struct {
    MaybeList []string
    MaybeMap map[string]float64
}

func (d DisappointingCollectionSource) GetMaybeList() []string {
    return d.MaybeList
}

func (d DisappointingCollectionSource) GetMaybeMap() map[string]float64 {
    return d.MaybeMap
}


func (d DisappointingCollectionSource) SetMaybeList(val []string) {
    d.MaybeList = val
}

func (d DisappointingCollectionSource) SetMaybeMap(val map[string]float64) {
    d.MaybeMap = val
}

// Class interface
type DoNotOverridePrivatesIface interface {
    ChangePrivatePropertyValue() jsii.Any
    PrivateMethodValue() string
    PrivatePropertyValue() string
}

// Struct proxy
type DoNotOverridePrivates struct {
}

func NewDoNotOverridePrivates() DoNotOverridePrivatesIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "DoNotOverridePrivates",
        Method: "NewDoNotOverridePrivates",
        Parameters: []string{}
    })

    return &DoNotOverridePrivates{
     // props
    }
}

func (d *DoNotOverridePrivates) ChangePrivatePropertyValue() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "DoNotOverridePrivates",
        Method: "ChangePrivatePropertyValue",
        Parameters: []string{"newValue string"}
    })
    return nil
}

func (d *DoNotOverridePrivates) PrivateMethodValue() string  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "DoNotOverridePrivates",
        Method: "PrivateMethodValue",
        Parameters: []string{}
    })
    return "NOOP_RETURN_STRING"
}

func (d *DoNotOverridePrivates) PrivatePropertyValue() string  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "DoNotOverridePrivates",
        Method: "PrivatePropertyValue",
        Parameters: []string{}
    })
    return "NOOP_RETURN_STRING"
}

// Class interface
type DoNotRecognizeAnyAsOptionalIface interface {
    Method() jsii.Any
}

// Struct proxy
type DoNotRecognizeAnyAsOptional struct {
}

func NewDoNotRecognizeAnyAsOptional() DoNotRecognizeAnyAsOptionalIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "DoNotRecognizeAnyAsOptional",
        Method: "NewDoNotRecognizeAnyAsOptional",
        Parameters: []string{}
    })

    return &DoNotRecognizeAnyAsOptional{
     // props
    }
}

func (d *DoNotRecognizeAnyAsOptional) Method() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "DoNotRecognizeAnyAsOptional",
        Method: "Method",
        Parameters: []string{"_requiredAny any", "_optionalAny any", "_optionalString string"}
    })
    return nil
}

// Class interface
type DocumentedClassIface interface {
    Greet() float64
    Hola() jsii.Any
}

// Struct proxy
type DocumentedClass struct {
}

func NewDocumentedClass() DocumentedClassIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "DocumentedClass",
        Method: "NewDocumentedClass",
        Parameters: []string{}
    })

    return &DocumentedClass{
     // props
    }
}

func (d *DocumentedClass) Greet() float64  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "DocumentedClass",
        Method: "Greet",
        Parameters: []string{"greetee jsii-calc.Greetee"}
    })
    return 0.0
}

func (d *DocumentedClass) Hola() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "DocumentedClass",
        Method: "Hola",
        Parameters: []string{}
    })
    return nil
}

// Class interface
type DontComplainAboutVariadicAfterOptionalIface interface {
    OptionalAndVariadic() string
}

// Struct proxy
type DontComplainAboutVariadicAfterOptional struct {
}

func NewDontComplainAboutVariadicAfterOptional() DontComplainAboutVariadicAfterOptionalIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "DontComplainAboutVariadicAfterOptional",
        Method: "NewDontComplainAboutVariadicAfterOptional",
        Parameters: []string{}
    })

    return &DontComplainAboutVariadicAfterOptional{
     // props
    }
}

func (d *DontComplainAboutVariadicAfterOptional) OptionalAndVariadic() string  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "DontComplainAboutVariadicAfterOptional",
        Method: "OptionalAndVariadic",
        Parameters: []string{"optional string", "things string"}
    })
    return "NOOP_RETURN_STRING"
}

// Class interface
type DoubleTroubleIface interface {
    jsii-calc.IFriendlyRandomGenerator
    jsii-calc.IRandomNumberGenerator
    @scope/jsii-calc-lib.IFriendly
    Hello() string
    Next() float64
}

// Struct proxy
type DoubleTrouble struct {
}

func NewDoubleTrouble() DoubleTroubleIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "DoubleTrouble",
        Method: "NewDoubleTrouble",
        Parameters: []string{}
    })

    return &DoubleTrouble{
     // props
    }
}

func (d *DoubleTrouble) Hello() string  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "DoubleTrouble",
        Method: "Hello",
        Parameters: []string{}
    })
    return "NOOP_RETURN_STRING"
}

func (d *DoubleTrouble) Next() float64  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "DoubleTrouble",
        Method: "Next",
        Parameters: []string{}
    })
    return 0.0
}

// Class interface
type DynamicPropertyBearerIface interface {
    GetDynamicProperty() string
    SetDynamicProperty()
    GetValueStore() string
    SetValueStore()
}

// Struct proxy
type DynamicPropertyBearer struct {
    DynamicProperty string
    ValueStore string
}

func (d DynamicPropertyBearer) GetDynamicProperty() string {
    return d.DynamicProperty
}

func (d DynamicPropertyBearer) GetValueStore() string {
    return d.ValueStore
}


func NewDynamicPropertyBearer(valueStore string) DynamicPropertyBearerIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "DynamicPropertyBearer",
        Method: "NewDynamicPropertyBearer",
        Parameters: []string{valueStore string}
    })

    return &DynamicPropertyBearer{
     // props
    }
}

func (d DynamicPropertyBearer) SetDynamicProperty(val string) {
    d.DynamicProperty = val
}

func (d DynamicPropertyBearer) SetValueStore(val string) {
    d.ValueStore = val
}

// Class interface
type DynamicPropertyBearerChildIface interface {
    GetDynamicProperty() string
    SetDynamicProperty()
    GetValueStore() string
    SetValueStore()
    GetOriginalValue() string
    SetOriginalValue()
    OverrideValue() string
}

// Struct proxy
type DynamicPropertyBearerChild struct {
    DynamicProperty string
    ValueStore string
    OriginalValue string
}

func (d DynamicPropertyBearerChild) GetDynamicProperty() string {
    return d.DynamicProperty
}

func (d DynamicPropertyBearerChild) GetValueStore() string {
    return d.ValueStore
}

func (d DynamicPropertyBearerChild) GetOriginalValue() string {
    return d.OriginalValue
}


func NewDynamicPropertyBearerChild(originalValue string) DynamicPropertyBearerChildIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "DynamicPropertyBearerChild",
        Method: "NewDynamicPropertyBearerChild",
        Parameters: []string{originalValue string}
    })

    return &DynamicPropertyBearerChild{
     // props
    }
}

func (d DynamicPropertyBearerChild) SetDynamicProperty(val string) {
    d.DynamicProperty = val
}

func (d DynamicPropertyBearerChild) SetValueStore(val string) {
    d.ValueStore = val
}

func (d DynamicPropertyBearerChild) SetOriginalValue(val string) {
    d.OriginalValue = val
}

func (d *DynamicPropertyBearerChild) OverrideValue() string  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "DynamicPropertyBearerChild",
        Method: "OverrideValue",
        Parameters: []string{"newValue string"}
    })
    return "NOOP_RETURN_STRING"
}

// Class interface
type EnumDispenserIface interface {
    RandomIntegerLikeEnum() AllTypesEnum
    RandomStringLikeEnum() StringEnum
}

// Struct proxy
type EnumDispenser struct {
}

func (e *EnumDispenser) RandomIntegerLikeEnum() AllTypesEnum  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "EnumDispenser",
        Method: "RandomIntegerLikeEnum",
        Parameters: []string{}
    })
    return "ENUM_DUMMY"
}

func (e *EnumDispenser) RandomStringLikeEnum() StringEnum  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "EnumDispenser",
        Method: "RandomStringLikeEnum",
        Parameters: []string{}
    })
    return "ENUM_DUMMY"
}

// Class interface
type EraseUndefinedHashValuesIface interface {
    DoesKeyExist() bool
    Prop1IsNull() map[string]jsii.Any
    Prop2IsUndefined() map[string]jsii.Any
}

// Struct proxy
type EraseUndefinedHashValues struct {
}

func NewEraseUndefinedHashValues() EraseUndefinedHashValuesIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "EraseUndefinedHashValues",
        Method: "NewEraseUndefinedHashValues",
        Parameters: []string{}
    })

    return &EraseUndefinedHashValues{
     // props
    }
}

func (e *EraseUndefinedHashValues) DoesKeyExist() bool  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "EraseUndefinedHashValues",
        Method: "DoesKeyExist",
        Parameters: []string{"opts jsii-calc.EraseUndefinedHashValuesOptions", "key string"}
    })
    return true
}

func (e *EraseUndefinedHashValues) Prop1IsNull() map[string]jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "EraseUndefinedHashValues",
        Method: "Prop1IsNull",
        Parameters: []string{}
    })
    return nil
}

func (e *EraseUndefinedHashValues) Prop2IsUndefined() map[string]jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "EraseUndefinedHashValues",
        Method: "Prop2IsUndefined",
        Parameters: []string{}
    })
    return nil
}

// Struct interface
type EraseUndefinedHashValuesOptionsIface interface {
    GetOption1() string
    GetOption2() string
}

// Struct proxy
type EraseUndefinedHashValuesOptions struct {
    Option1 string
    Option2 string
}

func (e EraseUndefinedHashValuesOptions) GetOption1() string {
    return e.Option1
}

func (e EraseUndefinedHashValuesOptions) GetOption2() string {
    return e.Option2
}


// Class interface
type ExperimentalClassIface interface {
    GetReadonlyProperty() string
    SetReadonlyProperty()
    GetMutableProperty() float64
    SetMutableProperty()
    Method() jsii.Any
}

// Struct proxy
type ExperimentalClass struct {
    ReadonlyProperty string
    MutableProperty float64
}

func (e ExperimentalClass) GetReadonlyProperty() string {
    return e.ReadonlyProperty
}

func (e ExperimentalClass) GetMutableProperty() float64 {
    return e.MutableProperty
}


func NewExperimentalClass(readonlyString string, mutableNumber number) ExperimentalClassIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "ExperimentalClass",
        Method: "NewExperimentalClass",
        Parameters: []string{readonlyString string, mutableNumber number}
    })

    return &ExperimentalClass{
     // props
    }
}

func (e ExperimentalClass) SetReadonlyProperty(val string) {
    e.ReadonlyProperty = val
}

func (e ExperimentalClass) SetMutableProperty(val float64) {
    e.MutableProperty = val
}

func (e *ExperimentalClass) Method() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "ExperimentalClass",
        Method: "Method",
        Parameters: []string{}
    })
    return nil
}

type ExperimentalEnum string

const (
    ExperimentalEnumOptionA ExperimentalEnum = "OPTION_A"
    ExperimentalEnumOptionB ExperimentalEnum = "OPTION_B"
)

// Struct interface
type ExperimentalStructIface interface {
    GetReadonlyProperty() string
}

// Struct proxy
type ExperimentalStruct struct {
    ReadonlyProperty string
}

func (e ExperimentalStruct) GetReadonlyProperty() string {
    return e.ReadonlyProperty
}


// Class interface
type ExportedBaseClassIface interface {
    GetSuccess() bool
    SetSuccess()
}

// Struct proxy
type ExportedBaseClass struct {
    Success bool
}

func (e ExportedBaseClass) GetSuccess() bool {
    return e.Success
}


func NewExportedBaseClass(success boolean) ExportedBaseClassIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "ExportedBaseClass",
        Method: "NewExportedBaseClass",
        Parameters: []string{success boolean}
    })

    return &ExportedBaseClass{
     // props
    }
}

func (e ExportedBaseClass) SetSuccess(val bool) {
    e.Success = val
}

// Struct interface
type ExtendsInternalInterfaceIface interface {
    GetBoom() bool
    GetProp() string
}

// Struct proxy
type ExtendsInternalInterface struct {
    Boom bool
    Prop string
}

func (e ExtendsInternalInterface) GetBoom() bool {
    return e.Boom
}

func (e ExtendsInternalInterface) GetProp() string {
    return e.Prop
}


// Class interface
type ExternalClassIface interface {
    GetReadonlyProperty() string
    SetReadonlyProperty()
    GetMutableProperty() float64
    SetMutableProperty()
    Method() jsii.Any
}

// Struct proxy
type ExternalClass struct {
    ReadonlyProperty string
    MutableProperty float64
}

func (e ExternalClass) GetReadonlyProperty() string {
    return e.ReadonlyProperty
}

func (e ExternalClass) GetMutableProperty() float64 {
    return e.MutableProperty
}


func NewExternalClass(readonlyString string, mutableNumber number) ExternalClassIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "ExternalClass",
        Method: "NewExternalClass",
        Parameters: []string{readonlyString string, mutableNumber number}
    })

    return &ExternalClass{
     // props
    }
}

func (e ExternalClass) SetReadonlyProperty(val string) {
    e.ReadonlyProperty = val
}

func (e ExternalClass) SetMutableProperty(val float64) {
    e.MutableProperty = val
}

func (e *ExternalClass) Method() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "ExternalClass",
        Method: "Method",
        Parameters: []string{}
    })
    return nil
}

type ExternalEnum string

const (
    ExternalEnumOptionA ExternalEnum = "OPTION_A"
    ExternalEnumOptionB ExternalEnum = "OPTION_B"
)

// Struct interface
type ExternalStructIface interface {
    GetReadonlyProperty() string
}

// Struct proxy
type ExternalStruct struct {
    ReadonlyProperty string
}

func (e ExternalStruct) GetReadonlyProperty() string {
    return e.ReadonlyProperty
}


// Class interface
type GiveMeStructsIface interface {
    GetStructLiteral() jsii.Any
    SetStructLiteral()
    DerivedToFirst() jsii.Any
    ReadDerivedNonPrimitive() DoubleTrouble
    ReadFirstNumber() float64
}

// Struct proxy
type GiveMeStructs struct {
    StructLiteral jsii.Any
}

func (g GiveMeStructs) GetStructLiteral() jsii.Any {
    return g.StructLiteral
}


func NewGiveMeStructs() GiveMeStructsIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "GiveMeStructs",
        Method: "NewGiveMeStructs",
        Parameters: []string{}
    })

    return &GiveMeStructs{
     // props
    }
}

func (g GiveMeStructs) SetStructLiteral(val jsii.Any) {
    g.StructLiteral = val
}

func (g *GiveMeStructs) DerivedToFirst() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "GiveMeStructs",
        Method: "DerivedToFirst",
        Parameters: []string{"derived jsii-calc.DerivedStruct"}
    })
    return nil
}

func (g *GiveMeStructs) ReadDerivedNonPrimitive() DoubleTrouble  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "GiveMeStructs",
        Method: "ReadDerivedNonPrimitive",
        Parameters: []string{"derived jsii-calc.DerivedStruct"}
    })
    return DoubleTrouble{}
}

func (g *GiveMeStructs) ReadFirstNumber() float64  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "GiveMeStructs",
        Method: "ReadFirstNumber",
        Parameters: []string{"first @scope/jsii-calc-lib.MyFirstStruct"}
    })
    return 0.0
}

// Struct interface
type GreeteeIface interface {
    GetName() string
}

// Struct proxy
type Greetee struct {
    Name string
}

func (g Greetee) GetName() string {
    return g.Name
}


// Class interface
type GreetingAugmenterIface interface {
    BetterGreeting() string
}

// Struct proxy
type GreetingAugmenter struct {
}

func NewGreetingAugmenter() GreetingAugmenterIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "GreetingAugmenter",
        Method: "NewGreetingAugmenter",
        Parameters: []string{}
    })

    return &GreetingAugmenter{
     // props
    }
}

func (g *GreetingAugmenter) BetterGreeting() string  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "GreetingAugmenter",
        Method: "BetterGreeting",
        Parameters: []string{"friendly @scope/jsii-calc-lib.IFriendly"}
    })
    return "NOOP_RETURN_STRING"
}

// Behaviorial interface
type IAnonymousImplementationProvider interface {
    ProvideAsClass() Implementation
    ProvideAsInterface() IAnonymouslyImplementMe
}

// Behaviorial interface
type IAnonymouslyImplementMe interface {
    Verb() string
    GetValue() float64
}

// Behaviorial interface
type IAnotherPublicInterface interface {
    GetA() string
}

// Behaviorial interface
type IBell interface {
    Ring()
}

// Behaviorial interface
type IBellRinger interface {
    YourTurn()
}

// Behaviorial interface
type IConcreteBellRinger interface {
    YourTurn()
}

// Behaviorial interface
type IDeprecatedInterface interface {
    Method()
    GetMutableProperty() float64
}

// Behaviorial interface
type IExperimentalInterface interface {
    Method()
    GetMutableProperty() float64
}

// Behaviorial interface
type IExtendsPrivateInterface interface {
    GetMoreThings() []string
    GetPrivate() string
}

// Behaviorial interface
type IExternalInterface interface {
    Method()
    GetMutableProperty() float64
}

// Behaviorial interface
type IFriendlier interface {
    @scope/jsii-calc-lib.IFriendly
    Farewell() string
    Goodbye() string
}

// Behaviorial interface
type IFriendlyRandomGenerator interface {
    jsii-calc.IRandomNumberGenerator
    @scope/jsii-calc-lib.IFriendly
}

// Behaviorial interface
type IInterfaceImplementedByAbstractClass interface {
    GetPropFromInterface() string
}

// Behaviorial interface
type IInterfaceThatShouldNotBeADataType interface {
    jsii-calc.IInterfaceWithMethods
    GetOtherValue() string
}

// Behaviorial interface
type IInterfaceWithInternal interface {
    Visible()
}

// Behaviorial interface
type IInterfaceWithMethods interface {
    DoThings()
    GetValue() string
}

// Behaviorial interface
type IInterfaceWithOptionalMethodArguments interface {
    Hello()
}

// Behaviorial interface
type IInterfaceWithProperties interface {
    GetReadOnlyString() string
    GetReadWriteString() string
}

// Behaviorial interface
type IInterfaceWithPropertiesExtension interface {
    jsii-calc.IInterfaceWithProperties
    GetFoo() float64
}

// Behaviorial interface
type IJSII417Derived interface {
    jsii-calc.IJSII417PublicBaseOfBase
    Bar()
    Baz()
    GetProperty() string
}

// Behaviorial interface
type IJSII417PublicBaseOfBase interface {
    Foo()
    GetHasRoot() bool
}

// Behaviorial interface
type IJsii487External interface {
}

// Behaviorial interface
type IJsii487External2 interface {
}

// Behaviorial interface
type IJsii496 interface {
}

// Behaviorial interface
type IMutableObjectLiteral interface {
    GetValue() string
}

// Behaviorial interface
type INonInternalInterface interface {
    jsii-calc.IAnotherPublicInterface
    GetB() string
    GetC() string
}

// Behaviorial interface
type IObjectWithProperty interface {
    WasSet() bool
    GetProperty() string
}

// Behaviorial interface
type IOptionalMethod interface {
    Optional() string
}

// Behaviorial interface
type IPrivatelyImplemented interface {
    GetSuccess() bool
}

// Behaviorial interface
type IPublicInterface interface {
    Bye() string
}

// Behaviorial interface
type IPublicInterface2 interface {
    Ciao() string
}

// Behaviorial interface
type IRandomNumberGenerator interface {
    Next() float64
}

// Behaviorial interface
type IReturnJsii976 interface {
    GetFoo() float64
}

// Behaviorial interface
type IReturnsNumber interface {
    ObtainNumber() jsii.Any
    GetNumberProp() jsii.Any
}

// Behaviorial interface
type IStableInterface interface {
    Method()
    GetMutableProperty() float64
}

// Behaviorial interface
type IStructReturningDelegate interface {
    ReturnStruct() StructB
}

// Class interface
type ImplementInternalInterfaceIface interface {
    GetProp() string
    SetProp()
}

// Struct proxy
type ImplementInternalInterface struct {
    Prop string
}

func (i ImplementInternalInterface) GetProp() string {
    return i.Prop
}


func NewImplementInternalInterface() ImplementInternalInterfaceIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "ImplementInternalInterface",
        Method: "NewImplementInternalInterface",
        Parameters: []string{}
    })

    return &ImplementInternalInterface{
     // props
    }
}

func (i ImplementInternalInterface) SetProp(val string) {
    i.Prop = val
}

// Class interface
type ImplementationIface interface {
    GetValue() float64
    SetValue()
}

// Struct proxy
type Implementation struct {
    Value float64
}

func (i Implementation) GetValue() float64 {
    return i.Value
}


func NewImplementation() ImplementationIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "Implementation",
        Method: "NewImplementation",
        Parameters: []string{}
    })

    return &Implementation{
     // props
    }
}

func (i Implementation) SetValue(val float64) {
    i.Value = val
}

// Class interface
type ImplementsInterfaceWithInternalIface interface {
    jsii-calc.IInterfaceWithInternal
    Visible() jsii.Any
}

// Struct proxy
type ImplementsInterfaceWithInternal struct {
}

func NewImplementsInterfaceWithInternal() ImplementsInterfaceWithInternalIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "ImplementsInterfaceWithInternal",
        Method: "NewImplementsInterfaceWithInternal",
        Parameters: []string{}
    })

    return &ImplementsInterfaceWithInternal{
     // props
    }
}

func (i *ImplementsInterfaceWithInternal) Visible() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "ImplementsInterfaceWithInternal",
        Method: "Visible",
        Parameters: []string{}
    })
    return nil
}

// Class interface
type ImplementsInterfaceWithInternalSubclassIface interface {
    jsii-calc.IInterfaceWithInternal
    Visible() jsii.Any
}

// Struct proxy
type ImplementsInterfaceWithInternalSubclass struct {
}

func NewImplementsInterfaceWithInternalSubclass() ImplementsInterfaceWithInternalSubclassIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "ImplementsInterfaceWithInternalSubclass",
        Method: "NewImplementsInterfaceWithInternalSubclass",
        Parameters: []string{}
    })

    return &ImplementsInterfaceWithInternalSubclass{
     // props
    }
}

func (i *ImplementsInterfaceWithInternalSubclass) Visible() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "ImplementsInterfaceWithInternalSubclass",
        Method: "Visible",
        Parameters: []string{}
    })
    return nil
}

// Class interface
type ImplementsPrivateInterfaceIface interface {
    GetPrivate() string
    SetPrivate()
}

// Struct proxy
type ImplementsPrivateInterface struct {
    Private string
}

func (i ImplementsPrivateInterface) GetPrivate() string {
    return i.Private
}


func NewImplementsPrivateInterface() ImplementsPrivateInterfaceIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "ImplementsPrivateInterface",
        Method: "NewImplementsPrivateInterface",
        Parameters: []string{}
    })

    return &ImplementsPrivateInterface{
     // props
    }
}

func (i ImplementsPrivateInterface) SetPrivate(val string) {
    i.Private = val
}

// Struct interface
type ImplictBaseOfBaseIface interface {
    GetFoo() jsii.Any
    GetBar() string
    GetGoo() string
}

// Struct proxy
type ImplictBaseOfBase struct {
    Foo jsii.Any
    Bar string
    Goo string
}

func (i ImplictBaseOfBase) GetFoo() jsii.Any {
    return i.Foo
}

func (i ImplictBaseOfBase) GetBar() string {
    return i.Bar
}

func (i ImplictBaseOfBase) GetGoo() string {
    return i.Goo
}


// Class interface
type InbetweenClassIface interface {
    jsii-calc.IPublicInterface2
    Hello() jsii.Any
    Ciao() string
}

// Struct proxy
type InbetweenClass struct {
}

func NewInbetweenClass() InbetweenClassIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "InbetweenClass",
        Method: "NewInbetweenClass",
        Parameters: []string{}
    })

    return &InbetweenClass{
     // props
    }
}

func (i *InbetweenClass) Hello() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "InbetweenClass",
        Method: "Hello",
        Parameters: []string{}
    })
    return nil
}

func (i *InbetweenClass) Ciao() string  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "InbetweenClass",
        Method: "Ciao",
        Parameters: []string{}
    })
    return "NOOP_RETURN_STRING"
}

// Class interface
type InterfaceCollectionsIface interface {
    ListOfInterfaces() []IBell
    ListOfStructs() []StructA
    MapOfInterfaces() map[string]IBell
    MapOfStructs() map[string]StructA
}

// Struct proxy
type InterfaceCollections struct {
}

func (i *InterfaceCollections) ListOfInterfaces() []IBell  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "InterfaceCollections",
        Method: "ListOfInterfaces",
        Parameters: []string{}
    })
    return nil
}

func (i *InterfaceCollections) ListOfStructs() []StructA  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "InterfaceCollections",
        Method: "ListOfStructs",
        Parameters: []string{}
    })
    return nil
}

func (i *InterfaceCollections) MapOfInterfaces() map[string]IBell  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "InterfaceCollections",
        Method: "MapOfInterfaces",
        Parameters: []string{}
    })
    return nil
}

func (i *InterfaceCollections) MapOfStructs() map[string]StructA  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "InterfaceCollections",
        Method: "MapOfStructs",
        Parameters: []string{}
    })
    return nil
}

// Class interface
type InterfacesMakerIface interface {
    MakeInterfaces() []jsii.Any
}

// Struct proxy
type InterfacesMaker struct {
}

func (i *InterfacesMaker) MakeInterfaces() []jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "InterfacesMaker",
        Method: "MakeInterfaces",
        Parameters: []string{"count number"}
    })
    return nil
}

// Class interface
type IsomorphismIface interface {
    Myself() Isomorphism
}

// Struct proxy
type Isomorphism struct {
}

func NewIsomorphism() IsomorphismIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "Isomorphism",
        Method: "NewIsomorphism",
        Parameters: []string{}
    })

    return &Isomorphism{
     // props
    }
}

func (i *Isomorphism) Myself() Isomorphism  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "Isomorphism",
        Method: "Myself",
        Parameters: []string{}
    })
    return Isomorphism{}
}

// Class interface
type JSII417DerivedIface interface {
    GetHasRoot() bool
    SetHasRoot()
    GetProperty() string
    MakeInstance() Jsii417PublicBaseOfBase
    Foo() jsii.Any
    Bar() jsii.Any
    Baz() jsii.Any
}

// Struct proxy
type JSII417Derived struct {
    HasRoot bool
    Property string
}

func (j JSII417Derived) GetHasRoot() bool {
    return j.HasRoot
}

func (j JSII417Derived) GetProperty() string {
    return j.Property
}


func NewJSII417Derived(property string) JSII417DerivedIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "JSII417Derived",
        Method: "NewJSII417Derived",
        Parameters: []string{property string}
    })

    return &JSII417Derived{
     // props
    }
}

func (j JSII417Derived) SetHasRoot(val bool) {
    j.HasRoot = val
}

func (j JSII417Derived) SetProperty(val string) {
    j.Property = val
}

func (j *JSII417Derived) MakeInstance() Jsii417PublicBaseOfBase  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "JSII417Derived",
        Method: "MakeInstance",
        Parameters: []string{}
    })
    return Jsii417PublicBaseOfBase{}
}

func (j *JSII417Derived) Foo() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "JSII417Derived",
        Method: "Foo",
        Parameters: []string{}
    })
    return nil
}

func (j *JSII417Derived) Bar() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "JSII417Derived",
        Method: "Bar",
        Parameters: []string{}
    })
    return nil
}

func (j *JSII417Derived) Baz() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "JSII417Derived",
        Method: "Baz",
        Parameters: []string{}
    })
    return nil
}

// Class interface
type JSII417PublicBaseOfBaseIface interface {
    GetHasRoot() bool
    SetHasRoot()
    MakeInstance() Jsii417PublicBaseOfBase
    Foo() jsii.Any
}

// Struct proxy
type JSII417PublicBaseOfBase struct {
    HasRoot bool
}

func (j JSII417PublicBaseOfBase) GetHasRoot() bool {
    return j.HasRoot
}


func NewJSII417PublicBaseOfBase() JSII417PublicBaseOfBaseIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "JSII417PublicBaseOfBase",
        Method: "NewJSII417PublicBaseOfBase",
        Parameters: []string{}
    })

    return &JSII417PublicBaseOfBase{
     // props
    }
}

func (j JSII417PublicBaseOfBase) SetHasRoot(val bool) {
    j.HasRoot = val
}

func (j *JSII417PublicBaseOfBase) MakeInstance() Jsii417PublicBaseOfBase  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "JSII417PublicBaseOfBase",
        Method: "MakeInstance",
        Parameters: []string{}
    })
    return Jsii417PublicBaseOfBase{}
}

func (j *JSII417PublicBaseOfBase) Foo() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "JSII417PublicBaseOfBase",
        Method: "Foo",
        Parameters: []string{}
    })
    return nil
}

// Class interface
type JSObjectLiteralForInterfaceIface interface {
    GiveMeFriendly() jsii.Any
    GiveMeFriendlyGenerator() IFriendlyRandomGenerator
}

// Struct proxy
type JSObjectLiteralForInterface struct {
}

func NewJSObjectLiteralForInterface() JSObjectLiteralForInterfaceIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "JSObjectLiteralForInterface",
        Method: "NewJSObjectLiteralForInterface",
        Parameters: []string{}
    })

    return &JSObjectLiteralForInterface{
     // props
    }
}

func (j *JSObjectLiteralForInterface) GiveMeFriendly() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "JSObjectLiteralForInterface",
        Method: "GiveMeFriendly",
        Parameters: []string{}
    })
    return nil
}

func (j *JSObjectLiteralForInterface) GiveMeFriendlyGenerator() IFriendlyRandomGenerator  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "JSObjectLiteralForInterface",
        Method: "GiveMeFriendlyGenerator",
        Parameters: []string{}
    })
    return nil
}

// Class interface
type JSObjectLiteralToNativeIface interface {
    ReturnLiteral() JsObjectLiteralToNativeClass
}

// Struct proxy
type JSObjectLiteralToNative struct {
}

func NewJSObjectLiteralToNative() JSObjectLiteralToNativeIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "JSObjectLiteralToNative",
        Method: "NewJSObjectLiteralToNative",
        Parameters: []string{}
    })

    return &JSObjectLiteralToNative{
     // props
    }
}

func (j *JSObjectLiteralToNative) ReturnLiteral() JsObjectLiteralToNativeClass  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "JSObjectLiteralToNative",
        Method: "ReturnLiteral",
        Parameters: []string{}
    })
    return JsObjectLiteralToNativeClass{}
}

// Class interface
type JSObjectLiteralToNativeClassIface interface {
    GetPropA() string
    SetPropA()
    GetPropB() float64
    SetPropB()
}

// Struct proxy
type JSObjectLiteralToNativeClass struct {
    PropA string
    PropB float64
}

func (j JSObjectLiteralToNativeClass) GetPropA() string {
    return j.PropA
}

func (j JSObjectLiteralToNativeClass) GetPropB() float64 {
    return j.PropB
}


func NewJSObjectLiteralToNativeClass() JSObjectLiteralToNativeClassIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "JSObjectLiteralToNativeClass",
        Method: "NewJSObjectLiteralToNativeClass",
        Parameters: []string{}
    })

    return &JSObjectLiteralToNativeClass{
     // props
    }
}

func (j JSObjectLiteralToNativeClass) SetPropA(val string) {
    j.PropA = val
}

func (j JSObjectLiteralToNativeClass) SetPropB(val float64) {
    j.PropB = val
}

// Class interface
type JavaReservedWordsIface interface {
    GetWhile() string
    SetWhile()
    Abstract() jsii.Any
    Assert() jsii.Any
    Boolean() jsii.Any
    Break() jsii.Any
    Byte() jsii.Any
    Case() jsii.Any
    Catch() jsii.Any
    Char() jsii.Any
    Class() jsii.Any
    Const() jsii.Any
    Continue() jsii.Any
    Default() jsii.Any
    Do() jsii.Any
    Double() jsii.Any
    Else() jsii.Any
    Enum() jsii.Any
    Extends() jsii.Any
    False() jsii.Any
    Final() jsii.Any
    Finally() jsii.Any
    Float() jsii.Any
    For() jsii.Any
    Goto() jsii.Any
    If() jsii.Any
    Implements() jsii.Any
    Import() jsii.Any
    Instanceof() jsii.Any
    Int() jsii.Any
    Interface() jsii.Any
    Long() jsii.Any
    Native() jsii.Any
    New() jsii.Any
    Null() jsii.Any
    Package() jsii.Any
    Private() jsii.Any
    Protected() jsii.Any
    Public() jsii.Any
    Return() jsii.Any
    Short() jsii.Any
    Static() jsii.Any
    Strictfp() jsii.Any
    Super() jsii.Any
    Switch() jsii.Any
    Synchronized() jsii.Any
    This() jsii.Any
    Throw() jsii.Any
    Throws() jsii.Any
    Transient() jsii.Any
    True() jsii.Any
    Try() jsii.Any
    Void() jsii.Any
    Volatile() jsii.Any
}

// Struct proxy
type JavaReservedWords struct {
    While string
}

func (j JavaReservedWords) GetWhile() string {
    return j.While
}


func NewJavaReservedWords() JavaReservedWordsIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "JavaReservedWords",
        Method: "NewJavaReservedWords",
        Parameters: []string{}
    })

    return &JavaReservedWords{
     // props
    }
}

func (j JavaReservedWords) SetWhile(val string) {
    j.While = val
}

func (j *JavaReservedWords) Abstract() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "JavaReservedWords",
        Method: "Abstract",
        Parameters: []string{}
    })
    return nil
}

func (j *JavaReservedWords) Assert() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "JavaReservedWords",
        Method: "Assert",
        Parameters: []string{}
    })
    return nil
}

func (j *JavaReservedWords) Boolean() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "JavaReservedWords",
        Method: "Boolean",
        Parameters: []string{}
    })
    return nil
}

func (j *JavaReservedWords) Break() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "JavaReservedWords",
        Method: "Break",
        Parameters: []string{}
    })
    return nil
}

func (j *JavaReservedWords) Byte() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "JavaReservedWords",
        Method: "Byte",
        Parameters: []string{}
    })
    return nil
}

func (j *JavaReservedWords) Case() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "JavaReservedWords",
        Method: "Case",
        Parameters: []string{}
    })
    return nil
}

func (j *JavaReservedWords) Catch() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "JavaReservedWords",
        Method: "Catch",
        Parameters: []string{}
    })
    return nil
}

func (j *JavaReservedWords) Char() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "JavaReservedWords",
        Method: "Char",
        Parameters: []string{}
    })
    return nil
}

func (j *JavaReservedWords) Class() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "JavaReservedWords",
        Method: "Class",
        Parameters: []string{}
    })
    return nil
}

func (j *JavaReservedWords) Const() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "JavaReservedWords",
        Method: "Const",
        Parameters: []string{}
    })
    return nil
}

func (j *JavaReservedWords) Continue() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "JavaReservedWords",
        Method: "Continue",
        Parameters: []string{}
    })
    return nil
}

func (j *JavaReservedWords) Default() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "JavaReservedWords",
        Method: "Default",
        Parameters: []string{}
    })
    return nil
}

func (j *JavaReservedWords) Do() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "JavaReservedWords",
        Method: "Do",
        Parameters: []string{}
    })
    return nil
}

func (j *JavaReservedWords) Double() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "JavaReservedWords",
        Method: "Double",
        Parameters: []string{}
    })
    return nil
}

func (j *JavaReservedWords) Else() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "JavaReservedWords",
        Method: "Else",
        Parameters: []string{}
    })
    return nil
}

func (j *JavaReservedWords) Enum() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "JavaReservedWords",
        Method: "Enum",
        Parameters: []string{}
    })
    return nil
}

func (j *JavaReservedWords) Extends() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "JavaReservedWords",
        Method: "Extends",
        Parameters: []string{}
    })
    return nil
}

func (j *JavaReservedWords) False() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "JavaReservedWords",
        Method: "False",
        Parameters: []string{}
    })
    return nil
}

func (j *JavaReservedWords) Final() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "JavaReservedWords",
        Method: "Final",
        Parameters: []string{}
    })
    return nil
}

func (j *JavaReservedWords) Finally() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "JavaReservedWords",
        Method: "Finally",
        Parameters: []string{}
    })
    return nil
}

func (j *JavaReservedWords) Float() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "JavaReservedWords",
        Method: "Float",
        Parameters: []string{}
    })
    return nil
}

func (j *JavaReservedWords) For() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "JavaReservedWords",
        Method: "For",
        Parameters: []string{}
    })
    return nil
}

func (j *JavaReservedWords) Goto() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "JavaReservedWords",
        Method: "Goto",
        Parameters: []string{}
    })
    return nil
}

func (j *JavaReservedWords) If() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "JavaReservedWords",
        Method: "If",
        Parameters: []string{}
    })
    return nil
}

func (j *JavaReservedWords) Implements() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "JavaReservedWords",
        Method: "Implements",
        Parameters: []string{}
    })
    return nil
}

func (j *JavaReservedWords) Import() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "JavaReservedWords",
        Method: "Import",
        Parameters: []string{}
    })
    return nil
}

func (j *JavaReservedWords) Instanceof() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "JavaReservedWords",
        Method: "Instanceof",
        Parameters: []string{}
    })
    return nil
}

func (j *JavaReservedWords) Int() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "JavaReservedWords",
        Method: "Int",
        Parameters: []string{}
    })
    return nil
}

func (j *JavaReservedWords) Interface() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "JavaReservedWords",
        Method: "Interface",
        Parameters: []string{}
    })
    return nil
}

func (j *JavaReservedWords) Long() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "JavaReservedWords",
        Method: "Long",
        Parameters: []string{}
    })
    return nil
}

func (j *JavaReservedWords) Native() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "JavaReservedWords",
        Method: "Native",
        Parameters: []string{}
    })
    return nil
}

func (j *JavaReservedWords) New() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "JavaReservedWords",
        Method: "New",
        Parameters: []string{}
    })
    return nil
}

func (j *JavaReservedWords) Null() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "JavaReservedWords",
        Method: "Null",
        Parameters: []string{}
    })
    return nil
}

func (j *JavaReservedWords) Package() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "JavaReservedWords",
        Method: "Package",
        Parameters: []string{}
    })
    return nil
}

func (j *JavaReservedWords) Private() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "JavaReservedWords",
        Method: "Private",
        Parameters: []string{}
    })
    return nil
}

func (j *JavaReservedWords) Protected() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "JavaReservedWords",
        Method: "Protected",
        Parameters: []string{}
    })
    return nil
}

func (j *JavaReservedWords) Public() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "JavaReservedWords",
        Method: "Public",
        Parameters: []string{}
    })
    return nil
}

func (j *JavaReservedWords) Return() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "JavaReservedWords",
        Method: "Return",
        Parameters: []string{}
    })
    return nil
}

func (j *JavaReservedWords) Short() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "JavaReservedWords",
        Method: "Short",
        Parameters: []string{}
    })
    return nil
}

func (j *JavaReservedWords) Static() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "JavaReservedWords",
        Method: "Static",
        Parameters: []string{}
    })
    return nil
}

func (j *JavaReservedWords) Strictfp() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "JavaReservedWords",
        Method: "Strictfp",
        Parameters: []string{}
    })
    return nil
}

func (j *JavaReservedWords) Super() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "JavaReservedWords",
        Method: "Super",
        Parameters: []string{}
    })
    return nil
}

func (j *JavaReservedWords) Switch() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "JavaReservedWords",
        Method: "Switch",
        Parameters: []string{}
    })
    return nil
}

func (j *JavaReservedWords) Synchronized() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "JavaReservedWords",
        Method: "Synchronized",
        Parameters: []string{}
    })
    return nil
}

func (j *JavaReservedWords) This() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "JavaReservedWords",
        Method: "This",
        Parameters: []string{}
    })
    return nil
}

func (j *JavaReservedWords) Throw() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "JavaReservedWords",
        Method: "Throw",
        Parameters: []string{}
    })
    return nil
}

func (j *JavaReservedWords) Throws() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "JavaReservedWords",
        Method: "Throws",
        Parameters: []string{}
    })
    return nil
}

func (j *JavaReservedWords) Transient() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "JavaReservedWords",
        Method: "Transient",
        Parameters: []string{}
    })
    return nil
}

func (j *JavaReservedWords) True() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "JavaReservedWords",
        Method: "True",
        Parameters: []string{}
    })
    return nil
}

func (j *JavaReservedWords) Try() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "JavaReservedWords",
        Method: "Try",
        Parameters: []string{}
    })
    return nil
}

func (j *JavaReservedWords) Void() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "JavaReservedWords",
        Method: "Void",
        Parameters: []string{}
    })
    return nil
}

func (j *JavaReservedWords) Volatile() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "JavaReservedWords",
        Method: "Volatile",
        Parameters: []string{}
    })
    return nil
}

// Class interface
type Jsii487DerivedIface interface {
    jsii-calc.IJsii487External2
    jsii-calc.IJsii487External
}

// Struct proxy
type Jsii487Derived struct {
}

func NewJsii487Derived() Jsii487DerivedIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "Jsii487Derived",
        Method: "NewJsii487Derived",
        Parameters: []string{}
    })

    return &Jsii487Derived{
     // props
    }
}

// Class interface
type Jsii496DerivedIface interface {
    jsii-calc.IJsii496
}

// Struct proxy
type Jsii496Derived struct {
}

func NewJsii496Derived() Jsii496DerivedIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "Jsii496Derived",
        Method: "NewJsii496Derived",
        Parameters: []string{}
    })

    return &Jsii496Derived{
     // props
    }
}

// Class interface
type JsiiAgentIface interface {
    GetValue() string
    SetValue()
}

// Struct proxy
type JsiiAgent struct {
    Value string
}

func (j JsiiAgent) GetValue() string {
    return j.Value
}


func NewJsiiAgent() JsiiAgentIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "JsiiAgent",
        Method: "NewJsiiAgent",
        Parameters: []string{}
    })

    return &JsiiAgent{
     // props
    }
}

func (j JsiiAgent) SetValue(val string) {
    j.Value = val
}

// Class interface
type JsonFormatterIface interface {
    AnyArray() jsii.Any
    AnyBooleanFalse() jsii.Any
    AnyBooleanTrue() jsii.Any
    AnyDate() jsii.Any
    AnyEmptyString() jsii.Any
    AnyFunction() jsii.Any
    AnyHash() jsii.Any
    AnyNull() jsii.Any
    AnyNumber() jsii.Any
    AnyRef() jsii.Any
    AnyString() jsii.Any
    AnyUndefined() jsii.Any
    AnyZero() jsii.Any
    Stringify() string
}

// Struct proxy
type JsonFormatter struct {
}

func (j *JsonFormatter) AnyArray() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "JsonFormatter",
        Method: "AnyArray",
        Parameters: []string{}
    })
    return nil
}

func (j *JsonFormatter) AnyBooleanFalse() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "JsonFormatter",
        Method: "AnyBooleanFalse",
        Parameters: []string{}
    })
    return nil
}

func (j *JsonFormatter) AnyBooleanTrue() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "JsonFormatter",
        Method: "AnyBooleanTrue",
        Parameters: []string{}
    })
    return nil
}

func (j *JsonFormatter) AnyDate() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "JsonFormatter",
        Method: "AnyDate",
        Parameters: []string{}
    })
    return nil
}

func (j *JsonFormatter) AnyEmptyString() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "JsonFormatter",
        Method: "AnyEmptyString",
        Parameters: []string{}
    })
    return nil
}

func (j *JsonFormatter) AnyFunction() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "JsonFormatter",
        Method: "AnyFunction",
        Parameters: []string{}
    })
    return nil
}

func (j *JsonFormatter) AnyHash() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "JsonFormatter",
        Method: "AnyHash",
        Parameters: []string{}
    })
    return nil
}

func (j *JsonFormatter) AnyNull() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "JsonFormatter",
        Method: "AnyNull",
        Parameters: []string{}
    })
    return nil
}

func (j *JsonFormatter) AnyNumber() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "JsonFormatter",
        Method: "AnyNumber",
        Parameters: []string{}
    })
    return nil
}

func (j *JsonFormatter) AnyRef() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "JsonFormatter",
        Method: "AnyRef",
        Parameters: []string{}
    })
    return nil
}

func (j *JsonFormatter) AnyString() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "JsonFormatter",
        Method: "AnyString",
        Parameters: []string{}
    })
    return nil
}

func (j *JsonFormatter) AnyUndefined() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "JsonFormatter",
        Method: "AnyUndefined",
        Parameters: []string{}
    })
    return nil
}

func (j *JsonFormatter) AnyZero() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "JsonFormatter",
        Method: "AnyZero",
        Parameters: []string{}
    })
    return nil
}

func (j *JsonFormatter) Stringify() string  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "JsonFormatter",
        Method: "Stringify",
        Parameters: []string{"value any"}
    })
    return "NOOP_RETURN_STRING"
}

// Struct interface
type LoadBalancedFargateServicePropsIface interface {
    GetContainerPort() float64
    GetCpu() string
    GetMemoryMiB() string
    GetPublicLoadBalancer() bool
    GetPublicTasks() bool
}

// Struct proxy
type LoadBalancedFargateServiceProps struct {
    ContainerPort float64
    Cpu string
    MemoryMiB string
    PublicLoadBalancer bool
    PublicTasks bool
}

func (l LoadBalancedFargateServiceProps) GetContainerPort() float64 {
    return l.ContainerPort
}

func (l LoadBalancedFargateServiceProps) GetCpu() string {
    return l.Cpu
}

func (l LoadBalancedFargateServiceProps) GetMemoryMiB() string {
    return l.MemoryMiB
}

func (l LoadBalancedFargateServiceProps) GetPublicLoadBalancer() bool {
    return l.PublicLoadBalancer
}

func (l LoadBalancedFargateServiceProps) GetPublicTasks() bool {
    return l.PublicTasks
}


// Class interface
type MethodNamedPropertyIface interface {
    GetElite() float64
    SetElite()
    Property() string
}

// Struct proxy
type MethodNamedProperty struct {
    Elite float64
}

func (m MethodNamedProperty) GetElite() float64 {
    return m.Elite
}


func NewMethodNamedProperty() MethodNamedPropertyIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "MethodNamedProperty",
        Method: "NewMethodNamedProperty",
        Parameters: []string{}
    })

    return &MethodNamedProperty{
     // props
    }
}

func (m MethodNamedProperty) SetElite(val float64) {
    m.Elite = val
}

func (m *MethodNamedProperty) Property() string  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "MethodNamedProperty",
        Method: "Property",
        Parameters: []string{}
    })
    return "NOOP_RETURN_STRING"
}

// Class interface
type MultiplyIface interface {
    @scope/jsii-calc-lib.IFriendly
    jsii-calc.IFriendlier
    @scope/jsii-calc-lib.IFriendly
    jsii-calc.IRandomNumberGenerator
    GetValue() float64
    SetValue()
    GetLhs() jsii.Any
    SetLhs()
    GetRhs() jsii.Any
    SetRhs()
    TypeName() jsii.Any
    ToString() string
    Hello() string
    Farewell() string
    Goodbye() string
    Next() float64
}

// Struct proxy
type Multiply struct {
    Value float64
    Lhs jsii.Any
    Rhs jsii.Any
}

func (m Multiply) GetValue() float64 {
    return m.Value
}

func (m Multiply) GetLhs() jsii.Any {
    return m.Lhs
}

func (m Multiply) GetRhs() jsii.Any {
    return m.Rhs
}


// Creates a BinaryOperation.
func NewMultiply(lhs @scope/jsii-calc-lib.NumericValue, rhs @scope/jsii-calc-lib.NumericValue) MultiplyIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "Multiply",
        Method: "NewMultiply",
        Parameters: []string{lhs @scope/jsii-calc-lib.NumericValue, rhs @scope/jsii-calc-lib.NumericValue}
    })

    return &Multiply{
     // props
    }
}

func (m Multiply) SetValue(val float64) {
    m.Value = val
}

func (m Multiply) SetLhs(val jsii.Any) {
    m.Lhs = val
}

func (m Multiply) SetRhs(val jsii.Any) {
    m.Rhs = val
}

func (m *Multiply) TypeName() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "Multiply",
        Method: "TypeName",
        Parameters: []string{}
    })
    return nil
}

func (m *Multiply) ToString() string  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "Multiply",
        Method: "ToString",
        Parameters: []string{}
    })
    return "NOOP_RETURN_STRING"
}

func (m *Multiply) Hello() string  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "Multiply",
        Method: "Hello",
        Parameters: []string{}
    })
    return "NOOP_RETURN_STRING"
}

func (m *Multiply) Farewell() string  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "Multiply",
        Method: "Farewell",
        Parameters: []string{}
    })
    return "NOOP_RETURN_STRING"
}

func (m *Multiply) Goodbye() string  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "Multiply",
        Method: "Goodbye",
        Parameters: []string{}
    })
    return "NOOP_RETURN_STRING"
}

func (m *Multiply) Next() float64  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "Multiply",
        Method: "Next",
        Parameters: []string{}
    })
    return 0.0
}

// Class interface
type NegateIface interface {
    jsii-calc.IFriendlier
    @scope/jsii-calc-lib.IFriendly
    GetValue() float64
    SetValue()
    GetOperand() jsii.Any
    SetOperand()
    TypeName() jsii.Any
    ToString() string
    Farewell() string
    Goodbye() string
    Hello() string
}

// Struct proxy
type Negate struct {
    Value float64
    Operand jsii.Any
}

func (n Negate) GetValue() float64 {
    return n.Value
}

func (n Negate) GetOperand() jsii.Any {
    return n.Operand
}


func NewNegate(operand @scope/jsii-calc-lib.NumericValue) NegateIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "Negate",
        Method: "NewNegate",
        Parameters: []string{operand @scope/jsii-calc-lib.NumericValue}
    })

    return &Negate{
     // props
    }
}

func (n Negate) SetValue(val float64) {
    n.Value = val
}

func (n Negate) SetOperand(val jsii.Any) {
    n.Operand = val
}

func (n *Negate) TypeName() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "Negate",
        Method: "TypeName",
        Parameters: []string{}
    })
    return nil
}

func (n *Negate) ToString() string  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "Negate",
        Method: "ToString",
        Parameters: []string{}
    })
    return "NOOP_RETURN_STRING"
}

func (n *Negate) Farewell() string  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "Negate",
        Method: "Farewell",
        Parameters: []string{}
    })
    return "NOOP_RETURN_STRING"
}

func (n *Negate) Goodbye() string  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "Negate",
        Method: "Goodbye",
        Parameters: []string{}
    })
    return "NOOP_RETURN_STRING"
}

func (n *Negate) Hello() string  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "Negate",
        Method: "Hello",
        Parameters: []string{}
    })
    return "NOOP_RETURN_STRING"
}

// Class interface
type NestedClassInstanceIface interface {
    MakeInstance() jsii.Any
}

// Struct proxy
type NestedClassInstance struct {
}

func (n *NestedClassInstance) MakeInstance() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "NestedClassInstance",
        Method: "MakeInstance",
        Parameters: []string{}
    })
    return nil
}

// Struct interface
type NestedStructIface interface {
    GetNumberProp() float64
}

// Struct proxy
type NestedStruct struct {
    NumberProp float64
}

func (n NestedStruct) GetNumberProp() float64 {
    return n.NumberProp
}


// Class interface
type NodeStandardLibraryIface interface {
    GetOsPlatform() string
    SetOsPlatform()
    CryptoSha256() string
    FsReadFile() string
    FsReadFileSync() string
}

// Struct proxy
type NodeStandardLibrary struct {
    OsPlatform string
}

func (n NodeStandardLibrary) GetOsPlatform() string {
    return n.OsPlatform
}


func NewNodeStandardLibrary() NodeStandardLibraryIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "NodeStandardLibrary",
        Method: "NewNodeStandardLibrary",
        Parameters: []string{}
    })

    return &NodeStandardLibrary{
     // props
    }
}

func (n NodeStandardLibrary) SetOsPlatform(val string) {
    n.OsPlatform = val
}

func (n *NodeStandardLibrary) CryptoSha256() string  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "NodeStandardLibrary",
        Method: "CryptoSha256",
        Parameters: []string{}
    })
    return "NOOP_RETURN_STRING"
}

func (n *NodeStandardLibrary) FsReadFile() string  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "NodeStandardLibrary",
        Method: "FsReadFile",
        Parameters: []string{}
    })
    return "NOOP_RETURN_STRING"
}

func (n *NodeStandardLibrary) FsReadFileSync() string  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "NodeStandardLibrary",
        Method: "FsReadFileSync",
        Parameters: []string{}
    })
    return "NOOP_RETURN_STRING"
}

// Class interface
type NullShouldBeTreatedAsUndefinedIface interface {
    GetChangeMeToUndefined() string
    SetChangeMeToUndefined()
    GiveMeUndefined() jsii.Any
    GiveMeUndefinedInsideAnObject() jsii.Any
    VerifyPropertyIsUndefined() jsii.Any
}

// Struct proxy
type NullShouldBeTreatedAsUndefined struct {
    ChangeMeToUndefined string
}

func (n NullShouldBeTreatedAsUndefined) GetChangeMeToUndefined() string {
    return n.ChangeMeToUndefined
}


func NewNullShouldBeTreatedAsUndefined(_param1 string, optional any) NullShouldBeTreatedAsUndefinedIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "NullShouldBeTreatedAsUndefined",
        Method: "NewNullShouldBeTreatedAsUndefined",
        Parameters: []string{_param1 string, optional any}
    })

    return &NullShouldBeTreatedAsUndefined{
     // props
    }
}

func (n NullShouldBeTreatedAsUndefined) SetChangeMeToUndefined(val string) {
    n.ChangeMeToUndefined = val
}

func (n *NullShouldBeTreatedAsUndefined) GiveMeUndefined() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "NullShouldBeTreatedAsUndefined",
        Method: "GiveMeUndefined",
        Parameters: []string{"value any"}
    })
    return nil
}

func (n *NullShouldBeTreatedAsUndefined) GiveMeUndefinedInsideAnObject() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "NullShouldBeTreatedAsUndefined",
        Method: "GiveMeUndefinedInsideAnObject",
        Parameters: []string{"input jsii-calc.NullShouldBeTreatedAsUndefinedData"}
    })
    return nil
}

func (n *NullShouldBeTreatedAsUndefined) VerifyPropertyIsUndefined() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "NullShouldBeTreatedAsUndefined",
        Method: "VerifyPropertyIsUndefined",
        Parameters: []string{}
    })
    return nil
}

// Struct interface
type NullShouldBeTreatedAsUndefinedDataIface interface {
    GetArrayWithThreeElementsAndUndefinedAsSecondArgument() []jsii.Any
    GetThisShouldBeUndefined() jsii.Any
}

// Struct proxy
type NullShouldBeTreatedAsUndefinedData struct {
    ArrayWithThreeElementsAndUndefinedAsSecondArgument []jsii.Any
    ThisShouldBeUndefined jsii.Any
}

func (n NullShouldBeTreatedAsUndefinedData) GetArrayWithThreeElementsAndUndefinedAsSecondArgument() []jsii.Any {
    return n.ArrayWithThreeElementsAndUndefinedAsSecondArgument
}

func (n NullShouldBeTreatedAsUndefinedData) GetThisShouldBeUndefined() jsii.Any {
    return n.ThisShouldBeUndefined
}


// Class interface
type NumberGeneratorIface interface {
    GetGenerator() IRandomNumberGenerator
    SetGenerator()
    IsSameGenerator() bool
    NextTimes100() float64
}

// Struct proxy
type NumberGenerator struct {
    Generator IRandomNumberGenerator
}

func (n NumberGenerator) GetGenerator() IRandomNumberGenerator {
    return n.Generator
}


func NewNumberGenerator(generator jsii-calc.IRandomNumberGenerator) NumberGeneratorIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "NumberGenerator",
        Method: "NewNumberGenerator",
        Parameters: []string{generator jsii-calc.IRandomNumberGenerator}
    })

    return &NumberGenerator{
     // props
    }
}

func (n NumberGenerator) SetGenerator(val IRandomNumberGenerator) {
    n.Generator = val
}

func (n *NumberGenerator) IsSameGenerator() bool  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "NumberGenerator",
        Method: "IsSameGenerator",
        Parameters: []string{"gen jsii-calc.IRandomNumberGenerator"}
    })
    return true
}

func (n *NumberGenerator) NextTimes100() float64  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "NumberGenerator",
        Method: "NextTimes100",
        Parameters: []string{}
    })
    return 0.0
}

// Class interface
type ObjectRefsInCollectionsIface interface {
    SumFromArray() float64
    SumFromMap() float64
}

// Struct proxy
type ObjectRefsInCollections struct {
}

func NewObjectRefsInCollections() ObjectRefsInCollectionsIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "ObjectRefsInCollections",
        Method: "NewObjectRefsInCollections",
        Parameters: []string{}
    })

    return &ObjectRefsInCollections{
     // props
    }
}

func (o *ObjectRefsInCollections) SumFromArray() float64  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "ObjectRefsInCollections",
        Method: "SumFromArray",
        Parameters: []string{"values Array<@scope/jsii-calc-lib.NumericValue>"}
    })
    return 0.0
}

func (o *ObjectRefsInCollections) SumFromMap() float64  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "ObjectRefsInCollections",
        Method: "SumFromMap",
        Parameters: []string{"values Map<string => @scope/jsii-calc-lib.NumericValue>"}
    })
    return 0.0
}

// Class interface
type ObjectWithPropertyProviderIface interface {
    Provide() IObjectWithProperty
}

// Struct proxy
type ObjectWithPropertyProvider struct {
}

func (o *ObjectWithPropertyProvider) Provide() IObjectWithProperty  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "ObjectWithPropertyProvider",
        Method: "Provide",
        Parameters: []string{}
    })
    return nil
}

// Class interface
type OldIface interface {
    DoAThing() jsii.Any
}

// Struct proxy
type Old struct {
}

func NewOld() OldIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "Old",
        Method: "NewOld",
        Parameters: []string{}
    })

    return &Old{
     // props
    }
}

func (o *Old) DoAThing() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "Old",
        Method: "DoAThing",
        Parameters: []string{}
    })
    return nil
}

// Class interface
type OptionalArgumentInvokerIface interface {
    InvokeWithOptional() jsii.Any
    InvokeWithoutOptional() jsii.Any
}

// Struct proxy
type OptionalArgumentInvoker struct {
}

func NewOptionalArgumentInvoker(delegate jsii-calc.IInterfaceWithOptionalMethodArguments) OptionalArgumentInvokerIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "OptionalArgumentInvoker",
        Method: "NewOptionalArgumentInvoker",
        Parameters: []string{delegate jsii-calc.IInterfaceWithOptionalMethodArguments}
    })

    return &OptionalArgumentInvoker{
     // props
    }
}

func (o *OptionalArgumentInvoker) InvokeWithOptional() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "OptionalArgumentInvoker",
        Method: "InvokeWithOptional",
        Parameters: []string{}
    })
    return nil
}

func (o *OptionalArgumentInvoker) InvokeWithoutOptional() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "OptionalArgumentInvoker",
        Method: "InvokeWithoutOptional",
        Parameters: []string{}
    })
    return nil
}

// Class interface
type OptionalConstructorArgumentIface interface {
    GetArg1() float64
    SetArg1()
    GetArg2() string
    SetArg2()
    GetArg3() string
    SetArg3()
}

// Struct proxy
type OptionalConstructorArgument struct {
    Arg1 float64
    Arg2 string
    Arg3 string
}

func (o OptionalConstructorArgument) GetArg1() float64 {
    return o.Arg1
}

func (o OptionalConstructorArgument) GetArg2() string {
    return o.Arg2
}

func (o OptionalConstructorArgument) GetArg3() string {
    return o.Arg3
}


func NewOptionalConstructorArgument(arg1 number, arg2 string, arg3 date) OptionalConstructorArgumentIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "OptionalConstructorArgument",
        Method: "NewOptionalConstructorArgument",
        Parameters: []string{arg1 number, arg2 string, arg3 date}
    })

    return &OptionalConstructorArgument{
     // props
    }
}

func (o OptionalConstructorArgument) SetArg1(val float64) {
    o.Arg1 = val
}

func (o OptionalConstructorArgument) SetArg2(val string) {
    o.Arg2 = val
}

func (o OptionalConstructorArgument) SetArg3(val string) {
    o.Arg3 = val
}

// Struct interface
type OptionalStructIface interface {
    GetField() string
}

// Struct proxy
type OptionalStruct struct {
    Field string
}

func (o OptionalStruct) GetField() string {
    return o.Field
}


// Class interface
type OptionalStructConsumerIface interface {
    GetParameterWasUndefined() bool
    SetParameterWasUndefined()
    GetFieldValue() string
    SetFieldValue()
}

// Struct proxy
type OptionalStructConsumer struct {
    ParameterWasUndefined bool
    FieldValue string
}

func (o OptionalStructConsumer) GetParameterWasUndefined() bool {
    return o.ParameterWasUndefined
}

func (o OptionalStructConsumer) GetFieldValue() string {
    return o.FieldValue
}


func NewOptionalStructConsumer(optionalStruct jsii-calc.OptionalStruct) OptionalStructConsumerIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "OptionalStructConsumer",
        Method: "NewOptionalStructConsumer",
        Parameters: []string{optionalStruct jsii-calc.OptionalStruct}
    })

    return &OptionalStructConsumer{
     // props
    }
}

func (o OptionalStructConsumer) SetParameterWasUndefined(val bool) {
    o.ParameterWasUndefined = val
}

func (o OptionalStructConsumer) SetFieldValue(val string) {
    o.FieldValue = val
}

// Class interface
type OverridableProtectedMemberIface interface {
    GetOverrideReadOnly() string
    GetOverrideReadWrite() string
    OverrideMe() string
    SwitchModes() jsii.Any
    ValueFromProtected() string
}

// Struct proxy
type OverridableProtectedMember struct {
    OverrideReadOnly string
    OverrideReadWrite string
}

func (o OverridableProtectedMember) GetOverrideReadOnly() string {
    return o.OverrideReadOnly
}

func (o OverridableProtectedMember) GetOverrideReadWrite() string {
    return o.OverrideReadWrite
}


func NewOverridableProtectedMember() OverridableProtectedMemberIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "OverridableProtectedMember",
        Method: "NewOverridableProtectedMember",
        Parameters: []string{}
    })

    return &OverridableProtectedMember{
     // props
    }
}

func (o OverridableProtectedMember) SetOverrideReadOnly(val string) {
    o.OverrideReadOnly = val
}

func (o OverridableProtectedMember) SetOverrideReadWrite(val string) {
    o.OverrideReadWrite = val
}

func (o *OverridableProtectedMember) OverrideMe() string  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "OverridableProtectedMember",
        Method: "OverrideMe",
        Parameters: []string{}
    })
    return "NOOP_RETURN_STRING"
}

func (o *OverridableProtectedMember) SwitchModes() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "OverridableProtectedMember",
        Method: "SwitchModes",
        Parameters: []string{}
    })
    return nil
}

func (o *OverridableProtectedMember) ValueFromProtected() string  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "OverridableProtectedMember",
        Method: "ValueFromProtected",
        Parameters: []string{}
    })
    return "NOOP_RETURN_STRING"
}

// Class interface
type OverrideReturnsObjectIface interface {
    Test() float64
}

// Struct proxy
type OverrideReturnsObject struct {
}

func NewOverrideReturnsObject() OverrideReturnsObjectIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "OverrideReturnsObject",
        Method: "NewOverrideReturnsObject",
        Parameters: []string{}
    })

    return &OverrideReturnsObject{
     // props
    }
}

func (o *OverrideReturnsObject) Test() float64  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "OverrideReturnsObject",
        Method: "Test",
        Parameters: []string{"obj jsii-calc.IReturnsNumber"}
    })
    return 0.0
}

// Struct interface
type ParentStruct982Iface interface {
    GetFoo() string
}

// Struct proxy
type ParentStruct982 struct {
    Foo string
}

func (p ParentStruct982) GetFoo() string {
    return p.Foo
}


// Class interface
type PartiallyInitializedThisConsumerIface interface {
    ConsumePartiallyInitializedThis() string
}

// Struct proxy
type PartiallyInitializedThisConsumer struct {
}

func NewPartiallyInitializedThisConsumer() PartiallyInitializedThisConsumerIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "PartiallyInitializedThisConsumer",
        Method: "NewPartiallyInitializedThisConsumer",
        Parameters: []string{}
    })

    return &PartiallyInitializedThisConsumer{
     // props
    }
}

func (p *PartiallyInitializedThisConsumer) ConsumePartiallyInitializedThis() string  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "PartiallyInitializedThisConsumer",
        Method: "ConsumePartiallyInitializedThis",
        Parameters: []string{"obj jsii-calc.ConstructorPassesThisOut", "dt date", "ev jsii-calc.AllTypesEnum"}
    })
    return "NOOP_RETURN_STRING"
}

// Class interface
type PolymorphismIface interface {
    SayHello() string
}

// Struct proxy
type Polymorphism struct {
}

func NewPolymorphism() PolymorphismIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "Polymorphism",
        Method: "NewPolymorphism",
        Parameters: []string{}
    })

    return &Polymorphism{
     // props
    }
}

func (p *Polymorphism) SayHello() string  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "Polymorphism",
        Method: "SayHello",
        Parameters: []string{"friendly @scope/jsii-calc-lib.IFriendly"}
    })
    return "NOOP_RETURN_STRING"
}

// Class interface
type PowerIface interface {
    GetValue() float64
    SetValue()
    GetExpression() jsii.Any
    SetExpression()
    GetDecorationPostfixes() []string
    SetDecorationPostfixes()
    GetDecorationPrefixes() []string
    SetDecorationPrefixes()
    GetStringStyle() composition.CompositionStringStyle
    SetStringStyle()
    GetBase() jsii.Any
    SetBase()
    GetPow() jsii.Any
    SetPow()
    TypeName() jsii.Any
    ToString() string
}

// Struct proxy
type Power struct {
    Value float64
    Expression jsii.Any
    DecorationPostfixes []string
    DecorationPrefixes []string
    StringStyle composition.CompositionStringStyle
    Base jsii.Any
    Pow jsii.Any
}

func (p Power) GetValue() float64 {
    return p.Value
}

func (p Power) GetExpression() jsii.Any {
    return p.Expression
}

func (p Power) GetDecorationPostfixes() []string {
    return p.DecorationPostfixes
}

func (p Power) GetDecorationPrefixes() []string {
    return p.DecorationPrefixes
}

func (p Power) GetStringStyle() composition.CompositionStringStyle {
    return p.StringStyle
}

func (p Power) GetBase() jsii.Any {
    return p.Base
}

func (p Power) GetPow() jsii.Any {
    return p.Pow
}


// Creates a Power operation.
func NewPower(base @scope/jsii-calc-lib.NumericValue, pow @scope/jsii-calc-lib.NumericValue) PowerIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "Power",
        Method: "NewPower",
        Parameters: []string{base @scope/jsii-calc-lib.NumericValue, pow @scope/jsii-calc-lib.NumericValue}
    })

    return &Power{
     // props
    }
}

func (p Power) SetValue(val float64) {
    p.Value = val
}

func (p Power) SetExpression(val jsii.Any) {
    p.Expression = val
}

func (p Power) SetDecorationPostfixes(val []string) {
    p.DecorationPostfixes = val
}

func (p Power) SetDecorationPrefixes(val []string) {
    p.DecorationPrefixes = val
}

func (p Power) SetStringStyle(val composition.CompositionStringStyle) {
    p.StringStyle = val
}

func (p Power) SetBase(val jsii.Any) {
    p.Base = val
}

func (p Power) SetPow(val jsii.Any) {
    p.Pow = val
}

func (p *Power) TypeName() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "Power",
        Method: "TypeName",
        Parameters: []string{}
    })
    return nil
}

func (p *Power) ToString() string  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "Power",
        Method: "ToString",
        Parameters: []string{}
    })
    return "NOOP_RETURN_STRING"
}

// Class interface
type PropertyNamedPropertyIface interface {
    GetProperty() string
    SetProperty()
    GetYetAnoterOne() bool
    SetYetAnoterOne()
}

// Struct proxy
type PropertyNamedProperty struct {
    Property string
    YetAnoterOne bool
}

func (p PropertyNamedProperty) GetProperty() string {
    return p.Property
}

func (p PropertyNamedProperty) GetYetAnoterOne() bool {
    return p.YetAnoterOne
}


func NewPropertyNamedProperty() PropertyNamedPropertyIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "PropertyNamedProperty",
        Method: "NewPropertyNamedProperty",
        Parameters: []string{}
    })

    return &PropertyNamedProperty{
     // props
    }
}

func (p PropertyNamedProperty) SetProperty(val string) {
    p.Property = val
}

func (p PropertyNamedProperty) SetYetAnoterOne(val bool) {
    p.YetAnoterOne = val
}

// Class interface
type PublicClassIface interface {
    Hello() jsii.Any
}

// Struct proxy
type PublicClass struct {
}

func NewPublicClass() PublicClassIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "PublicClass",
        Method: "NewPublicClass",
        Parameters: []string{}
    })

    return &PublicClass{
     // props
    }
}

func (p *PublicClass) Hello() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "PublicClass",
        Method: "Hello",
        Parameters: []string{}
    })
    return nil
}

// Class interface
type PythonReservedWordsIface interface {
    And() jsii.Any
    As() jsii.Any
    Assert() jsii.Any
    Async() jsii.Any
    Await() jsii.Any
    Break() jsii.Any
    Class() jsii.Any
    Continue() jsii.Any
    Def() jsii.Any
    Del() jsii.Any
    Elif() jsii.Any
    Else() jsii.Any
    Except() jsii.Any
    Finally() jsii.Any
    For() jsii.Any
    From() jsii.Any
    Global() jsii.Any
    If() jsii.Any
    Import() jsii.Any
    In() jsii.Any
    Is() jsii.Any
    Lambda() jsii.Any
    Nonlocal() jsii.Any
    Not() jsii.Any
    Or() jsii.Any
    Pass() jsii.Any
    Raise() jsii.Any
    Return() jsii.Any
    Try() jsii.Any
    While() jsii.Any
    With() jsii.Any
    Yield() jsii.Any
}

// Struct proxy
type PythonReservedWords struct {
}

func NewPythonReservedWords() PythonReservedWordsIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "PythonReservedWords",
        Method: "NewPythonReservedWords",
        Parameters: []string{}
    })

    return &PythonReservedWords{
     // props
    }
}

func (p *PythonReservedWords) And() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "PythonReservedWords",
        Method: "And",
        Parameters: []string{}
    })
    return nil
}

func (p *PythonReservedWords) As() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "PythonReservedWords",
        Method: "As",
        Parameters: []string{}
    })
    return nil
}

func (p *PythonReservedWords) Assert() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "PythonReservedWords",
        Method: "Assert",
        Parameters: []string{}
    })
    return nil
}

func (p *PythonReservedWords) Async() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "PythonReservedWords",
        Method: "Async",
        Parameters: []string{}
    })
    return nil
}

func (p *PythonReservedWords) Await() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "PythonReservedWords",
        Method: "Await",
        Parameters: []string{}
    })
    return nil
}

func (p *PythonReservedWords) Break() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "PythonReservedWords",
        Method: "Break",
        Parameters: []string{}
    })
    return nil
}

func (p *PythonReservedWords) Class() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "PythonReservedWords",
        Method: "Class",
        Parameters: []string{}
    })
    return nil
}

func (p *PythonReservedWords) Continue() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "PythonReservedWords",
        Method: "Continue",
        Parameters: []string{}
    })
    return nil
}

func (p *PythonReservedWords) Def() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "PythonReservedWords",
        Method: "Def",
        Parameters: []string{}
    })
    return nil
}

func (p *PythonReservedWords) Del() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "PythonReservedWords",
        Method: "Del",
        Parameters: []string{}
    })
    return nil
}

func (p *PythonReservedWords) Elif() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "PythonReservedWords",
        Method: "Elif",
        Parameters: []string{}
    })
    return nil
}

func (p *PythonReservedWords) Else() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "PythonReservedWords",
        Method: "Else",
        Parameters: []string{}
    })
    return nil
}

func (p *PythonReservedWords) Except() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "PythonReservedWords",
        Method: "Except",
        Parameters: []string{}
    })
    return nil
}

func (p *PythonReservedWords) Finally() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "PythonReservedWords",
        Method: "Finally",
        Parameters: []string{}
    })
    return nil
}

func (p *PythonReservedWords) For() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "PythonReservedWords",
        Method: "For",
        Parameters: []string{}
    })
    return nil
}

func (p *PythonReservedWords) From() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "PythonReservedWords",
        Method: "From",
        Parameters: []string{}
    })
    return nil
}

func (p *PythonReservedWords) Global() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "PythonReservedWords",
        Method: "Global",
        Parameters: []string{}
    })
    return nil
}

func (p *PythonReservedWords) If() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "PythonReservedWords",
        Method: "If",
        Parameters: []string{}
    })
    return nil
}

func (p *PythonReservedWords) Import() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "PythonReservedWords",
        Method: "Import",
        Parameters: []string{}
    })
    return nil
}

func (p *PythonReservedWords) In() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "PythonReservedWords",
        Method: "In",
        Parameters: []string{}
    })
    return nil
}

func (p *PythonReservedWords) Is() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "PythonReservedWords",
        Method: "Is",
        Parameters: []string{}
    })
    return nil
}

func (p *PythonReservedWords) Lambda() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "PythonReservedWords",
        Method: "Lambda",
        Parameters: []string{}
    })
    return nil
}

func (p *PythonReservedWords) Nonlocal() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "PythonReservedWords",
        Method: "Nonlocal",
        Parameters: []string{}
    })
    return nil
}

func (p *PythonReservedWords) Not() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "PythonReservedWords",
        Method: "Not",
        Parameters: []string{}
    })
    return nil
}

func (p *PythonReservedWords) Or() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "PythonReservedWords",
        Method: "Or",
        Parameters: []string{}
    })
    return nil
}

func (p *PythonReservedWords) Pass() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "PythonReservedWords",
        Method: "Pass",
        Parameters: []string{}
    })
    return nil
}

func (p *PythonReservedWords) Raise() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "PythonReservedWords",
        Method: "Raise",
        Parameters: []string{}
    })
    return nil
}

func (p *PythonReservedWords) Return() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "PythonReservedWords",
        Method: "Return",
        Parameters: []string{}
    })
    return nil
}

func (p *PythonReservedWords) Try() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "PythonReservedWords",
        Method: "Try",
        Parameters: []string{}
    })
    return nil
}

func (p *PythonReservedWords) While() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "PythonReservedWords",
        Method: "While",
        Parameters: []string{}
    })
    return nil
}

func (p *PythonReservedWords) With() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "PythonReservedWords",
        Method: "With",
        Parameters: []string{}
    })
    return nil
}

func (p *PythonReservedWords) Yield() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "PythonReservedWords",
        Method: "Yield",
        Parameters: []string{}
    })
    return nil
}

// Class interface
type ReferenceEnumFromScopedPackageIface interface {
    GetFoo() jsii.Any
    SetFoo()
    LoadFoo() jsii.Any
    SaveFoo() jsii.Any
}

// Struct proxy
type ReferenceEnumFromScopedPackage struct {
    Foo jsii.Any
}

func (r ReferenceEnumFromScopedPackage) GetFoo() jsii.Any {
    return r.Foo
}


func NewReferenceEnumFromScopedPackage() ReferenceEnumFromScopedPackageIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "ReferenceEnumFromScopedPackage",
        Method: "NewReferenceEnumFromScopedPackage",
        Parameters: []string{}
    })

    return &ReferenceEnumFromScopedPackage{
     // props
    }
}

func (r ReferenceEnumFromScopedPackage) SetFoo(val jsii.Any) {
    r.Foo = val
}

func (r *ReferenceEnumFromScopedPackage) LoadFoo() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "ReferenceEnumFromScopedPackage",
        Method: "LoadFoo",
        Parameters: []string{}
    })
    return nil
}

func (r *ReferenceEnumFromScopedPackage) SaveFoo() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "ReferenceEnumFromScopedPackage",
        Method: "SaveFoo",
        Parameters: []string{"value @scope/jsii-calc-lib.EnumFromScopedModule"}
    })
    return nil
}

// Class interface
type ReturnsPrivateImplementationOfInterfaceIface interface {
    GetPrivateImplementation() IPrivatelyImplemented
    SetPrivateImplementation()
}

// Struct proxy
type ReturnsPrivateImplementationOfInterface struct {
    PrivateImplementation IPrivatelyImplemented
}

func (r ReturnsPrivateImplementationOfInterface) GetPrivateImplementation() IPrivatelyImplemented {
    return r.PrivateImplementation
}


func NewReturnsPrivateImplementationOfInterface() ReturnsPrivateImplementationOfInterfaceIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "ReturnsPrivateImplementationOfInterface",
        Method: "NewReturnsPrivateImplementationOfInterface",
        Parameters: []string{}
    })

    return &ReturnsPrivateImplementationOfInterface{
     // props
    }
}

func (r ReturnsPrivateImplementationOfInterface) SetPrivateImplementation(val IPrivatelyImplemented) {
    r.PrivateImplementation = val
}

// Struct interface
type RootStructIface interface {
    GetStringProp() string
    GetNestedStruct() NestedStruct
}

// Struct proxy
type RootStruct struct {
    StringProp string
    NestedStruct NestedStruct
}

func (r RootStruct) GetStringProp() string {
    return r.StringProp
}

func (r RootStruct) GetNestedStruct() NestedStruct {
    return r.NestedStruct
}


// Class interface
type RootStructValidatorIface interface {
    Validate() jsii.Any
}

// Struct proxy
type RootStructValidator struct {
}

func (r *RootStructValidator) Validate() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "RootStructValidator",
        Method: "Validate",
        Parameters: []string{"struct jsii-calc.RootStruct"}
    })
    return nil
}

// Class interface
type RuntimeTypeCheckingIface interface {
    MethodWithDefaultedArguments() jsii.Any
    MethodWithOptionalAnyArgument() jsii.Any
    MethodWithOptionalArguments() jsii.Any
}

// Struct proxy
type RuntimeTypeChecking struct {
}

func NewRuntimeTypeChecking() RuntimeTypeCheckingIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "RuntimeTypeChecking",
        Method: "NewRuntimeTypeChecking",
        Parameters: []string{}
    })

    return &RuntimeTypeChecking{
     // props
    }
}

func (r *RuntimeTypeChecking) MethodWithDefaultedArguments() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "RuntimeTypeChecking",
        Method: "MethodWithDefaultedArguments",
        Parameters: []string{"arg1 number", "arg2 string", "arg3 date"}
    })
    return nil
}

func (r *RuntimeTypeChecking) MethodWithOptionalAnyArgument() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "RuntimeTypeChecking",
        Method: "MethodWithOptionalAnyArgument",
        Parameters: []string{"arg any"}
    })
    return nil
}

func (r *RuntimeTypeChecking) MethodWithOptionalArguments() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "RuntimeTypeChecking",
        Method: "MethodWithOptionalArguments",
        Parameters: []string{"arg1 number", "arg2 string", "arg3 date"}
    })
    return nil
}

// Struct interface
type SecondLevelStructIface interface {
    GetDeeperRequiredProp() string
    GetDeeperOptionalProp() string
}

// Struct proxy
type SecondLevelStruct struct {
    DeeperRequiredProp string
    DeeperOptionalProp string
}

func (s SecondLevelStruct) GetDeeperRequiredProp() string {
    return s.DeeperRequiredProp
}

func (s SecondLevelStruct) GetDeeperOptionalProp() string {
    return s.DeeperOptionalProp
}


// Class interface
type SingleInstanceTwoTypesIface interface {
    Interface1() InbetweenClass
    Interface2() IPublicInterface
}

// Struct proxy
type SingleInstanceTwoTypes struct {
}

func NewSingleInstanceTwoTypes() SingleInstanceTwoTypesIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "SingleInstanceTwoTypes",
        Method: "NewSingleInstanceTwoTypes",
        Parameters: []string{}
    })

    return &SingleInstanceTwoTypes{
     // props
    }
}

func (s *SingleInstanceTwoTypes) Interface1() InbetweenClass  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "SingleInstanceTwoTypes",
        Method: "Interface1",
        Parameters: []string{}
    })
    return InbetweenClass{}
}

func (s *SingleInstanceTwoTypes) Interface2() IPublicInterface  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "SingleInstanceTwoTypes",
        Method: "Interface2",
        Parameters: []string{}
    })
    return nil
}

// Class interface
type SingletonIntIface interface {
    IsSingletonInt() bool
}

// Struct proxy
type SingletonInt struct {
}

func (s *SingletonInt) IsSingletonInt() bool  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "SingletonInt",
        Method: "IsSingletonInt",
        Parameters: []string{"value number"}
    })
    return true
}

type SingletonIntEnum string

const (
    SingletonIntEnumSingletonInt SingletonIntEnum = "SINGLETON_INT"
)

// Class interface
type SingletonStringIface interface {
    IsSingletonString() bool
}

// Struct proxy
type SingletonString struct {
}

func (s *SingletonString) IsSingletonString() bool  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "SingletonString",
        Method: "IsSingletonString",
        Parameters: []string{"value string"}
    })
    return true
}

type SingletonStringEnum string

const (
    SingletonStringEnumSingletonString SingletonStringEnum = "SINGLETON_STRING"
)

// Struct interface
type SmellyStructIface interface {
    GetProperty() string
    GetYetAnoterOne() bool
}

// Struct proxy
type SmellyStruct struct {
    Property string
    YetAnoterOne bool
}

func (s SmellyStruct) GetProperty() string {
    return s.Property
}

func (s SmellyStruct) GetYetAnoterOne() bool {
    return s.YetAnoterOne
}


// Class interface
type SomeTypeJsii976Iface interface {
    ReturnAnonymous() jsii.Any
    ReturnReturn() IReturnJsii976
}

// Struct proxy
type SomeTypeJsii976 struct {
}

func NewSomeTypeJsii976() SomeTypeJsii976Iface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "SomeTypeJsii976",
        Method: "NewSomeTypeJsii976",
        Parameters: []string{}
    })

    return &SomeTypeJsii976{
     // props
    }
}

func (s *SomeTypeJsii976) ReturnAnonymous() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "SomeTypeJsii976",
        Method: "ReturnAnonymous",
        Parameters: []string{}
    })
    return nil
}

func (s *SomeTypeJsii976) ReturnReturn() IReturnJsii976  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "SomeTypeJsii976",
        Method: "ReturnReturn",
        Parameters: []string{}
    })
    return nil
}

// Class interface
type StableClassIface interface {
    GetReadonlyProperty() string
    SetReadonlyProperty()
    GetMutableProperty() float64
    SetMutableProperty()
    Method() jsii.Any
}

// Struct proxy
type StableClass struct {
    ReadonlyProperty string
    MutableProperty float64
}

func (s StableClass) GetReadonlyProperty() string {
    return s.ReadonlyProperty
}

func (s StableClass) GetMutableProperty() float64 {
    return s.MutableProperty
}


func NewStableClass(readonlyString string, mutableNumber number) StableClassIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "StableClass",
        Method: "NewStableClass",
        Parameters: []string{readonlyString string, mutableNumber number}
    })

    return &StableClass{
     // props
    }
}

func (s StableClass) SetReadonlyProperty(val string) {
    s.ReadonlyProperty = val
}

func (s StableClass) SetMutableProperty(val float64) {
    s.MutableProperty = val
}

func (s *StableClass) Method() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "StableClass",
        Method: "Method",
        Parameters: []string{}
    })
    return nil
}

type StableEnum string

const (
    StableEnumOptionA StableEnum = "OPTION_A"
    StableEnumOptionB StableEnum = "OPTION_B"
)

// Struct interface
type StableStructIface interface {
    GetReadonlyProperty() string
}

// Struct proxy
type StableStruct struct {
    ReadonlyProperty string
}

func (s StableStruct) GetReadonlyProperty() string {
    return s.ReadonlyProperty
}


// Class interface
type StaticContextIface interface {
    GetStaticVariable() bool
    SetStaticVariable()
    CanAccessStaticContext() bool
}

// Struct proxy
type StaticContext struct {
    StaticVariable bool
}

func (s StaticContext) GetStaticVariable() bool {
    return s.StaticVariable
}


func (s StaticContext) SetStaticVariable(val bool) {
    s.StaticVariable = val
}

func (s *StaticContext) CanAccessStaticContext() bool  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "StaticContext",
        Method: "CanAccessStaticContext",
        Parameters: []string{}
    })
    return true
}

// Class interface
type StaticsIface interface {
    GetBar() float64
    SetBar()
    GetConstObj() DoubleTrouble
    SetConstObj()
    GetFoo() string
    SetFoo()
    GetZooBar() map[string]string
    SetZooBar()
    GetInstance() Statics
    SetInstance()
    GetNonConstStatic() float64
    SetNonConstStatic()
    GetValue() string
    SetValue()
    StaticMethod() string
    JustMethod() string
}

// Struct proxy
type Statics struct {
    Bar float64
    ConstObj DoubleTrouble
    Foo string
    ZooBar map[string]string
    Instance *Statics
    NonConstStatic float64
    Value string
}

func (s Statics) GetBar() float64 {
    return s.Bar
}

func (s Statics) GetConstObj() DoubleTrouble {
    return s.ConstObj
}

func (s Statics) GetFoo() string {
    return s.Foo
}

func (s Statics) GetZooBar() map[string]string {
    return s.ZooBar
}

func (s Statics) GetInstance() Statics {
    return s.Instance
}

func (s Statics) GetNonConstStatic() float64 {
    return s.NonConstStatic
}

func (s Statics) GetValue() string {
    return s.Value
}


func NewStatics(value string) StaticsIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "Statics",
        Method: "NewStatics",
        Parameters: []string{value string}
    })

    return &Statics{
     // props
    }
}

func (s Statics) SetBar(val float64) {
    s.Bar = val
}

func (s Statics) SetConstObj(val DoubleTrouble) {
    s.ConstObj = val
}

func (s Statics) SetFoo(val string) {
    s.Foo = val
}

func (s Statics) SetZooBar(val map[string]string) {
    s.ZooBar = val
}

func (s Statics) SetInstance(val Statics) {
    s.Instance = val
}

func (s Statics) SetNonConstStatic(val float64) {
    s.NonConstStatic = val
}

func (s Statics) SetValue(val string) {
    s.Value = val
}

func (s *Statics) StaticMethod() string  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "Statics",
        Method: "StaticMethod",
        Parameters: []string{"name string"}
    })
    return "NOOP_RETURN_STRING"
}

func (s *Statics) JustMethod() string  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "Statics",
        Method: "JustMethod",
        Parameters: []string{}
    })
    return "NOOP_RETURN_STRING"
}

type StringEnum string

const (
    StringEnumA StringEnum = "A"
    StringEnumB StringEnum = "B"
    StringEnumC StringEnum = "C"
)

// Class interface
type StripInternalIface interface {
    GetYouSeeMe() string
    SetYouSeeMe()
}

// Struct proxy
type StripInternal struct {
    YouSeeMe string
}

func (s StripInternal) GetYouSeeMe() string {
    return s.YouSeeMe
}


func NewStripInternal() StripInternalIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "StripInternal",
        Method: "NewStripInternal",
        Parameters: []string{}
    })

    return &StripInternal{
     // props
    }
}

func (s StripInternal) SetYouSeeMe(val string) {
    s.YouSeeMe = val
}

// Struct interface
type StructAIface interface {
    GetRequiredString() string
    GetOptionalNumber() float64
    GetOptionalString() string
}

// Struct proxy
type StructA struct {
    RequiredString string
    OptionalNumber float64
    OptionalString string
}

func (s StructA) GetRequiredString() string {
    return s.RequiredString
}

func (s StructA) GetOptionalNumber() float64 {
    return s.OptionalNumber
}

func (s StructA) GetOptionalString() string {
    return s.OptionalString
}


// Struct interface
type StructBIface interface {
    GetRequiredString() string
    GetOptionalBoolean() bool
    GetOptionalStructA() StructA
}

// Struct proxy
type StructB struct {
    RequiredString string
    OptionalBoolean bool
    OptionalStructA StructA
}

func (s StructB) GetRequiredString() string {
    return s.RequiredString
}

func (s StructB) GetOptionalBoolean() bool {
    return s.OptionalBoolean
}

func (s StructB) GetOptionalStructA() StructA {
    return s.OptionalStructA
}


// Struct interface
type StructParameterTypeIface interface {
    GetScope() string
    GetProps() bool
}

// Struct proxy
type StructParameterType struct {
    Scope string
    Props bool
}

func (s StructParameterType) GetScope() string {
    return s.Scope
}

func (s StructParameterType) GetProps() bool {
    return s.Props
}


// Class interface
type StructPassingIface interface {
    HowManyVarArgsDidIPass() float64
    RoundTrip() TopLevelStruct
}

// Struct proxy
type StructPassing struct {
}

func NewStructPassing() StructPassingIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "StructPassing",
        Method: "NewStructPassing",
        Parameters: []string{}
    })

    return &StructPassing{
     // props
    }
}

func (s *StructPassing) HowManyVarArgsDidIPass() float64  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "StructPassing",
        Method: "HowManyVarArgsDidIPass",
        Parameters: []string{"_positional number", "inputs jsii-calc.TopLevelStruct"}
    })
    return 0.0
}

func (s *StructPassing) RoundTrip() TopLevelStruct  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "StructPassing",
        Method: "RoundTrip",
        Parameters: []string{"_positional number", "input jsii-calc.TopLevelStruct"}
    })
    return nil
}

// Class interface
type StructUnionConsumerIface interface {
    IsStructA() bool
    IsStructB() bool
}

// Struct proxy
type StructUnionConsumer struct {
}

func (s *StructUnionConsumer) IsStructA() bool  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "StructUnionConsumer",
        Method: "IsStructA",
        Parameters: []string{"struct jsii-calc.StructA | jsii-calc.StructB"}
    })
    return true
}

func (s *StructUnionConsumer) IsStructB() bool  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "StructUnionConsumer",
        Method: "IsStructB",
        Parameters: []string{"struct jsii-calc.StructA | jsii-calc.StructB"}
    })
    return true
}

// Struct interface
type StructWithJavaReservedWordsIface interface {
    GetDefault() string
    GetAssert() string
    GetResult() string
    GetThat() string
}

// Struct proxy
type StructWithJavaReservedWords struct {
    Default string
    Assert string
    Result string
    That string
}

func (s StructWithJavaReservedWords) GetDefault() string {
    return s.Default
}

func (s StructWithJavaReservedWords) GetAssert() string {
    return s.Assert
}

func (s StructWithJavaReservedWords) GetResult() string {
    return s.Result
}

func (s StructWithJavaReservedWords) GetThat() string {
    return s.That
}


// Class interface
type SumIface interface {
    GetValue() float64
    SetValue()
    GetExpression() jsii.Any
    SetExpression()
    GetDecorationPostfixes() []string
    SetDecorationPostfixes()
    GetDecorationPrefixes() []string
    SetDecorationPrefixes()
    GetStringStyle() composition.CompositionStringStyle
    SetStringStyle()
    GetParts() []jsii.Any
    SetParts()
    TypeName() jsii.Any
    ToString() string
}

// Struct proxy
type Sum struct {
    Value float64
    Expression jsii.Any
    DecorationPostfixes []string
    DecorationPrefixes []string
    StringStyle composition.CompositionStringStyle
    Parts []jsii.Any
}

func (s Sum) GetValue() float64 {
    return s.Value
}

func (s Sum) GetExpression() jsii.Any {
    return s.Expression
}

func (s Sum) GetDecorationPostfixes() []string {
    return s.DecorationPostfixes
}

func (s Sum) GetDecorationPrefixes() []string {
    return s.DecorationPrefixes
}

func (s Sum) GetStringStyle() composition.CompositionStringStyle {
    return s.StringStyle
}

func (s Sum) GetParts() []jsii.Any {
    return s.Parts
}


func NewSum() SumIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "Sum",
        Method: "NewSum",
        Parameters: []string{}
    })

    return &Sum{
     // props
    }
}

func (s Sum) SetValue(val float64) {
    s.Value = val
}

func (s Sum) SetExpression(val jsii.Any) {
    s.Expression = val
}

func (s Sum) SetDecorationPostfixes(val []string) {
    s.DecorationPostfixes = val
}

func (s Sum) SetDecorationPrefixes(val []string) {
    s.DecorationPrefixes = val
}

func (s Sum) SetStringStyle(val composition.CompositionStringStyle) {
    s.StringStyle = val
}

func (s Sum) SetParts(val []jsii.Any) {
    s.Parts = val
}

func (s *Sum) TypeName() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "Sum",
        Method: "TypeName",
        Parameters: []string{}
    })
    return nil
}

func (s *Sum) ToString() string  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "Sum",
        Method: "ToString",
        Parameters: []string{}
    })
    return "NOOP_RETURN_STRING"
}

// Class interface
type SupportsNiceJavaBuilderIface interface {
    GetBar() float64
    SetBar()
    GetId() float64
    SetId()
    GetPropId() string
    SetPropId()
    GetRest() []string
    SetRest()
}

// Struct proxy
type SupportsNiceJavaBuilder struct {
    Bar float64
    Id float64
    PropId string
    Rest []string
}

func (s SupportsNiceJavaBuilder) GetBar() float64 {
    return s.Bar
}

func (s SupportsNiceJavaBuilder) GetId() float64 {
    return s.Id
}

func (s SupportsNiceJavaBuilder) GetPropId() string {
    return s.PropId
}

func (s SupportsNiceJavaBuilder) GetRest() []string {
    return s.Rest
}


func NewSupportsNiceJavaBuilder(id number, defaultBar number, props jsii-calc.SupportsNiceJavaBuilderProps, rest string) SupportsNiceJavaBuilderIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "SupportsNiceJavaBuilder",
        Method: "NewSupportsNiceJavaBuilder",
        Parameters: []string{id number, defaultBar number, props jsii-calc.SupportsNiceJavaBuilderProps, rest string}
    })

    return &SupportsNiceJavaBuilder{
     // props
    }
}

func (s SupportsNiceJavaBuilder) SetBar(val float64) {
    s.Bar = val
}

func (s SupportsNiceJavaBuilder) SetId(val float64) {
    s.Id = val
}

func (s SupportsNiceJavaBuilder) SetPropId(val string) {
    s.PropId = val
}

func (s SupportsNiceJavaBuilder) SetRest(val []string) {
    s.Rest = val
}

// Struct interface
type SupportsNiceJavaBuilderPropsIface interface {
    GetBar() float64
    GetId() string
}

// Struct proxy
type SupportsNiceJavaBuilderProps struct {
    Bar float64
    Id string
}

func (s SupportsNiceJavaBuilderProps) GetBar() float64 {
    return s.Bar
}

func (s SupportsNiceJavaBuilderProps) GetId() string {
    return s.Id
}


// Class interface
type SupportsNiceJavaBuilderWithRequiredPropsIface interface {
    GetBar() float64
    SetBar()
    GetId() float64
    SetId()
    GetPropId() string
    SetPropId()
}

// Struct proxy
type SupportsNiceJavaBuilderWithRequiredProps struct {
    Bar float64
    Id float64
    PropId string
}

func (s SupportsNiceJavaBuilderWithRequiredProps) GetBar() float64 {
    return s.Bar
}

func (s SupportsNiceJavaBuilderWithRequiredProps) GetId() float64 {
    return s.Id
}

func (s SupportsNiceJavaBuilderWithRequiredProps) GetPropId() string {
    return s.PropId
}


func NewSupportsNiceJavaBuilderWithRequiredProps(id number, props jsii-calc.SupportsNiceJavaBuilderProps) SupportsNiceJavaBuilderWithRequiredPropsIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "SupportsNiceJavaBuilderWithRequiredProps",
        Method: "NewSupportsNiceJavaBuilderWithRequiredProps",
        Parameters: []string{id number, props jsii-calc.SupportsNiceJavaBuilderProps}
    })

    return &SupportsNiceJavaBuilderWithRequiredProps{
     // props
    }
}

func (s SupportsNiceJavaBuilderWithRequiredProps) SetBar(val float64) {
    s.Bar = val
}

func (s SupportsNiceJavaBuilderWithRequiredProps) SetId(val float64) {
    s.Id = val
}

func (s SupportsNiceJavaBuilderWithRequiredProps) SetPropId(val string) {
    s.PropId = val
}

// Class interface
type SyncVirtualMethodsIface interface {
    GetReadonlyProperty() string
    SetReadonlyProperty()
    GetA() float64
    SetA()
    GetCallerIsProperty() float64
    SetCallerIsProperty()
    GetOtherProperty() string
    SetOtherProperty()
    GetTheProperty() string
    SetTheProperty()
    GetValueOfOtherProperty() string
    SetValueOfOtherProperty()
    CallerIsAsync() float64
    CallerIsMethod() float64
    ModifyOtherProperty() jsii.Any
    ModifyValueOfTheProperty() jsii.Any
    ReadA() float64
    RetrieveOtherProperty() string
    RetrieveReadOnlyProperty() string
    RetrieveValueOfTheProperty() string
    VirtualMethod() float64
    WriteA() jsii.Any
}

// Struct proxy
type SyncVirtualMethods struct {
    ReadonlyProperty string
    A float64
    CallerIsProperty float64
    OtherProperty string
    TheProperty string
    ValueOfOtherProperty string
}

func (s SyncVirtualMethods) GetReadonlyProperty() string {
    return s.ReadonlyProperty
}

func (s SyncVirtualMethods) GetA() float64 {
    return s.A
}

func (s SyncVirtualMethods) GetCallerIsProperty() float64 {
    return s.CallerIsProperty
}

func (s SyncVirtualMethods) GetOtherProperty() string {
    return s.OtherProperty
}

func (s SyncVirtualMethods) GetTheProperty() string {
    return s.TheProperty
}

func (s SyncVirtualMethods) GetValueOfOtherProperty() string {
    return s.ValueOfOtherProperty
}


func NewSyncVirtualMethods() SyncVirtualMethodsIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "SyncVirtualMethods",
        Method: "NewSyncVirtualMethods",
        Parameters: []string{}
    })

    return &SyncVirtualMethods{
     // props
    }
}

func (s SyncVirtualMethods) SetReadonlyProperty(val string) {
    s.ReadonlyProperty = val
}

func (s SyncVirtualMethods) SetA(val float64) {
    s.A = val
}

func (s SyncVirtualMethods) SetCallerIsProperty(val float64) {
    s.CallerIsProperty = val
}

func (s SyncVirtualMethods) SetOtherProperty(val string) {
    s.OtherProperty = val
}

func (s SyncVirtualMethods) SetTheProperty(val string) {
    s.TheProperty = val
}

func (s SyncVirtualMethods) SetValueOfOtherProperty(val string) {
    s.ValueOfOtherProperty = val
}

func (s *SyncVirtualMethods) CallerIsAsync() float64  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "SyncVirtualMethods",
        Method: "CallerIsAsync",
        Parameters: []string{}
    })
    return 0.0
}

func (s *SyncVirtualMethods) CallerIsMethod() float64  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "SyncVirtualMethods",
        Method: "CallerIsMethod",
        Parameters: []string{}
    })
    return 0.0
}

func (s *SyncVirtualMethods) ModifyOtherProperty() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "SyncVirtualMethods",
        Method: "ModifyOtherProperty",
        Parameters: []string{"value string"}
    })
    return nil
}

func (s *SyncVirtualMethods) ModifyValueOfTheProperty() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "SyncVirtualMethods",
        Method: "ModifyValueOfTheProperty",
        Parameters: []string{"value string"}
    })
    return nil
}

func (s *SyncVirtualMethods) ReadA() float64  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "SyncVirtualMethods",
        Method: "ReadA",
        Parameters: []string{}
    })
    return 0.0
}

func (s *SyncVirtualMethods) RetrieveOtherProperty() string  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "SyncVirtualMethods",
        Method: "RetrieveOtherProperty",
        Parameters: []string{}
    })
    return "NOOP_RETURN_STRING"
}

func (s *SyncVirtualMethods) RetrieveReadOnlyProperty() string  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "SyncVirtualMethods",
        Method: "RetrieveReadOnlyProperty",
        Parameters: []string{}
    })
    return "NOOP_RETURN_STRING"
}

func (s *SyncVirtualMethods) RetrieveValueOfTheProperty() string  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "SyncVirtualMethods",
        Method: "RetrieveValueOfTheProperty",
        Parameters: []string{}
    })
    return "NOOP_RETURN_STRING"
}

func (s *SyncVirtualMethods) VirtualMethod() float64  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "SyncVirtualMethods",
        Method: "VirtualMethod",
        Parameters: []string{"n number"}
    })
    return 0.0
}

func (s *SyncVirtualMethods) WriteA() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "SyncVirtualMethods",
        Method: "WriteA",
        Parameters: []string{"value number"}
    })
    return nil
}

// Class interface
type ThrowerIface interface {
    ThrowError() jsii.Any
}

// Struct proxy
type Thrower struct {
}

func NewThrower() ThrowerIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "Thrower",
        Method: "NewThrower",
        Parameters: []string{}
    })

    return &Thrower{
     // props
    }
}

func (t *Thrower) ThrowError() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "Thrower",
        Method: "ThrowError",
        Parameters: []string{}
    })
    return nil
}

// Struct interface
type TopLevelStructIface interface {
    GetRequired() string
    GetSecondLevel() jsii.Any
    GetOptional() string
}

// Struct proxy
type TopLevelStruct struct {
    Required string
    SecondLevel jsii.Any
    Optional string
}

func (t TopLevelStruct) GetRequired() string {
    return t.Required
}

func (t TopLevelStruct) GetSecondLevel() jsii.Any {
    return t.SecondLevel
}

func (t TopLevelStruct) GetOptional() string {
    return t.Optional
}


// Class interface
type UmaskCheckIface interface {
    Mode() float64
}

// Struct proxy
type UmaskCheck struct {
}

func (u *UmaskCheck) Mode() float64  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "UmaskCheck",
        Method: "Mode",
        Parameters: []string{}
    })
    return 0.0
}

// Class interface
type UnaryOperationIface interface {
    GetValue() float64
    SetValue()
    GetOperand() jsii.Any
    SetOperand()
    TypeName() jsii.Any
    ToString() string
}

// Struct proxy
type UnaryOperation struct {
    Value float64
    Operand jsii.Any
}

func (u UnaryOperation) GetValue() float64 {
    return u.Value
}

func (u UnaryOperation) GetOperand() jsii.Any {
    return u.Operand
}


func NewUnaryOperation(operand @scope/jsii-calc-lib.NumericValue) UnaryOperationIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "UnaryOperation",
        Method: "NewUnaryOperation",
        Parameters: []string{operand @scope/jsii-calc-lib.NumericValue}
    })

    return &UnaryOperation{
     // props
    }
}

func (u UnaryOperation) SetValue(val float64) {
    u.Value = val
}

func (u UnaryOperation) SetOperand(val jsii.Any) {
    u.Operand = val
}

func (u *UnaryOperation) TypeName() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "UnaryOperation",
        Method: "TypeName",
        Parameters: []string{}
    })
    return nil
}

func (u *UnaryOperation) ToString() string  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "UnaryOperation",
        Method: "ToString",
        Parameters: []string{}
    })
    return "NOOP_RETURN_STRING"
}

// Struct interface
type UnionPropertiesIface interface {
    GetBar() jsii.Any
    GetFoo() jsii.Any
}

// Struct proxy
type UnionProperties struct {
    Bar jsii.Any
    Foo jsii.Any
}

func (u UnionProperties) GetBar() jsii.Any {
    return u.Bar
}

func (u UnionProperties) GetFoo() jsii.Any {
    return u.Foo
}


// Class interface
type UpcasingReflectableIface interface {
    @scope/jsii-calc-lib.submodule.IReflectable
    GetReflector() jsii.Any
    SetReflector()
    GetEntries() []jsii.Any
    SetEntries()
}

// Struct proxy
type UpcasingReflectable struct {
    Reflector jsii.Any
    Entries []jsii.Any
}

func (u UpcasingReflectable) GetReflector() jsii.Any {
    return u.Reflector
}

func (u UpcasingReflectable) GetEntries() []jsii.Any {
    return u.Entries
}


func NewUpcasingReflectable(delegate Map<string => any>) UpcasingReflectableIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "UpcasingReflectable",
        Method: "NewUpcasingReflectable",
        Parameters: []string{delegate Map<string => any>}
    })

    return &UpcasingReflectable{
     // props
    }
}

func (u UpcasingReflectable) SetReflector(val jsii.Any) {
    u.Reflector = val
}

func (u UpcasingReflectable) SetEntries(val []jsii.Any) {
    u.Entries = val
}

// Class interface
type UseBundledDependencyIface interface {
    Value() jsii.Any
}

// Struct proxy
type UseBundledDependency struct {
}

func NewUseBundledDependency() UseBundledDependencyIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "UseBundledDependency",
        Method: "NewUseBundledDependency",
        Parameters: []string{}
    })

    return &UseBundledDependency{
     // props
    }
}

func (u *UseBundledDependency) Value() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "UseBundledDependency",
        Method: "Value",
        Parameters: []string{}
    })
    return nil
}

// Class interface
type UseCalcBaseIface interface {
    Hello() jsii.Any
}

// Struct proxy
type UseCalcBase struct {
}

func NewUseCalcBase() UseCalcBaseIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "UseCalcBase",
        Method: "NewUseCalcBase",
        Parameters: []string{}
    })

    return &UseCalcBase{
     // props
    }
}

func (u *UseCalcBase) Hello() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "UseCalcBase",
        Method: "Hello",
        Parameters: []string{}
    })
    return nil
}

// Class interface
type UsesInterfaceWithPropertiesIface interface {
    GetObj() IInterfaceWithProperties
    SetObj()
    JustRead() string
    ReadStringAndNumber() string
    WriteAndRead() string
}

// Struct proxy
type UsesInterfaceWithProperties struct {
    Obj IInterfaceWithProperties
}

func (u UsesInterfaceWithProperties) GetObj() IInterfaceWithProperties {
    return u.Obj
}


func NewUsesInterfaceWithProperties(obj jsii-calc.IInterfaceWithProperties) UsesInterfaceWithPropertiesIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "UsesInterfaceWithProperties",
        Method: "NewUsesInterfaceWithProperties",
        Parameters: []string{obj jsii-calc.IInterfaceWithProperties}
    })

    return &UsesInterfaceWithProperties{
     // props
    }
}

func (u UsesInterfaceWithProperties) SetObj(val IInterfaceWithProperties) {
    u.Obj = val
}

func (u *UsesInterfaceWithProperties) JustRead() string  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "UsesInterfaceWithProperties",
        Method: "JustRead",
        Parameters: []string{}
    })
    return "NOOP_RETURN_STRING"
}

func (u *UsesInterfaceWithProperties) ReadStringAndNumber() string  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "UsesInterfaceWithProperties",
        Method: "ReadStringAndNumber",
        Parameters: []string{"ext jsii-calc.IInterfaceWithPropertiesExtension"}
    })
    return "NOOP_RETURN_STRING"
}

func (u *UsesInterfaceWithProperties) WriteAndRead() string  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "UsesInterfaceWithProperties",
        Method: "WriteAndRead",
        Parameters: []string{"value string"}
    })
    return "NOOP_RETURN_STRING"
}

// Class interface
type VariadicInvokerIface interface {
    AsArray() []float64
}

// Struct proxy
type VariadicInvoker struct {
}

func NewVariadicInvoker(method jsii-calc.VariadicMethod) VariadicInvokerIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "VariadicInvoker",
        Method: "NewVariadicInvoker",
        Parameters: []string{method jsii-calc.VariadicMethod}
    })

    return &VariadicInvoker{
     // props
    }
}

func (v *VariadicInvoker) AsArray() []float64  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "VariadicInvoker",
        Method: "AsArray",
        Parameters: []string{"values number"}
    })
    return nil
}

// Class interface
type VariadicMethodIface interface {
    AsArray() []float64
}

// Struct proxy
type VariadicMethod struct {
}

func NewVariadicMethod(prefix number) VariadicMethodIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "VariadicMethod",
        Method: "NewVariadicMethod",
        Parameters: []string{prefix number}
    })

    return &VariadicMethod{
     // props
    }
}

func (v *VariadicMethod) AsArray() []float64  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "VariadicMethod",
        Method: "AsArray",
        Parameters: []string{"first number", "others number"}
    })
    return nil
}

// Class interface
type VirtualMethodPlaygroundIface interface {
    OverrideMeAsync() float64
    OverrideMeSync() float64
    ParallelSumAsync() float64
    SerialSumAsync() float64
    SumSync() float64
}

// Struct proxy
type VirtualMethodPlayground struct {
}

func NewVirtualMethodPlayground() VirtualMethodPlaygroundIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "VirtualMethodPlayground",
        Method: "NewVirtualMethodPlayground",
        Parameters: []string{}
    })

    return &VirtualMethodPlayground{
     // props
    }
}

func (v *VirtualMethodPlayground) OverrideMeAsync() float64  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "VirtualMethodPlayground",
        Method: "OverrideMeAsync",
        Parameters: []string{"index number"}
    })
    return 0.0
}

func (v *VirtualMethodPlayground) OverrideMeSync() float64  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "VirtualMethodPlayground",
        Method: "OverrideMeSync",
        Parameters: []string{"index number"}
    })
    return 0.0
}

func (v *VirtualMethodPlayground) ParallelSumAsync() float64  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "VirtualMethodPlayground",
        Method: "ParallelSumAsync",
        Parameters: []string{"count number"}
    })
    return 0.0
}

func (v *VirtualMethodPlayground) SerialSumAsync() float64  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "VirtualMethodPlayground",
        Method: "SerialSumAsync",
        Parameters: []string{"count number"}
    })
    return 0.0
}

func (v *VirtualMethodPlayground) SumSync() float64  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "VirtualMethodPlayground",
        Method: "SumSync",
        Parameters: []string{"count number"}
    })
    return 0.0
}

// Class interface
type VoidCallbackIface interface {
    GetMethodWasCalled() bool
    SetMethodWasCalled()
    CallMe() jsii.Any
    OverrideMe() jsii.Any
}

// Struct proxy
type VoidCallback struct {
    MethodWasCalled bool
}

func (v VoidCallback) GetMethodWasCalled() bool {
    return v.MethodWasCalled
}


func NewVoidCallback() VoidCallbackIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "VoidCallback",
        Method: "NewVoidCallback",
        Parameters: []string{}
    })

    return &VoidCallback{
     // props
    }
}

func (v VoidCallback) SetMethodWasCalled(val bool) {
    v.MethodWasCalled = val
}

func (v *VoidCallback) CallMe() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "VoidCallback",
        Method: "CallMe",
        Parameters: []string{}
    })
    return nil
}

func (v *VoidCallback) OverrideMe() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "VoidCallback",
        Method: "OverrideMe",
        Parameters: []string{}
    })
    return nil
}

// Class interface
type WithPrivatePropertyInConstructorIface interface {
    GetSuccess() bool
    SetSuccess()
}

// Struct proxy
type WithPrivatePropertyInConstructor struct {
    Success bool
}

func (w WithPrivatePropertyInConstructor) GetSuccess() bool {
    return w.Success
}


func NewWithPrivatePropertyInConstructor(privateField string) WithPrivatePropertyInConstructorIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "WithPrivatePropertyInConstructor",
        Method: "NewWithPrivatePropertyInConstructor",
        Parameters: []string{privateField string}
    })

    return &WithPrivatePropertyInConstructor{
     // props
    }
}

func (w WithPrivatePropertyInConstructor) SetSuccess(val bool) {
    w.Success = val
}


`;

exports[`Generated code for "jsii-calc": <outDir>/golang/jsiicalc/composition.go 1`] = `
package composition

import (
    "github.com/aws-cdk/jsii/jsii"
)

// Class interface
type CompositeOperationIface interface {
    GetValue() float64
    SetValue()
    GetExpression() jsii.Any
    SetExpression()
    GetDecorationPostfixes() []string
    SetDecorationPostfixes()
    GetDecorationPrefixes() []string
    SetDecorationPrefixes()
    GetStringStyle() CompositionStringStyle
    SetStringStyle()
    TypeName() jsii.Any
    ToString() string
}

// Struct proxy
type CompositeOperation struct {
    Value float64
    Expression jsii.Any
    DecorationPostfixes []string
    DecorationPrefixes []string
    StringStyle CompositionStringStyle
}

func (c CompositeOperation) GetValue() float64 {
    return c.Value
}

func (c CompositeOperation) GetExpression() jsii.Any {
    return c.Expression
}

func (c CompositeOperation) GetDecorationPostfixes() []string {
    return c.DecorationPostfixes
}

func (c CompositeOperation) GetDecorationPrefixes() []string {
    return c.DecorationPrefixes
}

func (c CompositeOperation) GetStringStyle() CompositionStringStyle {
    return c.StringStyle
}


func NewCompositeOperation() CompositeOperationIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "CompositeOperation",
        Method: "NewCompositeOperation",
        Parameters: []string{}
    })

    return &CompositeOperation{
     // props
    }
}

func (c CompositeOperation) SetValue(val float64) {
    c.Value = val
}

func (c CompositeOperation) SetExpression(val jsii.Any) {
    c.Expression = val
}

func (c CompositeOperation) SetDecorationPostfixes(val []string) {
    c.DecorationPostfixes = val
}

func (c CompositeOperation) SetDecorationPrefixes(val []string) {
    c.DecorationPrefixes = val
}

func (c CompositeOperation) SetStringStyle(val CompositionStringStyle) {
    c.StringStyle = val
}

func (c *CompositeOperation) TypeName() jsii.Any  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "CompositeOperation",
        Method: "TypeName",
        Parameters: []string{}
    })
    return nil
}

func (c *CompositeOperation) ToString() string  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "CompositeOperation",
        Method: "ToString",
        Parameters: []string{}
    })
    return "NOOP_RETURN_STRING"
}

type CompositionStringStyle string

const (
    CompositionStringStyleNormal CompositionStringStyle = "NORMAL"
    CompositionStringStyleDecorated CompositionStringStyle = "DECORATED"
)


`;

exports[`Generated code for "jsii-calc": <outDir>/golang/jsiicalc/derivedclasshasnoproperties.go 1`] = `
package derivedclasshasnoproperties

import (
    "github.com/aws-cdk/jsii/jsii"
)

// Class interface
type BaseIface interface {
    GetProp() string
    SetProp()
}

// Struct proxy
type Base struct {
    Prop string
}

func (b Base) GetProp() string {
    return b.Prop
}


func NewBase() BaseIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "Base",
        Method: "NewBase",
        Parameters: []string{}
    })

    return &Base{
     // props
    }
}

func (b Base) SetProp(val string) {
    b.Prop = val
}

// Class interface
type DerivedIface interface {
    GetProp() string
    SetProp()
}

// Struct proxy
type Derived struct {
    Prop string
}

func (d Derived) GetProp() string {
    return d.Prop
}


func NewDerived() DerivedIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "Derived",
        Method: "NewDerived",
        Parameters: []string{}
    })

    return &Derived{
     // props
    }
}

func (d Derived) SetProp(val string) {
    d.Prop = val
}


`;

exports[`Generated code for "jsii-calc": <outDir>/golang/jsiicalc/interfaceinnamespaceincludesclasses.go 1`] = `
package interfaceinnamespaceincludesclasses

import (
    "github.com/aws-cdk/jsii/jsii"
)

// Class interface
type FooIface interface {
    GetBar() string
    SetBar()
}

// Struct proxy
type Foo struct {
    Bar string
}

func (f Foo) GetBar() string {
    return f.Bar
}


func NewFoo() FooIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "Foo",
        Method: "NewFoo",
        Parameters: []string{}
    })

    return &Foo{
     // props
    }
}

func (f Foo) SetBar(val string) {
    f.Bar = val
}

// Struct interface
type HelloIface interface {
    GetFoo() float64
}

// Struct proxy
type Hello struct {
    Foo float64
}

func (h Hello) GetFoo() float64 {
    return h.Foo
}



`;

exports[`Generated code for "jsii-calc": <outDir>/golang/jsiicalc/interfaceinnamespaceonlyinterface.go 1`] = `
package interfaceinnamespaceonlyinterface

import (
    "github.com/aws-cdk/jsii/jsii"
)

// Struct interface
type HelloIface interface {
    GetFoo() float64
}

// Struct proxy
type Hello struct {
    Foo float64
}

func (h Hello) GetFoo() float64 {
    return h.Foo
}



`;

exports[`Generated code for "jsii-calc": <outDir>/golang/jsiicalc/pythonself.go 1`] = `
package pythonself

import (
    "github.com/aws-cdk/jsii/jsii"
)

// Class interface
type ClassWithSelfIface interface {
    GetSelf() string
    SetSelf()
    Method() string
}

// Struct proxy
type ClassWithSelf struct {
    Self string
}

func (c ClassWithSelf) GetSelf() string {
    return c.Self
}


func NewClassWithSelf(self string) ClassWithSelfIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "ClassWithSelf",
        Method: "NewClassWithSelf",
        Parameters: []string{self string}
    })

    return &ClassWithSelf{
     // props
    }
}

func (c ClassWithSelf) SetSelf(val string) {
    c.Self = val
}

func (c *ClassWithSelf) Method() string  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "ClassWithSelf",
        Method: "Method",
        Parameters: []string{"self number"}
    })
    return "NOOP_RETURN_STRING"
}

// Class interface
type ClassWithSelfKwargIface interface {
    GetProps() StructWithSelf
    SetProps()
}

// Struct proxy
type ClassWithSelfKwarg struct {
    Props StructWithSelf
}

func (c ClassWithSelfKwarg) GetProps() StructWithSelf {
    return c.Props
}


func NewClassWithSelfKwarg(props jsii-calc.PythonSelf.StructWithSelf) ClassWithSelfKwargIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "ClassWithSelfKwarg",
        Method: "NewClassWithSelfKwarg",
        Parameters: []string{props jsii-calc.PythonSelf.StructWithSelf}
    })

    return &ClassWithSelfKwarg{
     // props
    }
}

func (c ClassWithSelfKwarg) SetProps(val StructWithSelf) {
    c.Props = val
}

// Behaviorial interface
type IInterfaceWithSelf interface {
    Method() string
}

// Struct interface
type StructWithSelfIface interface {
    GetSelf() string
}

// Struct proxy
type StructWithSelf struct {
    Self string
}

func (s StructWithSelf) GetSelf() string {
    return s.Self
}



`;

exports[`Generated code for "jsii-calc": <outDir>/golang/jsiicalc/submodule.go 1`] = `
package submodule

import (
    "github.com/aws-cdk/jsii/jsii"
    "child"
    "jsiicalc"
)

// Class interface
type MyClassIface interface {
    jsii-calc.submodule.nested_submodule.deeplyNested.INamespaced
    GetAwesomeness() child.Awesomeness
    SetAwesomeness()
    GetDefinedAt() string
    SetDefinedAt()
    GetGoodness() child.Goodness
    SetGoodness()
    GetProps() child.SomeStruct
    SetProps()
    GetAllTypes() jsiicalc.AllTypes
    SetAllTypes()
}

// Struct proxy
type MyClass struct {
    Awesomeness child.Awesomeness
    DefinedAt string
    Goodness child.Goodness
    Props child.SomeStruct
    AllTypes jsiicalc.AllTypes
}

func (m MyClass) GetAwesomeness() child.Awesomeness {
    return m.Awesomeness
}

func (m MyClass) GetDefinedAt() string {
    return m.DefinedAt
}

func (m MyClass) GetGoodness() child.Goodness {
    return m.Goodness
}

func (m MyClass) GetProps() child.SomeStruct {
    return m.Props
}

func (m MyClass) GetAllTypes() jsiicalc.AllTypes {
    return m.AllTypes
}


func NewMyClass(props jsii-calc.submodule.child.SomeStruct) MyClassIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "MyClass",
        Method: "NewMyClass",
        Parameters: []string{props jsii-calc.submodule.child.SomeStruct}
    })

    return &MyClass{
     // props
    }
}

func (m MyClass) SetAwesomeness(val child.Awesomeness) {
    m.Awesomeness = val
}

func (m MyClass) SetDefinedAt(val string) {
    m.DefinedAt = val
}

func (m MyClass) SetGoodness(val child.Goodness) {
    m.Goodness = val
}

func (m MyClass) SetProps(val child.SomeStruct) {
    m.Props = val
}

func (m MyClass) SetAllTypes(val jsiicalc.AllTypes) {
    m.AllTypes = val
}


`;

exports[`Generated code for "jsii-calc": <outDir>/golang/jsiicalc/submodule/backreferences.go 1`] = `
package backreferences

import (
    "github.com/aws-cdk/jsii/jsii"
    "submodule"
)

// Struct interface
type MyClassReferenceIface interface {
    GetReference() submodule.MyClass
}

// Struct proxy
type MyClassReference struct {
    Reference submodule.MyClass
}

func (m MyClassReference) GetReference() submodule.MyClass {
    return m.Reference
}



`;

exports[`Generated code for "jsii-calc": <outDir>/golang/jsiicalc/submodule/child.go 1`] = `
package child

import (
    "github.com/aws-cdk/jsii/jsii"
)

type Awesomeness string

const (
    AwesomenessAwesome Awesomeness = "AWESOME"
)

type Goodness string

const (
    GoodnessPrettyGood Goodness = "PRETTY_GOOD"
    GoodnessReallyGood Goodness = "REALLY_GOOD"
    GoodnessAmazinglyGood Goodness = "AMAZINGLY_GOOD"
)

// Class interface
type InnerClassIface interface {
    GetStaticProp() SomeStruct
    SetStaticProp()
}

// Struct proxy
type InnerClass struct {
    StaticProp SomeStruct
}

func (i InnerClass) GetStaticProp() SomeStruct {
    return i.StaticProp
}


func NewInnerClass() InnerClassIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "InnerClass",
        Method: "NewInnerClass",
        Parameters: []string{}
    })

    return &InnerClass{
     // props
    }
}

func (i InnerClass) SetStaticProp(val SomeStruct) {
    i.StaticProp = val
}

// Struct interface
type KwargsPropsIface interface {
    GetProp() SomeEnum
    GetExtra() string
}

// Struct proxy
type KwargsProps struct {
    Prop SomeEnum
    Extra string
}

func (k KwargsProps) GetProp() SomeEnum {
    return k.Prop
}

func (k KwargsProps) GetExtra() string {
    return k.Extra
}


// Class interface
type OuterClassIface interface {
    GetInnerClass() InnerClass
    SetInnerClass()
}

// Struct proxy
type OuterClass struct {
    InnerClass InnerClass
}

func (o OuterClass) GetInnerClass() InnerClass {
    return o.InnerClass
}


func NewOuterClass() OuterClassIface {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "OuterClass",
        Method: "NewOuterClass",
        Parameters: []string{}
    })

    return &OuterClass{
     // props
    }
}

func (o OuterClass) SetInnerClass(val InnerClass) {
    o.InnerClass = val
}

type SomeEnum string

const (
    SomeEnumSome SomeEnum = "SOME"
)

// Struct interface
type SomeStructIface interface {
    GetProp() SomeEnum
}

// Struct proxy
type SomeStruct struct {
    Prop SomeEnum
}

func (s SomeStruct) GetProp() SomeEnum {
    return s.Prop
}


// Struct interface
type StructureIface interface {
    GetBool() bool
}

// Struct proxy
type Structure struct {
    Bool bool
}

func (s Structure) GetBool() bool {
    return s.Bool
}



`;

exports[`Generated code for "jsii-calc": <outDir>/golang/jsiicalc/submodule/isolated.go 1`] = `
package isolated

import (
    "github.com/aws-cdk/jsii/jsii"
)

// Class interface
type KwargsIface interface {
    Method() bool
}

// Struct proxy
type Kwargs struct {
}

func (k *Kwargs) Method() bool  {
    jsii.NoOpRequest(jsii.NoOpApiRequest {
        Class: "Kwargs",
        Method: "Method",
        Parameters: []string{"props jsii-calc.submodule.child.KwargsProps"}
    })
    return true
}


`;

exports[`Generated code for "jsii-calc": <outDir>/golang/jsiicalc/submodule/nestedsubmodule.go 1`] = `
package nestedsubmodule

import (
    "github.com/aws-cdk/jsii/jsii"
    "child"
)

// Class interface
type NamespacedIface interface {
    jsii-calc.submodule.nested_submodule.deeplyNested.INamespaced
    GetDefinedAt() string
    SetDefinedAt()
    GetGoodness() child.Goodness
    SetGoodness()
}

// Struct proxy
type Namespaced struct {
    DefinedAt string
    Goodness child.Goodness
}

func (n Namespaced) GetDefinedAt() string {
    return n.DefinedAt
}

func (n Namespaced) GetGoodness() child.Goodness {
    return n.Goodness
}


func (n Namespaced) SetDefinedAt(val string) {
    n.DefinedAt = val
}

func (n Namespaced) SetGoodness(val child.Goodness) {
    n.Goodness = val
}


`;

exports[`Generated code for "jsii-calc": <outDir>/golang/jsiicalc/submodule/nestedsubmodule/deeplynested.go 1`] = `
package deeplynested

import (
    "github.com/aws-cdk/jsii/jsii"
)

// Behaviorial interface
type INamespaced interface {
    GetDefinedAt() string
}


`;
