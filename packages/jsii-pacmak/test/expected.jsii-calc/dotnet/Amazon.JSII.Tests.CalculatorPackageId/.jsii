{
  "author": {
    "name": "Amazon Web Services",
    "organization": true,
    "roles": [
      "author"
    ],
    "url": "https://aws.amazon.com"
  },
  "bundled": {
    "jsii-calc-bundled": "^0.8.2"
  },
  "contributors": [
    {
      "name": "Elad Ben-Israel",
      "roles": [
        "maintainer"
      ],
      "url": "https://github.com/eladb"
    },
    {
      "name": "Rico Huijbers",
      "roles": [
        "maintainer"
      ],
      "url": "https://github.com/rix0rrr"
    },
    {
      "name": "Romain Marcadier-Muller",
      "roles": [
        "maintainer"
      ],
      "url": "https://github.com/RomainMuller"
    }
  ],
  "dependencies": {
    "@scope/jsii-calc-base": {
      "dependencies": {
        "@scope/jsii-calc-base-of-base": {
          "peer": true,
          "targets": {
            "dotnet": {
              "namespace": "Amazon.JSII.Tests.CalculatorNamespace.BaseOfBaseNamespace",
              "packageId": "Amazon.JSII.Tests.CalculatorPackageId.BaseOfBasePackageId"
            },
            "java": {
              "maven": {
                "artifactId": "calculator-base-of-base",
                "groupId": "software.amazon.jsii.tests"
              },
              "package": "software.amazon.jsii.tests.calculator.baseofbase"
            },
            "js": {
              "npm": "@scope/jsii-calc-base-of-base"
            },
            "python": {
              "distName": "scope.jsii-calc-base-of-base",
              "module": "scope.jsii_calc_base_of_base"
            }
          },
          "version": "0.8.2"
        }
      },
      "peer": true,
      "targets": {
        "dotnet": {
          "namespace": "Amazon.JSII.Tests.CalculatorNamespace.BaseNamespace",
          "packageId": "Amazon.JSII.Tests.CalculatorPackageId.BasePackageId"
        },
        "java": {
          "maven": {
            "artifactId": "calculator-base",
            "groupId": "software.amazon.jsii.tests"
          },
          "package": "software.amazon.jsii.tests.calculator.base"
        },
        "js": {
          "npm": "@scope/jsii-calc-base"
        },
        "python": {
          "distName": "scope.jsii-calc-base",
          "module": "scope.jsii_calc_base"
        }
      },
      "version": "0.8.2"
    },
    "@scope/jsii-calc-base-of-base": {
      "peer": true,
      "targets": {
        "dotnet": {
          "namespace": "Amazon.JSII.Tests.CalculatorNamespace.BaseOfBaseNamespace",
          "packageId": "Amazon.JSII.Tests.CalculatorPackageId.BaseOfBasePackageId"
        },
        "java": {
          "maven": {
            "artifactId": "calculator-base-of-base",
            "groupId": "software.amazon.jsii.tests"
          },
          "package": "software.amazon.jsii.tests.calculator.baseofbase"
        },
        "js": {
          "npm": "@scope/jsii-calc-base-of-base"
        },
        "python": {
          "distName": "scope.jsii-calc-base-of-base",
          "module": "scope.jsii_calc_base_of_base"
        }
      },
      "version": "0.8.2"
    },
    "@scope/jsii-calc-lib": {
      "dependencies": {
        "@scope/jsii-calc-base": {
          "dependencies": {
            "@scope/jsii-calc-base-of-base": {
              "peer": true,
              "targets": {
                "dotnet": {
                  "namespace": "Amazon.JSII.Tests.CalculatorNamespace.BaseOfBaseNamespace",
                  "packageId": "Amazon.JSII.Tests.CalculatorPackageId.BaseOfBasePackageId"
                },
                "java": {
                  "maven": {
                    "artifactId": "calculator-base-of-base",
                    "groupId": "software.amazon.jsii.tests"
                  },
                  "package": "software.amazon.jsii.tests.calculator.baseofbase"
                },
                "js": {
                  "npm": "@scope/jsii-calc-base-of-base"
                },
                "python": {
                  "distName": "scope.jsii-calc-base-of-base",
                  "module": "scope.jsii_calc_base_of_base"
                }
              },
              "version": "0.8.2"
            }
          },
          "peer": true,
          "targets": {
            "dotnet": {
              "namespace": "Amazon.JSII.Tests.CalculatorNamespace.BaseNamespace",
              "packageId": "Amazon.JSII.Tests.CalculatorPackageId.BasePackageId"
            },
            "java": {
              "maven": {
                "artifactId": "calculator-base",
                "groupId": "software.amazon.jsii.tests"
              },
              "package": "software.amazon.jsii.tests.calculator.base"
            },
            "js": {
              "npm": "@scope/jsii-calc-base"
            },
            "python": {
              "distName": "scope.jsii-calc-base",
              "module": "scope.jsii_calc_base"
            }
          },
          "version": "0.8.2"
        }
      },
      "peer": true,
      "targets": {
        "dotnet": {
          "namespace": "Amazon.JSII.Tests.CalculatorNamespace.LibNamespace",
          "packageId": "Amazon.JSII.Tests.CalculatorPackageId.LibPackageId"
        },
        "java": {
          "maven": {
            "artifactId": "calculator-lib",
            "groupId": "software.amazon.jsii.tests"
          },
          "package": "software.amazon.jsii.tests.calculator.lib"
        },
        "js": {
          "npm": "@scope/jsii-calc-lib"
        },
        "python": {
          "distName": "scope.jsii-calc-lib",
          "module": "scope.jsii_calc_lib"
        }
      },
      "version": "0.8.2"
    }
  },
  "description": "A simple calcuator built on JSII.",
  "homepage": "https://github.com/awslabs/jsii.git",
  "jsiiVersion": "0.8.2",
  "license": "Apache-2.0",
  "name": "jsii-calc",
  "readme": {
    "markdown": "# jsii Calculator\n\nThis library is used to demonstrate and test the features of JSII\n\n## Sphinx\n\nThis file will be incorporated into the sphinx documentation.\n\nIf this file starts with an \"H1\" line (in our case `# jsii Calculator`), this\nheading will be used as the Sphinx topic name. Otherwise, the name of the module\n(`jsii-calc`) will be used instead.\n\n\n\n\n"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/awslabs/jsii.git"
  },
  "schema": "jsii/1.0",
  "targets": {
    "dotnet": {
      "namespace": "Amazon.JSII.Tests.CalculatorNamespace",
      "packageId": "Amazon.JSII.Tests.CalculatorPackageId"
    },
    "java": {
      "maven": {
        "artifactId": "calculator",
        "groupId": "software.amazon.jsii.tests"
      },
      "package": "software.amazon.jsii.tests.calculator"
    },
    "js": {
      "npm": "jsii-calc"
    },
    "python": {
      "distName": "jsii-calc",
      "module": "jsii_calc"
    }
  },
  "types": {
    "jsii-calc.AbstractClass": {
      "abstract": true,
      "assembly": "jsii-calc",
      "base": {
        "fqn": "jsii-calc.AbstractClassBase"
      },
      "fqn": "jsii-calc.AbstractClass",
      "initializer": {
        "initializer": true
      },
      "interfaces": [
        {
          "fqn": "jsii-calc.IInterfaceImplementedByAbstractClass"
        }
      ],
      "kind": "class",
      "methods": [
        {
          "abstract": true,
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 1072
          },
          "name": "abstractMethod",
          "parameters": [
            {
              "name": "name",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "primitive": "string"
          }
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 1068
          },
          "name": "nonAbstractMethod",
          "returns": {
            "primitive": "number"
          }
        }
      ],
      "moduleLocation": {
        "filename": "lib/compliance.ts",
        "line": 1067
      },
      "name": "AbstractClass",
      "properties": [
        {
          "immutable": true,
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 1074
          },
          "name": "propFromInterface",
          "overrides": {
            "fqn": "jsii-calc.IInterfaceImplementedByAbstractClass"
          },
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "jsii-calc.AbstractClassBase": {
      "abstract": true,
      "assembly": "jsii-calc",
      "fqn": "jsii-calc.AbstractClassBase",
      "initializer": {
        "initializer": true
      },
      "kind": "class",
      "moduleLocation": {
        "filename": "lib/compliance.ts",
        "line": 1063
      },
      "name": "AbstractClassBase",
      "properties": [
        {
          "abstract": true,
          "immutable": true,
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 1064
          },
          "name": "abstractProperty",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "jsii-calc.AbstractClassReturner": {
      "assembly": "jsii-calc",
      "fqn": "jsii-calc.AbstractClassReturner",
      "initializer": {
        "initializer": true
      },
      "kind": "class",
      "methods": [
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 1090
          },
          "name": "giveMeAbstract",
          "returns": {
            "fqn": "jsii-calc.AbstractClass"
          }
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 1094
          },
          "name": "giveMeInterface",
          "returns": {
            "fqn": "jsii-calc.IInterfaceImplementedByAbstractClass"
          }
        }
      ],
      "moduleLocation": {
        "filename": "lib/compliance.ts",
        "line": 1089
      },
      "name": "AbstractClassReturner",
      "properties": [
        {
          "immutable": true,
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 1098
          },
          "name": "returnAbstractFromProperty",
          "type": {
            "fqn": "jsii-calc.AbstractClassBase"
          }
        }
      ]
    },
    "jsii-calc.Add": {
      "assembly": "jsii-calc",
      "base": {
        "fqn": "jsii-calc.BinaryOperation"
      },
      "docs": {
        "summary": "The \"+\" binary operation."
      },
      "fqn": "jsii-calc.Add",
      "initializer": {
        "docs": {
          "summary": "Creates a BinaryOperation."
        },
        "initializer": true,
        "parameters": [
          {
            "docs": {
              "summary": "Left-hand side operand."
            },
            "name": "lhs",
            "type": {
              "fqn": "@scope/jsii-calc-lib.Value"
            }
          },
          {
            "docs": {
              "summary": "Right-hand side operand."
            },
            "name": "rhs",
            "type": {
              "fqn": "@scope/jsii-calc-lib.Value"
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "docs": {
            "summary": "String representation of the value."
          },
          "moduleLocation": {
            "filename": "lib/calculator.ts",
            "line": 61
          },
          "name": "toString",
          "overrides": {
            "fqn": "@scope/jsii-calc-lib.Operation"
          },
          "returns": {
            "primitive": "string"
          }
        }
      ],
      "moduleLocation": {
        "filename": "lib/calculator.ts",
        "line": 56
      },
      "name": "Add",
      "properties": [
        {
          "docs": {
            "summary": "The value."
          },
          "immutable": true,
          "moduleLocation": {
            "filename": "lib/calculator.ts",
            "line": 57
          },
          "name": "value",
          "overrides": {
            "fqn": "@scope/jsii-calc-lib.Value"
          },
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "jsii-calc.AllTypes": {
      "assembly": "jsii-calc",
      "docs": {
        "remarks": "The setters will validate\nthat the value set is of the expected type and throw otherwise.",
        "summary": "This class includes property for all types supported by jsii."
      },
      "fqn": "jsii-calc.AllTypes",
      "initializer": {
        "initializer": true
      },
      "kind": "class",
      "methods": [
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 207
          },
          "name": "anyIn",
          "parameters": [
            {
              "name": "inp",
              "type": {
                "primitive": "any"
              }
            }
          ]
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 199
          },
          "name": "anyOut",
          "returns": {
            "primitive": "any"
          }
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 194
          },
          "name": "enumMethod",
          "parameters": [
            {
              "name": "value",
              "type": {
                "fqn": "jsii-calc.StringEnum"
              }
            }
          ],
          "returns": {
            "fqn": "jsii-calc.StringEnum"
          }
        }
      ],
      "moduleLocation": {
        "filename": "lib/compliance.ts",
        "line": 39
      },
      "name": "AllTypes",
      "properties": [
        {
          "immutable": true,
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 190
          },
          "name": "enumPropertyValue",
          "type": {
            "primitive": "number"
          }
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 154
          },
          "name": "anyArrayProperty",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "array"
            }
          }
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 155
          },
          "name": "anyMapProperty",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 153
          },
          "name": "anyProperty",
          "type": {
            "primitive": "any"
          }
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 139
          },
          "name": "arrayProperty",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 45
          },
          "name": "booleanProperty",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 91
          },
          "name": "dateProperty",
          "type": {
            "primitive": "date"
          }
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 174
          },
          "name": "enumProperty",
          "type": {
            "fqn": "jsii-calc.AllTypesEnum"
          }
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 108
          },
          "name": "jsonProperty",
          "type": {
            "primitive": "json"
          }
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 124
          },
          "name": "mapProperty",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@scope/jsii-calc-lib.Number"
              },
              "kind": "map"
            }
          }
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 76
          },
          "name": "numberProperty",
          "type": {
            "primitive": "number"
          }
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 60
          },
          "name": "stringProperty",
          "type": {
            "primitive": "string"
          }
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 166
          },
          "name": "unionArrayProperty",
          "type": {
            "collection": {
              "elementtype": {
                "union": {
                  "types": [
                    {
                      "primitive": "number"
                    },
                    {
                      "fqn": "@scope/jsii-calc-lib.Value"
                    }
                  ]
                }
              },
              "kind": "array"
            }
          }
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 167
          },
          "name": "unionMapProperty",
          "type": {
            "collection": {
              "elementtype": {
                "union": {
                  "types": [
                    {
                      "primitive": "string"
                    },
                    {
                      "primitive": "number"
                    },
                    {
                      "fqn": "@scope/jsii-calc-lib.Number"
                    }
                  ]
                }
              },
              "kind": "map"
            }
          }
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 165
          },
          "name": "unionProperty",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "primitive": "number"
                },
                {
                  "fqn": "jsii-calc.Multiply"
                },
                {
                  "fqn": "@scope/jsii-calc-lib.Number"
                }
              ]
            }
          }
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 160
          },
          "name": "unknownArrayProperty",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "array"
            }
          }
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 161
          },
          "name": "unknownMapProperty",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 159
          },
          "name": "unknownProperty",
          "type": {
            "primitive": "any"
          }
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 171
          },
          "name": "optionalEnumValue",
          "type": {
            "fqn": "jsii-calc.StringEnum",
            "optional": true
          }
        }
      ]
    },
    "jsii-calc.AllTypesEnum": {
      "assembly": "jsii-calc",
      "fqn": "jsii-calc.AllTypesEnum",
      "kind": "enum",
      "members": [
        {
          "name": "MyEnumValue"
        },
        {
          "name": "YourEnumValue"
        },
        {
          "name": "ThisIsGreat"
        }
      ],
      "moduleLocation": {
        "filename": "lib/compliance.ts",
        "line": 23
      },
      "name": "AllTypesEnum"
    },
    "jsii-calc.AllowedMethodNames": {
      "assembly": "jsii-calc",
      "fqn": "jsii-calc.AllowedMethodNames",
      "initializer": {
        "initializer": true
      },
      "kind": "class",
      "methods": [
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 602
          },
          "name": "getBar",
          "parameters": [
            {
              "name": "_p1",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "_p2",
              "type": {
                "primitive": "number"
              }
            }
          ]
        },
        {
          "docs": {
            "summary": "getXxx() is not allowed (see negatives), but getXxx(a, ...) is okay."
          },
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 598
          },
          "name": "getFoo",
          "parameters": [
            {
              "name": "withParam",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "primitive": "string"
          }
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 613
          },
          "name": "setBar",
          "parameters": [
            {
              "name": "_x",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "_y",
              "type": {
                "primitive": "number"
              }
            },
            {
              "name": "_z",
              "type": {
                "primitive": "boolean"
              }
            }
          ]
        },
        {
          "docs": {
            "summary": "setFoo(x) is not allowed (see negatives), but setXxx(a, b, ...) is okay."
          },
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 609
          },
          "name": "setFoo",
          "parameters": [
            {
              "name": "_x",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "_y",
              "type": {
                "primitive": "number"
              }
            }
          ]
        }
      ],
      "moduleLocation": {
        "filename": "lib/compliance.ts",
        "line": 593
      },
      "name": "AllowedMethodNames"
    },
    "jsii-calc.AsyncVirtualMethods": {
      "assembly": "jsii-calc",
      "fqn": "jsii-calc.AsyncVirtualMethods",
      "initializer": {
        "initializer": true
      },
      "kind": "class",
      "methods": [
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 309
          },
          "name": "callMe",
          "returns": {
            "primitive": "number",
            "promise": true
          }
        },
        {
          "docs": {
            "summary": "Just calls \"overrideMeToo\"."
          },
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 324
          },
          "name": "callMe2",
          "returns": {
            "primitive": "number",
            "promise": true
          }
        },
        {
          "docs": {
            "remarks": "This is a \"double promise\" situation, which\nmeans that callbacks are not going to be available immediate, but only\nafter an \"immediates\" cycle.",
            "summary": "This method calls the \"callMe\" async method indirectly, which will then invoke a virtual method."
          },
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 334
          },
          "name": "callMeDoublePromise",
          "returns": {
            "primitive": "number",
            "promise": true
          }
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 342
          },
          "name": "dontOverrideMe",
          "returns": {
            "primitive": "number"
          }
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 313
          },
          "name": "overrideMe",
          "parameters": [
            {
              "name": "mult",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "primitive": "number",
            "promise": true
          }
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 317
          },
          "name": "overrideMeToo",
          "returns": {
            "primitive": "number",
            "promise": true
          }
        }
      ],
      "moduleLocation": {
        "filename": "lib/compliance.ts",
        "line": 308
      },
      "name": "AsyncVirtualMethods"
    },
    "jsii-calc.AugmentableClass": {
      "assembly": "jsii-calc",
      "fqn": "jsii-calc.AugmentableClass",
      "initializer": {
        "initializer": true
      },
      "kind": "class",
      "methods": [
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 1322
          },
          "name": "methodOne"
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 1328
          },
          "name": "methodTwo"
        }
      ],
      "moduleLocation": {
        "filename": "lib/compliance.ts",
        "line": 1321
      },
      "name": "AugmentableClass"
    },
    "jsii-calc.BinaryOperation": {
      "abstract": true,
      "assembly": "jsii-calc",
      "base": {
        "fqn": "@scope/jsii-calc-lib.Operation"
      },
      "docs": {
        "summary": "Represents an operation with two operands."
      },
      "fqn": "jsii-calc.BinaryOperation",
      "initializer": {
        "docs": {
          "summary": "Creates a BinaryOperation."
        },
        "initializer": true,
        "parameters": [
          {
            "docs": {
              "summary": "Left-hand side operand."
            },
            "name": "lhs",
            "type": {
              "fqn": "@scope/jsii-calc-lib.Value"
            }
          },
          {
            "docs": {
              "summary": "Right-hand side operand."
            },
            "name": "rhs",
            "type": {
              "fqn": "@scope/jsii-calc-lib.Value"
            }
          }
        ]
      },
      "interfaces": [
        {
          "fqn": "@scope/jsii-calc-lib.IFriendly"
        }
      ],
      "kind": "class",
      "methods": [
        {
          "docs": {
            "summary": "Say hello!"
          },
          "moduleLocation": {
            "filename": "lib/calculator.ts",
            "line": 48
          },
          "name": "hello",
          "overrides": {
            "fqn": "@scope/jsii-calc-lib.IFriendly"
          },
          "returns": {
            "primitive": "string"
          }
        }
      ],
      "moduleLocation": {
        "filename": "lib/calculator.ts",
        "line": 38
      },
      "name": "BinaryOperation",
      "properties": [
        {
          "docs": {
            "summary": "Left-hand side operand."
          },
          "immutable": true,
          "moduleLocation": {
            "filename": "lib/calculator.ts",
            "line": 44
          },
          "name": "lhs",
          "type": {
            "fqn": "@scope/jsii-calc-lib.Value"
          }
        },
        {
          "docs": {
            "summary": "Right-hand side operand."
          },
          "immutable": true,
          "moduleLocation": {
            "filename": "lib/calculator.ts",
            "line": 44
          },
          "name": "rhs",
          "type": {
            "fqn": "@scope/jsii-calc-lib.Value"
          }
        }
      ]
    },
    "jsii-calc.Calculator": {
      "assembly": "jsii-calc",
      "base": {
        "fqn": "jsii-calc.composition.CompositeOperation"
      },
      "docs": {
        "summary": "A calculator which maintains a current value and allows adding operations."
      },
      "fqn": "jsii-calc.Calculator",
      "initializer": {
        "docs": {
          "summary": "Creates a Calculator object."
        },
        "initializer": true,
        "parameters": [
          {
            "docs": {
              "summary": "Initialization properties."
            },
            "name": "props",
            "type": {
              "fqn": "jsii-calc.CalculatorProps",
              "optional": true
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "docs": {
            "summary": "Adds a number to the current value."
          },
          "moduleLocation": {
            "filename": "lib/calculator.ts",
            "line": 282
          },
          "name": "add",
          "parameters": [
            {
              "name": "value",
              "type": {
                "primitive": "number"
              }
            }
          ]
        },
        {
          "docs": {
            "summary": "Multiplies the current value by a number."
          },
          "moduleLocation": {
            "filename": "lib/calculator.ts",
            "line": 289
          },
          "name": "mul",
          "parameters": [
            {
              "name": "value",
              "type": {
                "primitive": "number"
              }
            }
          ]
        },
        {
          "docs": {
            "summary": "Negates the current value."
          },
          "moduleLocation": {
            "filename": "lib/calculator.ts",
            "line": 303
          },
          "name": "neg"
        },
        {
          "docs": {
            "summary": "Raises the current value by a power."
          },
          "moduleLocation": {
            "filename": "lib/calculator.ts",
            "line": 296
          },
          "name": "pow",
          "parameters": [
            {
              "name": "value",
              "type": {
                "primitive": "number"
              }
            }
          ]
        },
        {
          "docs": {
            "summary": "Returns teh value of the union property (if defined)."
          },
          "moduleLocation": {
            "filename": "lib/calculator.ts",
            "line": 322
          },
          "name": "readUnionValue",
          "returns": {
            "primitive": "number"
          }
        }
      ],
      "moduleLocation": {
        "filename": "lib/calculator.ts",
        "line": 243
      },
      "name": "Calculator",
      "properties": [
        {
          "docs": {
            "summary": "Returns the expression."
          },
          "immutable": true,
          "moduleLocation": {
            "filename": "lib/calculator.ts",
            "line": 310
          },
          "name": "expression",
          "overrides": {
            "fqn": "jsii-calc.composition.CompositeOperation"
          },
          "type": {
            "fqn": "@scope/jsii-calc-lib.Value"
          }
        },
        {
          "docs": {
            "summary": "A log of all operations."
          },
          "immutable": true,
          "moduleLocation": {
            "filename": "lib/calculator.ts",
            "line": 272
          },
          "name": "operationsLog",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@scope/jsii-calc-lib.Value"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "summary": "A map of per operation name of all operations performed."
          },
          "immutable": true,
          "moduleLocation": {
            "filename": "lib/calculator.ts",
            "line": 267
          },
          "name": "operationsMap",
          "type": {
            "collection": {
              "elementtype": {
                "collection": {
                  "elementtype": {
                    "fqn": "@scope/jsii-calc-lib.Value"
                  },
                  "kind": "array"
                }
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "summary": "The current value."
          },
          "moduleLocation": {
            "filename": "lib/calculator.ts",
            "line": 262
          },
          "name": "curr",
          "type": {
            "fqn": "@scope/jsii-calc-lib.Value"
          }
        },
        {
          "docs": {
            "summary": "The maximum value allows in this calculator."
          },
          "moduleLocation": {
            "filename": "lib/calculator.ts",
            "line": 277
          },
          "name": "maxValue",
          "type": {
            "optional": true,
            "primitive": "number"
          }
        },
        {
          "docs": {
            "summary": "Example of a property that accepts a union of types."
          },
          "moduleLocation": {
            "filename": "lib/calculator.ts",
            "line": 317
          },
          "name": "unionProperty",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "jsii-calc.Add"
                },
                {
                  "fqn": "jsii-calc.Multiply"
                },
                {
                  "fqn": "jsii-calc.Power"
                }
              ]
            }
          }
        }
      ]
    },
    "jsii-calc.CalculatorProps": {
      "assembly": "jsii-calc",
      "datatype": true,
      "docs": {
        "summary": "Properties for Calculator."
      },
      "fqn": "jsii-calc.CalculatorProps",
      "kind": "interface",
      "moduleLocation": {
        "filename": "lib/calculator.ts",
        "line": 235
      },
      "name": "CalculatorProps",
      "properties": [
        {
          "abstract": true,
          "immutable": true,
          "moduleLocation": {
            "filename": "lib/calculator.ts",
            "line": 236
          },
          "name": "initialValue",
          "type": {
            "optional": true,
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "immutable": true,
          "moduleLocation": {
            "filename": "lib/calculator.ts",
            "line": 237
          },
          "name": "maximumValue",
          "type": {
            "optional": true,
            "primitive": "number"
          }
        }
      ]
    },
    "jsii-calc.ClassThatImplementsTheInternalInterface": {
      "assembly": "jsii-calc",
      "fqn": "jsii-calc.ClassThatImplementsTheInternalInterface",
      "initializer": {
        "initializer": true
      },
      "interfaces": [
        {
          "fqn": "jsii-calc.INonInternalInterface"
        }
      ],
      "kind": "class",
      "moduleLocation": {
        "filename": "lib/compliance.ts",
        "line": 1563
      },
      "name": "ClassThatImplementsTheInternalInterface",
      "properties": [
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 1564
          },
          "name": "a",
          "overrides": {
            "fqn": "jsii-calc.IAnotherPublicInterface"
          },
          "type": {
            "primitive": "string"
          }
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 1565
          },
          "name": "b",
          "type": {
            "primitive": "string"
          }
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 1566
          },
          "name": "c",
          "overrides": {
            "fqn": "jsii-calc.INonInternalInterface"
          },
          "type": {
            "primitive": "string"
          }
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 1567
          },
          "name": "d",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "jsii-calc.ClassThatImplementsThePrivateInterface": {
      "assembly": "jsii-calc",
      "fqn": "jsii-calc.ClassThatImplementsThePrivateInterface",
      "initializer": {
        "initializer": true
      },
      "interfaces": [
        {
          "fqn": "jsii-calc.INonInternalInterface"
        }
      ],
      "kind": "class",
      "moduleLocation": {
        "filename": "lib/compliance.ts",
        "line": 1570
      },
      "name": "ClassThatImplementsThePrivateInterface",
      "properties": [
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 1571
          },
          "name": "a",
          "overrides": {
            "fqn": "jsii-calc.IAnotherPublicInterface"
          },
          "type": {
            "primitive": "string"
          }
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 1572
          },
          "name": "b",
          "type": {
            "primitive": "string"
          }
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 1573
          },
          "name": "c",
          "overrides": {
            "fqn": "jsii-calc.INonInternalInterface"
          },
          "type": {
            "primitive": "string"
          }
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 1574
          },
          "name": "e",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "jsii-calc.ClassWithMutableObjectLiteralProperty": {
      "assembly": "jsii-calc",
      "fqn": "jsii-calc.ClassWithMutableObjectLiteralProperty",
      "initializer": {
        "initializer": true
      },
      "kind": "class",
      "moduleLocation": {
        "filename": "lib/compliance.ts",
        "line": 1109
      },
      "name": "ClassWithMutableObjectLiteralProperty",
      "properties": [
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 1110
          },
          "name": "mutableObject",
          "type": {
            "fqn": "jsii-calc.IMutableObjectLiteral"
          }
        }
      ]
    },
    "jsii-calc.ClassWithPrivateConstructorAndAutomaticProperties": {
      "assembly": "jsii-calc",
      "docs": {
        "summary": "Class that implements interface properties automatically, but using a private constructor."
      },
      "fqn": "jsii-calc.ClassWithPrivateConstructorAndAutomaticProperties",
      "interfaces": [
        {
          "fqn": "jsii-calc.IInterfaceWithProperties"
        }
      ],
      "kind": "class",
      "methods": [
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 1137
          },
          "name": "create",
          "parameters": [
            {
              "name": "readOnlyString",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "readWriteString",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "fqn": "jsii-calc.ClassWithPrivateConstructorAndAutomaticProperties"
          },
          "static": true
        }
      ],
      "moduleLocation": {
        "filename": "lib/compliance.ts",
        "line": 1136
      },
      "name": "ClassWithPrivateConstructorAndAutomaticProperties",
      "properties": [
        {
          "immutable": true,
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 1141
          },
          "name": "readOnlyString",
          "overrides": {
            "fqn": "jsii-calc.IInterfaceWithProperties"
          },
          "type": {
            "primitive": "string"
          }
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 1141
          },
          "name": "readWriteString",
          "overrides": {
            "fqn": "jsii-calc.IInterfaceWithProperties"
          },
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "jsii-calc.ConstructorPassesThisOut": {
      "assembly": "jsii-calc",
      "fqn": "jsii-calc.ConstructorPassesThisOut",
      "initializer": {
        "initializer": true,
        "parameters": [
          {
            "name": "consumer",
            "type": {
              "fqn": "jsii-calc.PartiallyInitializedThisConsumer"
            }
          }
        ]
      },
      "kind": "class",
      "moduleLocation": {
        "filename": "lib/compliance.ts",
        "line": 1595
      },
      "name": "ConstructorPassesThisOut"
    },
    "jsii-calc.Constructors": {
      "assembly": "jsii-calc",
      "fqn": "jsii-calc.Constructors",
      "initializer": {
        "initializer": true
      },
      "kind": "class",
      "methods": [
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 1377
          },
          "name": "hiddenInterface",
          "returns": {
            "fqn": "jsii-calc.IPublicInterface"
          },
          "static": true
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 1381
          },
          "name": "hiddenInterfaces",
          "returns": {
            "collection": {
              "elementtype": {
                "fqn": "jsii-calc.IPublicInterface"
              },
              "kind": "array"
            }
          },
          "static": true
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 1385
          },
          "name": "hiddenSubInterfaces",
          "returns": {
            "collection": {
              "elementtype": {
                "fqn": "jsii-calc.IPublicInterface"
              },
              "kind": "array"
            }
          },
          "static": true
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 1361
          },
          "name": "makeClass",
          "returns": {
            "fqn": "jsii-calc.PublicClass"
          },
          "static": true
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 1365
          },
          "name": "makeInterface",
          "returns": {
            "fqn": "jsii-calc.IPublicInterface"
          },
          "static": true
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 1369
          },
          "name": "makeInterface2",
          "returns": {
            "fqn": "jsii-calc.IPublicInterface2"
          },
          "static": true
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 1373
          },
          "name": "makeInterfaces",
          "returns": {
            "collection": {
              "elementtype": {
                "fqn": "jsii-calc.IPublicInterface"
              },
              "kind": "array"
            }
          },
          "static": true
        }
      ],
      "moduleLocation": {
        "filename": "lib/compliance.ts",
        "line": 1360
      },
      "name": "Constructors"
    },
    "jsii-calc.ConsumersOfThisCrazyTypeSystem": {
      "assembly": "jsii-calc",
      "fqn": "jsii-calc.ConsumersOfThisCrazyTypeSystem",
      "initializer": {
        "initializer": true
      },
      "kind": "class",
      "methods": [
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 1578
          },
          "name": "consumeAnotherPublicInterface",
          "parameters": [
            {
              "name": "obj",
              "type": {
                "fqn": "jsii-calc.IAnotherPublicInterface"
              }
            }
          ],
          "returns": {
            "primitive": "string"
          }
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 1582
          },
          "name": "consumeNonInternalInterface",
          "parameters": [
            {
              "name": "obj",
              "type": {
                "fqn": "jsii-calc.INonInternalInterface"
              }
            }
          ],
          "returns": {
            "primitive": "any"
          }
        }
      ],
      "moduleLocation": {
        "filename": "lib/compliance.ts",
        "line": 1577
      },
      "name": "ConsumersOfThisCrazyTypeSystem"
    },
    "jsii-calc.DefaultedConstructorArgument": {
      "assembly": "jsii-calc",
      "fqn": "jsii-calc.DefaultedConstructorArgument",
      "initializer": {
        "initializer": true,
        "parameters": [
          {
            "name": "arg1",
            "type": {
              "optional": true,
              "primitive": "number"
            }
          },
          {
            "name": "arg2",
            "type": {
              "optional": true,
              "primitive": "string"
            }
          },
          {
            "name": "arg3",
            "type": {
              "optional": true,
              "primitive": "date"
            }
          }
        ]
      },
      "kind": "class",
      "moduleLocation": {
        "filename": "lib/compliance.ts",
        "line": 289
      },
      "name": "DefaultedConstructorArgument",
      "properties": [
        {
          "immutable": true,
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 290
          },
          "name": "arg1",
          "type": {
            "primitive": "number"
          }
        },
        {
          "immutable": true,
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 292
          },
          "name": "arg3",
          "type": {
            "primitive": "date"
          }
        },
        {
          "immutable": true,
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 291
          },
          "name": "arg2",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        }
      ]
    },
    "jsii-calc.DerivedClassHasNoProperties.Base": {
      "assembly": "jsii-calc",
      "fqn": "jsii-calc.DerivedClassHasNoProperties.Base",
      "initializer": {
        "initializer": true
      },
      "kind": "class",
      "moduleLocation": {
        "filename": "lib/compliance.ts",
        "line": 298
      },
      "name": "Base",
      "namespace": "DerivedClassHasNoProperties",
      "properties": [
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 299
          },
          "name": "prop",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "jsii-calc.DerivedClassHasNoProperties.Derived": {
      "assembly": "jsii-calc",
      "base": {
        "fqn": "jsii-calc.DerivedClassHasNoProperties.Base"
      },
      "fqn": "jsii-calc.DerivedClassHasNoProperties.Derived",
      "initializer": {
        "initializer": true
      },
      "kind": "class",
      "moduleLocation": {
        "filename": "lib/compliance.ts",
        "line": 302
      },
      "name": "Derived",
      "namespace": "DerivedClassHasNoProperties"
    },
    "jsii-calc.DerivedStruct": {
      "assembly": "jsii-calc",
      "datatype": true,
      "docs": {
        "summary": "A struct which derives from another struct."
      },
      "fqn": "jsii-calc.DerivedStruct",
      "interfaces": [
        {
          "fqn": "@scope/jsii-calc-lib.MyFirstStruct"
        }
      ],
      "kind": "interface",
      "moduleLocation": {
        "filename": "lib/compliance.ts",
        "line": 520
      },
      "name": "DerivedStruct",
      "properties": [
        {
          "abstract": true,
          "immutable": true,
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 526
          },
          "name": "anotherRequired",
          "type": {
            "primitive": "date"
          }
        },
        {
          "abstract": true,
          "immutable": true,
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 525
          },
          "name": "bool",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "summary": "An example of a non primitive property."
          },
          "immutable": true,
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 524
          },
          "name": "nonPrimitive",
          "type": {
            "fqn": "jsii-calc.DoubleTrouble"
          }
        },
        {
          "abstract": true,
          "docs": {
            "summary": "This is optional."
          },
          "immutable": true,
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 532
          },
          "name": "anotherOptional",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@scope/jsii-calc-lib.Value"
              },
              "kind": "map"
            },
            "optional": true
          }
        },
        {
          "abstract": true,
          "immutable": true,
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 528
          },
          "name": "optionalAny",
          "type": {
            "optional": true,
            "primitive": "any"
          }
        },
        {
          "abstract": true,
          "immutable": true,
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 527
          },
          "name": "optionalArray",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            },
            "optional": true
          }
        }
      ]
    },
    "jsii-calc.DoNotOverridePrivates": {
      "assembly": "jsii-calc",
      "fqn": "jsii-calc.DoNotOverridePrivates",
      "initializer": {
        "initializer": true
      },
      "kind": "class",
      "methods": [
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 1128
          },
          "name": "changePrivatePropertyValue",
          "parameters": [
            {
              "name": "newValue",
              "type": {
                "primitive": "string"
              }
            }
          ]
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 1120
          },
          "name": "privateMethodValue",
          "returns": {
            "primitive": "string"
          }
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 1124
          },
          "name": "privatePropertyValue",
          "returns": {
            "primitive": "string"
          }
        }
      ],
      "moduleLocation": {
        "filename": "lib/compliance.ts",
        "line": 1113
      },
      "name": "DoNotOverridePrivates"
    },
    "jsii-calc.DoNotRecognizeAnyAsOptional": {
      "assembly": "jsii-calc",
      "docs": {
        "summary": "jsii#284: do not recognize \"any\" as an optional argument."
      },
      "fqn": "jsii-calc.DoNotRecognizeAnyAsOptional",
      "initializer": {
        "initializer": true
      },
      "kind": "class",
      "methods": [
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 1163
          },
          "name": "method",
          "parameters": [
            {
              "name": "_requiredAny",
              "type": {
                "primitive": "any"
              }
            },
            {
              "name": "_optionalAny",
              "type": {
                "optional": true,
                "primitive": "any"
              }
            },
            {
              "name": "_optionalString",
              "type": {
                "optional": true,
                "primitive": "string"
              }
            }
          ]
        }
      ],
      "moduleLocation": {
        "filename": "lib/compliance.ts",
        "line": 1162
      },
      "name": "DoNotRecognizeAnyAsOptional"
    },
    "jsii-calc.DocumentedClass": {
      "assembly": "jsii-calc",
      "docs": {
        "remarks": "This is the meat of the TSDoc comment. It may contain\nmultiple lines and multiple paragraphs.\n\nMultiple paragraphs are separated by an empty line.",
        "stability": "stable",
        "summary": "Here's the first line of the TSDoc comment."
      },
      "fqn": "jsii-calc.DocumentedClass",
      "initializer": {
        "initializer": true
      },
      "kind": "class",
      "methods": [
        {
          "docs": {
            "remarks": "This will print out a friendly greeting intended for\nthe indicated person.",
            "returns": "A number that everyone knows very well",
            "summary": "Greet the indicated person."
          },
          "moduleLocation": {
            "filename": "lib/documented.ts",
            "line": 22
          },
          "name": "greet",
          "parameters": [
            {
              "docs": {
                "summary": "The person to be greeted."
              },
              "name": "greetee",
              "type": {
                "fqn": "jsii-calc.Greetee",
                "optional": true
              }
            }
          ],
          "returns": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Say ¡Hola!"
          },
          "moduleLocation": {
            "filename": "lib/documented.ts",
            "line": 32
          },
          "name": "hola"
        }
      ],
      "moduleLocation": {
        "filename": "lib/documented.ts",
        "line": 11
      },
      "name": "DocumentedClass"
    },
    "jsii-calc.DontComplainAboutVariadicAfterOptional": {
      "assembly": "jsii-calc",
      "fqn": "jsii-calc.DontComplainAboutVariadicAfterOptional",
      "initializer": {
        "initializer": true
      },
      "kind": "class",
      "methods": [
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 1214
          },
          "name": "optionalAndVariadic",
          "parameters": [
            {
              "name": "optional",
              "type": {
                "optional": true,
                "primitive": "string"
              }
            },
            {
              "name": "things",
              "type": {
                "primitive": "string"
              },
              "variadic": true
            }
          ],
          "returns": {
            "primitive": "string"
          },
          "variadic": true
        }
      ],
      "moduleLocation": {
        "filename": "lib/compliance.ts",
        "line": 1213
      },
      "name": "DontComplainAboutVariadicAfterOptional"
    },
    "jsii-calc.DoubleTrouble": {
      "assembly": "jsii-calc",
      "fqn": "jsii-calc.DoubleTrouble",
      "initializer": {
        "initializer": true
      },
      "interfaces": [
        {
          "fqn": "jsii-calc.IFriendlyRandomGenerator"
        }
      ],
      "kind": "class",
      "methods": [
        {
          "docs": {
            "summary": "Say hello!"
          },
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 465
          },
          "name": "hello",
          "overrides": {
            "fqn": "@scope/jsii-calc-lib.IFriendly"
          },
          "returns": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "summary": "Returns another random number."
          },
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 461
          },
          "name": "next",
          "overrides": {
            "fqn": "jsii-calc.IRandomNumberGenerator"
          },
          "returns": {
            "primitive": "number"
          }
        }
      ],
      "moduleLocation": {
        "filename": "lib/compliance.ts",
        "line": 460
      },
      "name": "DoubleTrouble"
    },
    "jsii-calc.EraseUndefinedHashValues": {
      "assembly": "jsii-calc",
      "fqn": "jsii-calc.EraseUndefinedHashValues",
      "initializer": {
        "initializer": true
      },
      "kind": "class",
      "methods": [
        {
          "docs": {
            "remarks": "Used to check that undefined/null hash values\nare being erased when sending values from native code to JS.",
            "summary": "Returns `true` if `key` is defined in `opts`."
          },
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 1421
          },
          "name": "doesKeyExist",
          "parameters": [
            {
              "name": "opts",
              "type": {
                "fqn": "jsii-calc.EraseUndefinedHashValuesOptions"
              }
            },
            {
              "name": "key",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "primitive": "boolean"
          },
          "static": true
        },
        {
          "docs": {
            "summary": "We expect \"prop1\" to be erased."
          },
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 1438
          },
          "name": "prop1IsNull",
          "returns": {
            "primitive": "any"
          },
          "static": true
        },
        {
          "docs": {
            "summary": "We expect \"prop2\" to be erased."
          },
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 1428
          },
          "name": "prop2IsUndefined",
          "returns": {
            "primitive": "any"
          },
          "static": true
        }
      ],
      "moduleLocation": {
        "filename": "lib/compliance.ts",
        "line": 1416
      },
      "name": "EraseUndefinedHashValues"
    },
    "jsii-calc.EraseUndefinedHashValuesOptions": {
      "assembly": "jsii-calc",
      "datatype": true,
      "fqn": "jsii-calc.EraseUndefinedHashValuesOptions",
      "kind": "interface",
      "moduleLocation": {
        "filename": "lib/compliance.ts",
        "line": 1411
      },
      "name": "EraseUndefinedHashValuesOptions",
      "properties": [
        {
          "abstract": true,
          "immutable": true,
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 1412
          },
          "name": "option1",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "immutable": true,
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 1413
          },
          "name": "option2",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        }
      ]
    },
    "jsii-calc.ExportedBaseClass": {
      "assembly": "jsii-calc",
      "fqn": "jsii-calc.ExportedBaseClass",
      "initializer": {
        "initializer": true,
        "parameters": [
          {
            "name": "success",
            "type": {
              "primitive": "boolean"
            }
          }
        ]
      },
      "kind": "class",
      "moduleLocation": {
        "filename": "lib/compliance.ts",
        "line": 1298
      },
      "name": "ExportedBaseClass",
      "properties": [
        {
          "immutable": true,
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 1299
          },
          "name": "success",
          "type": {
            "primitive": "boolean"
          }
        }
      ]
    },
    "jsii-calc.ExtendsInternalInterface": {
      "assembly": "jsii-calc",
      "datatype": true,
      "fqn": "jsii-calc.ExtendsInternalInterface",
      "kind": "interface",
      "moduleLocation": {
        "filename": "lib/compliance.ts",
        "line": 1519
      },
      "name": "ExtendsInternalInterface",
      "properties": [
        {
          "abstract": true,
          "immutable": true,
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 1520
          },
          "name": "boom",
          "type": {
            "primitive": "boolean"
          }
        }
      ]
    },
    "jsii-calc.ExtendsPrivateInterface": {
      "assembly": "jsii-calc",
      "datatype": true,
      "fqn": "jsii-calc.ExtendsPrivateInterface",
      "kind": "interface",
      "moduleLocation": {
        "filename": "lib/compliance.ts",
        "line": 1531
      },
      "name": "ExtendsPrivateInterface",
      "properties": [
        {
          "abstract": true,
          "immutable": true,
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 1532
          },
          "name": "moreThings",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "jsii-calc.GiveMeStructs": {
      "assembly": "jsii-calc",
      "fqn": "jsii-calc.GiveMeStructs",
      "initializer": {
        "initializer": true
      },
      "kind": "class",
      "methods": [
        {
          "docs": {
            "summary": "Accepts a struct of type DerivedStruct and returns a struct of type FirstStruct."
          },
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 553
          },
          "name": "derivedToFirst",
          "parameters": [
            {
              "name": "derived",
              "type": {
                "fqn": "jsii-calc.DerivedStruct"
              }
            }
          ],
          "returns": {
            "fqn": "@scope/jsii-calc-lib.MyFirstStruct"
          }
        },
        {
          "docs": {
            "summary": "Returns the boolean from a DerivedStruct struct."
          },
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 546
          },
          "name": "readDerivedNonPrimitive",
          "parameters": [
            {
              "name": "derived",
              "type": {
                "fqn": "jsii-calc.DerivedStruct"
              }
            }
          ],
          "returns": {
            "fqn": "jsii-calc.DoubleTrouble"
          }
        },
        {
          "docs": {
            "summary": "Returns the \"anumber\" from a MyFirstStruct struct;"
          },
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 539
          },
          "name": "readFirstNumber",
          "parameters": [
            {
              "name": "first",
              "type": {
                "fqn": "@scope/jsii-calc-lib.MyFirstStruct"
              }
            }
          ],
          "returns": {
            "primitive": "number"
          }
        }
      ],
      "moduleLocation": {
        "filename": "lib/compliance.ts",
        "line": 535
      },
      "name": "GiveMeStructs",
      "properties": [
        {
          "immutable": true,
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 557
          },
          "name": "structLiteral",
          "type": {
            "fqn": "@scope/jsii-calc-lib.StructWithOnlyOptionals"
          }
        }
      ]
    },
    "jsii-calc.Greetee": {
      "assembly": "jsii-calc",
      "datatype": true,
      "docs": {
        "summary": "These are some arguments you can pass to a method."
      },
      "fqn": "jsii-calc.Greetee",
      "kind": "interface",
      "moduleLocation": {
        "filename": "lib/documented.ts",
        "line": 40
      },
      "name": "Greetee",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "world",
            "summary": "The name of the greetee."
          },
          "immutable": true,
          "moduleLocation": {
            "filename": "lib/documented.ts",
            "line": 46
          },
          "name": "name",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        }
      ]
    },
    "jsii-calc.GreetingAugmenter": {
      "assembly": "jsii-calc",
      "fqn": "jsii-calc.GreetingAugmenter",
      "initializer": {
        "initializer": true
      },
      "kind": "class",
      "methods": [
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 512
          },
          "name": "betterGreeting",
          "parameters": [
            {
              "name": "friendly",
              "type": {
                "fqn": "@scope/jsii-calc-lib.IFriendly"
              }
            }
          ],
          "returns": {
            "primitive": "string"
          }
        }
      ],
      "moduleLocation": {
        "filename": "lib/compliance.ts",
        "line": 511
      },
      "name": "GreetingAugmenter"
    },
    "jsii-calc.IAnotherPublicInterface": {
      "assembly": "jsii-calc",
      "fqn": "jsii-calc.IAnotherPublicInterface",
      "kind": "interface",
      "moduleLocation": {
        "filename": "lib/compliance.ts",
        "line": 1540
      },
      "name": "IAnotherPublicInterface",
      "properties": [
        {
          "abstract": true,
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 1541
          },
          "name": "a",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "jsii-calc.IFriendlier": {
      "assembly": "jsii-calc",
      "docs": {
        "summary": "Even friendlier classes can implement this interface."
      },
      "fqn": "jsii-calc.IFriendlier",
      "interfaces": [
        {
          "fqn": "@scope/jsii-calc-lib.IFriendly"
        }
      ],
      "kind": "interface",
      "methods": [
        {
          "abstract": true,
          "docs": {
            "summary": "Say farewell."
          },
          "moduleLocation": {
            "filename": "lib/calculator.ts",
            "line": 17
          },
          "name": "farewell",
          "returns": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "returns": "A goodbye blessing.",
            "summary": "Say goodbye."
          },
          "moduleLocation": {
            "filename": "lib/calculator.ts",
            "line": 12
          },
          "name": "goodbye",
          "returns": {
            "primitive": "string"
          }
        }
      ],
      "moduleLocation": {
        "filename": "lib/calculator.ts",
        "line": 7
      },
      "name": "IFriendlier"
    },
    "jsii-calc.IFriendlyRandomGenerator": {
      "assembly": "jsii-calc",
      "fqn": "jsii-calc.IFriendlyRandomGenerator",
      "interfaces": [
        {
          "fqn": "jsii-calc.IRandomNumberGenerator"
        },
        {
          "fqn": "@scope/jsii-calc-lib.IFriendly"
        }
      ],
      "kind": "interface",
      "moduleLocation": {
        "filename": "lib/calculator.ts",
        "line": 31
      },
      "name": "IFriendlyRandomGenerator"
    },
    "jsii-calc.IInterfaceImplementedByAbstractClass": {
      "assembly": "jsii-calc",
      "docs": {
        "summary": "awslabs/jsii#220 Abstract return type."
      },
      "fqn": "jsii-calc.IInterfaceImplementedByAbstractClass",
      "kind": "interface",
      "moduleLocation": {
        "filename": "lib/compliance.ts",
        "line": 1059
      },
      "name": "IInterfaceImplementedByAbstractClass",
      "properties": [
        {
          "abstract": true,
          "immutable": true,
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 1060
          },
          "name": "propFromInterface",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "jsii-calc.IInterfaceThatShouldNotBeADataType": {
      "assembly": "jsii-calc",
      "docs": {
        "summary": "Even though this interface has only properties, it is disqualified from being a datatype because it inherits from an interface that is not a datatype."
      },
      "fqn": "jsii-calc.IInterfaceThatShouldNotBeADataType",
      "interfaces": [
        {
          "fqn": "jsii-calc.IInterfaceWithMethods"
        }
      ],
      "kind": "interface",
      "moduleLocation": {
        "filename": "lib/compliance.ts",
        "line": 1155
      },
      "name": "IInterfaceThatShouldNotBeADataType",
      "properties": [
        {
          "abstract": true,
          "immutable": true,
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 1156
          },
          "name": "otherValue",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "jsii-calc.IInterfaceWithInternal": {
      "assembly": "jsii-calc",
      "fqn": "jsii-calc.IInterfaceWithInternal",
      "kind": "interface",
      "methods": [
        {
          "abstract": true,
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 1480
          },
          "name": "visible"
        }
      ],
      "moduleLocation": {
        "filename": "lib/compliance.ts",
        "line": 1479
      },
      "name": "IInterfaceWithInternal"
    },
    "jsii-calc.IInterfaceWithMethods": {
      "assembly": "jsii-calc",
      "fqn": "jsii-calc.IInterfaceWithMethods",
      "kind": "interface",
      "methods": [
        {
          "abstract": true,
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 1148
          },
          "name": "doThings"
        }
      ],
      "moduleLocation": {
        "filename": "lib/compliance.ts",
        "line": 1145
      },
      "name": "IInterfaceWithMethods",
      "properties": [
        {
          "abstract": true,
          "immutable": true,
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 1146
          },
          "name": "value",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "jsii-calc.IInterfaceWithOptionalMethodArguments": {
      "assembly": "jsii-calc",
      "docs": {
        "summary": "awslabs/jsii#175 Interface proxies (and builders) do not respect optional arguments in methods."
      },
      "fqn": "jsii-calc.IInterfaceWithOptionalMethodArguments",
      "kind": "interface",
      "methods": [
        {
          "abstract": true,
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 1051
          },
          "name": "hello",
          "parameters": [
            {
              "name": "arg1",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "arg2",
              "type": {
                "optional": true,
                "primitive": "number"
              }
            }
          ]
        }
      ],
      "moduleLocation": {
        "filename": "lib/compliance.ts",
        "line": 1050
      },
      "name": "IInterfaceWithOptionalMethodArguments"
    },
    "jsii-calc.IInterfaceWithProperties": {
      "assembly": "jsii-calc",
      "fqn": "jsii-calc.IInterfaceWithProperties",
      "kind": "interface",
      "moduleLocation": {
        "filename": "lib/compliance.ts",
        "line": 565
      },
      "name": "IInterfaceWithProperties",
      "properties": [
        {
          "abstract": true,
          "immutable": true,
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 566
          },
          "name": "readOnlyString",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 567
          },
          "name": "readWriteString",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "jsii-calc.IInterfaceWithPropertiesExtension": {
      "assembly": "jsii-calc",
      "fqn": "jsii-calc.IInterfaceWithPropertiesExtension",
      "interfaces": [
        {
          "fqn": "jsii-calc.IInterfaceWithProperties"
        }
      ],
      "kind": "interface",
      "moduleLocation": {
        "filename": "lib/compliance.ts",
        "line": 570
      },
      "name": "IInterfaceWithPropertiesExtension",
      "properties": [
        {
          "abstract": true,
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 571
          },
          "name": "foo",
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "jsii-calc.IMutableObjectLiteral": {
      "assembly": "jsii-calc",
      "fqn": "jsii-calc.IMutableObjectLiteral",
      "kind": "interface",
      "moduleLocation": {
        "filename": "lib/compliance.ts",
        "line": 1105
      },
      "name": "IMutableObjectLiteral",
      "properties": [
        {
          "abstract": true,
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 1106
          },
          "name": "value",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "jsii-calc.INonInternalInterface": {
      "assembly": "jsii-calc",
      "fqn": "jsii-calc.INonInternalInterface",
      "interfaces": [
        {
          "fqn": "jsii-calc.IAnotherPublicInterface"
        }
      ],
      "kind": "interface",
      "moduleLocation": {
        "filename": "lib/compliance.ts",
        "line": 1550
      },
      "name": "INonInternalInterface",
      "properties": [
        {
          "abstract": true,
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 1551
          },
          "name": "c",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "jsii-calc.IPrivatelyImplemented": {
      "assembly": "jsii-calc",
      "fqn": "jsii-calc.IPrivatelyImplemented",
      "kind": "interface",
      "moduleLocation": {
        "filename": "lib/compliance.ts",
        "line": 1295
      },
      "name": "IPrivatelyImplemented",
      "properties": [
        {
          "abstract": true,
          "immutable": true,
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 1296
          },
          "name": "success",
          "type": {
            "primitive": "boolean"
          }
        }
      ]
    },
    "jsii-calc.IPublicInterface": {
      "assembly": "jsii-calc",
      "fqn": "jsii-calc.IPublicInterface",
      "kind": "interface",
      "methods": [
        {
          "abstract": true,
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 1339
          },
          "name": "bye",
          "returns": {
            "primitive": "string"
          }
        }
      ],
      "moduleLocation": {
        "filename": "lib/compliance.ts",
        "line": 1338
      },
      "name": "IPublicInterface"
    },
    "jsii-calc.IPublicInterface2": {
      "assembly": "jsii-calc",
      "fqn": "jsii-calc.IPublicInterface2",
      "kind": "interface",
      "methods": [
        {
          "abstract": true,
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 1343
          },
          "name": "ciao",
          "returns": {
            "primitive": "string"
          }
        }
      ],
      "moduleLocation": {
        "filename": "lib/compliance.ts",
        "line": 1342
      },
      "name": "IPublicInterface2"
    },
    "jsii-calc.IRandomNumberGenerator": {
      "assembly": "jsii-calc",
      "docs": {
        "summary": "Generates random numbers."
      },
      "fqn": "jsii-calc.IRandomNumberGenerator",
      "kind": "interface",
      "methods": [
        {
          "abstract": true,
          "docs": {
            "returns": "A random number.",
            "summary": "Returns another random number."
          },
          "moduleLocation": {
            "filename": "lib/calculator.ts",
            "line": 28
          },
          "name": "next",
          "returns": {
            "primitive": "number"
          }
        }
      ],
      "moduleLocation": {
        "filename": "lib/calculator.ts",
        "line": 23
      },
      "name": "IRandomNumberGenerator"
    },
    "jsii-calc.IReturnsNumber": {
      "assembly": "jsii-calc",
      "fqn": "jsii-calc.IReturnsNumber",
      "kind": "interface",
      "methods": [
        {
          "abstract": true,
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 619
          },
          "name": "obtainNumber",
          "returns": {
            "fqn": "@scope/jsii-calc-lib.IDoublable"
          }
        }
      ],
      "moduleLocation": {
        "filename": "lib/compliance.ts",
        "line": 618
      },
      "name": "IReturnsNumber",
      "properties": [
        {
          "abstract": true,
          "immutable": true,
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 621
          },
          "name": "numberProp",
          "type": {
            "fqn": "@scope/jsii-calc-lib.Number"
          }
        }
      ]
    },
    "jsii-calc.ImplementInternalInterface": {
      "assembly": "jsii-calc",
      "fqn": "jsii-calc.ImplementInternalInterface",
      "initializer": {
        "initializer": true
      },
      "kind": "class",
      "moduleLocation": {
        "filename": "lib/compliance.ts",
        "line": 1523
      },
      "name": "ImplementInternalInterface",
      "properties": [
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 1524
          },
          "name": "prop",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "jsii-calc.ImplementsInterfaceWithInternal": {
      "assembly": "jsii-calc",
      "fqn": "jsii-calc.ImplementsInterfaceWithInternal",
      "initializer": {
        "initializer": true
      },
      "interfaces": [
        {
          "fqn": "jsii-calc.IInterfaceWithInternal"
        }
      ],
      "kind": "class",
      "methods": [
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 1487
          },
          "name": "visible",
          "overrides": {
            "fqn": "jsii-calc.IInterfaceWithInternal"
          }
        }
      ],
      "moduleLocation": {
        "filename": "lib/compliance.ts",
        "line": 1486
      },
      "name": "ImplementsInterfaceWithInternal"
    },
    "jsii-calc.ImplementsInterfaceWithInternalSubclass": {
      "assembly": "jsii-calc",
      "base": {
        "fqn": "jsii-calc.ImplementsInterfaceWithInternal"
      },
      "fqn": "jsii-calc.ImplementsInterfaceWithInternalSubclass",
      "initializer": {
        "initializer": true
      },
      "kind": "class",
      "moduleLocation": {
        "filename": "lib/compliance.ts",
        "line": 1499
      },
      "name": "ImplementsInterfaceWithInternalSubclass"
    },
    "jsii-calc.ImplementsPrivateInterface": {
      "assembly": "jsii-calc",
      "fqn": "jsii-calc.ImplementsPrivateInterface",
      "initializer": {
        "initializer": true
      },
      "kind": "class",
      "moduleLocation": {
        "filename": "lib/compliance.ts",
        "line": 1527
      },
      "name": "ImplementsPrivateInterface",
      "properties": [
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 1528
          },
          "name": "private",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "jsii-calc.ImplictBaseOfBase": {
      "assembly": "jsii-calc",
      "datatype": true,
      "fqn": "jsii-calc.ImplictBaseOfBase",
      "interfaces": [
        {
          "fqn": "@scope/jsii-calc-base.BaseProps"
        }
      ],
      "kind": "interface",
      "moduleLocation": {
        "filename": "lib/compliance.ts",
        "line": 1003
      },
      "name": "ImplictBaseOfBase",
      "properties": [
        {
          "abstract": true,
          "immutable": true,
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 1004
          },
          "name": "goo",
          "type": {
            "primitive": "date"
          }
        }
      ]
    },
    "jsii-calc.InbetweenClass": {
      "assembly": "jsii-calc",
      "base": {
        "fqn": "jsii-calc.PublicClass"
      },
      "fqn": "jsii-calc.InbetweenClass",
      "initializer": {
        "initializer": true
      },
      "interfaces": [
        {
          "fqn": "jsii-calc.IPublicInterface2"
        }
      ],
      "kind": "class",
      "methods": [
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 1346
          },
          "name": "ciao",
          "overrides": {
            "fqn": "jsii-calc.IPublicInterface2"
          },
          "returns": {
            "primitive": "string"
          }
        }
      ],
      "moduleLocation": {
        "filename": "lib/compliance.ts",
        "line": 1345
      },
      "name": "InbetweenClass"
    },
    "jsii-calc.InterfaceInNamespaceIncludesClasses.Foo": {
      "assembly": "jsii-calc",
      "fqn": "jsii-calc.InterfaceInNamespaceIncludesClasses.Foo",
      "initializer": {
        "initializer": true
      },
      "kind": "class",
      "moduleLocation": {
        "filename": "lib/compliance.ts",
        "line": 1037
      },
      "name": "Foo",
      "namespace": "InterfaceInNamespaceIncludesClasses",
      "properties": [
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 1038
          },
          "name": "bar",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        }
      ]
    },
    "jsii-calc.InterfaceInNamespaceIncludesClasses.Hello": {
      "assembly": "jsii-calc",
      "datatype": true,
      "fqn": "jsii-calc.InterfaceInNamespaceIncludesClasses.Hello",
      "kind": "interface",
      "moduleLocation": {
        "filename": "lib/compliance.ts",
        "line": 1041
      },
      "name": "Hello",
      "namespace": "InterfaceInNamespaceIncludesClasses",
      "properties": [
        {
          "abstract": true,
          "immutable": true,
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 1042
          },
          "name": "foo",
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "jsii-calc.InterfaceInNamespaceOnlyInterface.Hello": {
      "assembly": "jsii-calc",
      "datatype": true,
      "fqn": "jsii-calc.InterfaceInNamespaceOnlyInterface.Hello",
      "kind": "interface",
      "moduleLocation": {
        "filename": "lib/compliance.ts",
        "line": 1029
      },
      "name": "Hello",
      "namespace": "InterfaceInNamespaceOnlyInterface",
      "properties": [
        {
          "abstract": true,
          "immutable": true,
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 1030
          },
          "name": "foo",
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "jsii-calc.JSII417Derived": {
      "assembly": "jsii-calc",
      "base": {
        "fqn": "jsii-calc.JSII417PublicBaseOfBase"
      },
      "fqn": "jsii-calc.JSII417Derived",
      "initializer": {
        "initializer": true,
        "parameters": [
          {
            "name": "property",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "moduleLocation": {
            "filename": "lib/erasures.ts",
            "line": 21
          },
          "name": "bar"
        },
        {
          "moduleLocation": {
            "filename": "lib/erasures.ts",
            "line": 24
          },
          "name": "baz"
        }
      ],
      "moduleLocation": {
        "filename": "lib/erasures.ts",
        "line": 20
      },
      "name": "JSII417Derived",
      "properties": [
        {
          "immutable": true,
          "moduleLocation": {
            "filename": "lib/erasures.ts",
            "line": 15
          },
          "name": "property",
          "protected": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "jsii-calc.JSII417PublicBaseOfBase": {
      "assembly": "jsii-calc",
      "fqn": "jsii-calc.JSII417PublicBaseOfBase",
      "initializer": {
        "initializer": true
      },
      "kind": "class",
      "methods": [
        {
          "moduleLocation": {
            "filename": "lib/erasures.ts",
            "line": 9
          },
          "name": "makeInstance",
          "returns": {
            "fqn": "jsii-calc.JSII417PublicBaseOfBase"
          },
          "static": true
        },
        {
          "moduleLocation": {
            "filename": "lib/erasures.ts",
            "line": 12
          },
          "name": "foo"
        }
      ],
      "moduleLocation": {
        "filename": "lib/erasures.ts",
        "line": 8
      },
      "name": "JSII417PublicBaseOfBase",
      "properties": [
        {
          "immutable": true,
          "moduleLocation": {
            "filename": "lib/erasures.ts",
            "line": 6
          },
          "name": "hasRoot",
          "type": {
            "primitive": "boolean"
          }
        }
      ]
    },
    "jsii-calc.JSObjectLiteralForInterface": {
      "assembly": "jsii-calc",
      "fqn": "jsii-calc.JSObjectLiteralForInterface",
      "initializer": {
        "initializer": true
      },
      "kind": "class",
      "methods": [
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 496
          },
          "name": "giveMeFriendly",
          "returns": {
            "fqn": "@scope/jsii-calc-lib.IFriendly"
          }
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 502
          },
          "name": "giveMeFriendlyGenerator",
          "returns": {
            "fqn": "jsii-calc.IFriendlyRandomGenerator"
          }
        }
      ],
      "moduleLocation": {
        "filename": "lib/compliance.ts",
        "line": 494
      },
      "name": "JSObjectLiteralForInterface"
    },
    "jsii-calc.JSObjectLiteralToNative": {
      "assembly": "jsii-calc",
      "fqn": "jsii-calc.JSObjectLiteralToNative",
      "initializer": {
        "initializer": true
      },
      "kind": "class",
      "methods": [
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 221
          },
          "name": "returnLiteral",
          "returns": {
            "fqn": "jsii-calc.JSObjectLiteralToNativeClass"
          }
        }
      ],
      "moduleLocation": {
        "filename": "lib/compliance.ts",
        "line": 220
      },
      "name": "JSObjectLiteralToNative"
    },
    "jsii-calc.JSObjectLiteralToNativeClass": {
      "assembly": "jsii-calc",
      "fqn": "jsii-calc.JSObjectLiteralToNativeClass",
      "initializer": {
        "initializer": true
      },
      "kind": "class",
      "moduleLocation": {
        "filename": "lib/compliance.ts",
        "line": 229
      },
      "name": "JSObjectLiteralToNativeClass",
      "properties": [
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 230
          },
          "name": "propA",
          "type": {
            "primitive": "string"
          }
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 231
          },
          "name": "propB",
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "jsii-calc.JavaReservedWords": {
      "assembly": "jsii-calc",
      "fqn": "jsii-calc.JavaReservedWords",
      "initializer": {
        "initializer": true
      },
      "kind": "class",
      "methods": [
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 715
          },
          "name": "abstract"
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 718
          },
          "name": "assert"
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 721
          },
          "name": "boolean"
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 724
          },
          "name": "break"
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 727
          },
          "name": "byte"
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 730
          },
          "name": "case"
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 733
          },
          "name": "catch"
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 736
          },
          "name": "char"
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 739
          },
          "name": "class"
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 742
          },
          "name": "const"
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 745
          },
          "name": "continue"
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 748
          },
          "name": "default"
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 754
          },
          "name": "do"
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 751
          },
          "name": "double"
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 757
          },
          "name": "else"
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 760
          },
          "name": "enum"
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 763
          },
          "name": "extends"
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 766
          },
          "name": "false"
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 769
          },
          "name": "final"
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 772
          },
          "name": "finally"
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 775
          },
          "name": "float"
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 778
          },
          "name": "for"
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 781
          },
          "name": "goto"
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 784
          },
          "name": "if"
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 787
          },
          "name": "implements"
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 790
          },
          "name": "import"
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 793
          },
          "name": "instanceof"
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 796
          },
          "name": "int"
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 799
          },
          "name": "interface"
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 802
          },
          "name": "long"
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 805
          },
          "name": "native"
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 808
          },
          "name": "new"
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 811
          },
          "name": "null"
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 814
          },
          "name": "package"
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 817
          },
          "name": "private"
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 820
          },
          "name": "protected"
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 823
          },
          "name": "public"
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 826
          },
          "name": "return"
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 829
          },
          "name": "short"
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 832
          },
          "name": "static"
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 835
          },
          "name": "strictfp"
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 838
          },
          "name": "super"
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 841
          },
          "name": "switch"
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 844
          },
          "name": "synchronized"
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 847
          },
          "name": "this"
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 850
          },
          "name": "throw"
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 853
          },
          "name": "throws"
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 856
          },
          "name": "transient"
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 859
          },
          "name": "true"
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 862
          },
          "name": "try"
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 865
          },
          "name": "void"
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 868
          },
          "name": "volatile"
        }
      ],
      "moduleLocation": {
        "filename": "lib/compliance.ts",
        "line": 714
      },
      "name": "JavaReservedWords",
      "properties": [
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 871
          },
          "name": "while",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "jsii-calc.JsiiAgent": {
      "assembly": "jsii-calc",
      "docs": {
        "summary": "Host runtime version should be set via JSII_AGENT."
      },
      "fqn": "jsii-calc.JsiiAgent",
      "initializer": {
        "initializer": true
      },
      "kind": "class",
      "moduleLocation": {
        "filename": "lib/compliance.ts",
        "line": 1310
      },
      "name": "JsiiAgent",
      "properties": [
        {
          "docs": {
            "summary": "Returns the value of the JSII_AGENT environment variable."
          },
          "immutable": true,
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 1314
          },
          "name": "jsiiAgent",
          "static": true,
          "type": {
            "optional": true,
            "primitive": "string"
          }
        }
      ]
    },
    "jsii-calc.LoadBalancedFargateServiceProps": {
      "assembly": "jsii-calc",
      "datatype": true,
      "docs": {
        "summary": "jsii#298: show default values in sphinx documentation, and respect newlines."
      },
      "fqn": "jsii-calc.LoadBalancedFargateServiceProps",
      "kind": "interface",
      "moduleLocation": {
        "filename": "lib/compliance.ts",
        "line": 1222
      },
      "name": "LoadBalancedFargateServiceProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "80",
            "remarks": "Corresponds to container port mapping.",
            "summary": "The container port of the application load balancer attached to your Fargate service."
          },
          "immutable": true,
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 1265
          },
          "name": "containerPort",
          "type": {
            "optional": true,
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "256",
            "remarks": "This default is set in the underlying FargateTaskDefinition construct.",
            "summary": "The number of cpu units used by the task. Valid values, which determines your range of valid values for the memory parameter: 256 (.25 vCPU) - Available memory values: 0.5GB, 1GB, 2GB 512 (.5 vCPU) - Available memory values: 1GB, 2GB, 3GB, 4GB 1024 (1 vCPU) - Available memory values: 2GB, 3GB, 4GB, 5GB, 6GB, 7GB, 8GB 2048 (2 vCPU) - Available memory values: Between 4GB and 16GB in 1GB increments 4096 (4 vCPU) - Available memory values: Between 8GB and 30GB in 1GB increments."
          },
          "immutable": true,
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 1236
          },
          "name": "cpu",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "512",
            "remarks": "This field is required and you must use one of the following values, which determines your range of valid values\nfor the cpu parameter:\n\n0.5GB, 1GB, 2GB - Available cpu values: 256 (.25 vCPU)\n\n1GB, 2GB, 3GB, 4GB - Available cpu values: 512 (.5 vCPU)\n\n2GB, 3GB, 4GB, 5GB, 6GB, 7GB, 8GB - Available cpu values: 1024 (1 vCPU)\n\nBetween 4GB and 16GB in 1GB increments - Available cpu values: 2048 (2 vCPU)\n\nBetween 8GB and 30GB in 1GB increments - Available cpu values: 4096 (4 vCPU)\n\nThis default is set in the underlying FargateTaskDefinition construct.",
            "summary": "The amount (in MiB) of memory used by the task."
          },
          "immutable": true,
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 1258
          },
          "name": "memoryMiB",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "summary": "Determines whether the Application Load Balancer will be internet-facing."
          },
          "immutable": true,
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 1272
          },
          "name": "publicLoadBalancer",
          "type": {
            "optional": true,
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "summary": "Determines whether your Fargate Service will be assigned a public IP address."
          },
          "immutable": true,
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 1279
          },
          "name": "publicTasks",
          "type": {
            "optional": true,
            "primitive": "boolean"
          }
        }
      ]
    },
    "jsii-calc.Multiply": {
      "assembly": "jsii-calc",
      "base": {
        "fqn": "jsii-calc.BinaryOperation"
      },
      "docs": {
        "summary": "The \"*\" binary operation."
      },
      "fqn": "jsii-calc.Multiply",
      "initializer": {
        "docs": {
          "summary": "Creates a BinaryOperation."
        },
        "initializer": true,
        "parameters": [
          {
            "docs": {
              "summary": "Left-hand side operand."
            },
            "name": "lhs",
            "type": {
              "fqn": "@scope/jsii-calc-lib.Value"
            }
          },
          {
            "docs": {
              "summary": "Right-hand side operand."
            },
            "name": "rhs",
            "type": {
              "fqn": "@scope/jsii-calc-lib.Value"
            }
          }
        ]
      },
      "interfaces": [
        {
          "fqn": "jsii-calc.IFriendlier"
        },
        {
          "fqn": "jsii-calc.IRandomNumberGenerator"
        }
      ],
      "kind": "class",
      "methods": [
        {
          "docs": {
            "summary": "Say farewell."
          },
          "moduleLocation": {
            "filename": "lib/calculator.ts",
            "line": 82
          },
          "name": "farewell",
          "overrides": {
            "fqn": "jsii-calc.IFriendlier"
          },
          "returns": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "summary": "Say goodbye."
          },
          "moduleLocation": {
            "filename": "lib/calculator.ts",
            "line": 78
          },
          "name": "goodbye",
          "overrides": {
            "fqn": "jsii-calc.IFriendlier"
          },
          "returns": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "summary": "Returns another random number."
          },
          "moduleLocation": {
            "filename": "lib/calculator.ts",
            "line": 86
          },
          "name": "next",
          "overrides": {
            "fqn": "jsii-calc.IRandomNumberGenerator"
          },
          "returns": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "summary": "String representation of the value."
          },
          "moduleLocation": {
            "filename": "lib/calculator.ts",
            "line": 74
          },
          "name": "toString",
          "overrides": {
            "fqn": "@scope/jsii-calc-lib.Operation"
          },
          "returns": {
            "primitive": "string"
          }
        }
      ],
      "moduleLocation": {
        "filename": "lib/calculator.ts",
        "line": 69
      },
      "name": "Multiply",
      "properties": [
        {
          "docs": {
            "summary": "The value."
          },
          "immutable": true,
          "moduleLocation": {
            "filename": "lib/calculator.ts",
            "line": 70
          },
          "name": "value",
          "overrides": {
            "fqn": "@scope/jsii-calc-lib.Value"
          },
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "jsii-calc.Negate": {
      "assembly": "jsii-calc",
      "base": {
        "fqn": "jsii-calc.UnaryOperation"
      },
      "docs": {
        "summary": "The negation operation (\"-value\")."
      },
      "fqn": "jsii-calc.Negate",
      "initializer": {
        "initializer": true,
        "parameters": [
          {
            "name": "operand",
            "type": {
              "fqn": "@scope/jsii-calc-lib.Value"
            }
          }
        ]
      },
      "interfaces": [
        {
          "fqn": "jsii-calc.IFriendlier"
        }
      ],
      "kind": "class",
      "methods": [
        {
          "docs": {
            "summary": "Say farewell."
          },
          "moduleLocation": {
            "filename": "lib/calculator.ts",
            "line": 120
          },
          "name": "farewell",
          "overrides": {
            "fqn": "jsii-calc.IFriendlier"
          },
          "returns": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "summary": "Say goodbye."
          },
          "moduleLocation": {
            "filename": "lib/calculator.ts",
            "line": 116
          },
          "name": "goodbye",
          "overrides": {
            "fqn": "jsii-calc.IFriendlier"
          },
          "returns": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "summary": "Say hello!"
          },
          "moduleLocation": {
            "filename": "lib/calculator.ts",
            "line": 112
          },
          "name": "hello",
          "overrides": {
            "fqn": "@scope/jsii-calc-lib.IFriendly"
          },
          "returns": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "summary": "String representation of the value."
          },
          "moduleLocation": {
            "filename": "lib/calculator.ts",
            "line": 108
          },
          "name": "toString",
          "overrides": {
            "fqn": "@scope/jsii-calc-lib.Operation"
          },
          "returns": {
            "primitive": "string"
          }
        }
      ],
      "moduleLocation": {
        "filename": "lib/calculator.ts",
        "line": 103
      },
      "name": "Negate",
      "properties": [
        {
          "docs": {
            "summary": "The value."
          },
          "immutable": true,
          "moduleLocation": {
            "filename": "lib/calculator.ts",
            "line": 104
          },
          "name": "value",
          "overrides": {
            "fqn": "@scope/jsii-calc-lib.Value"
          },
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "jsii-calc.NodeStandardLibrary": {
      "assembly": "jsii-calc",
      "docs": {
        "summary": "Test fixture to verify that jsii modules can use the node standard library."
      },
      "fqn": "jsii-calc.NodeStandardLibrary",
      "initializer": {
        "initializer": true
      },
      "kind": "class",
      "methods": [
        {
          "docs": {
            "returns": "\"6a2da20943931e9834fc12cfe5bb47bbd9ae43489a30726962b576f4e3993e50\"",
            "summary": "Uses node.js \"crypto\" module to calculate sha256 of a string."
          },
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 984
          },
          "name": "cryptoSha256",
          "returns": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "returns": "\"Hello, resource!\"",
            "summary": "Reads a local resource file (resource.txt) asynchronously."
          },
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 960
          },
          "name": "fsReadFile",
          "returns": {
            "primitive": "string",
            "promise": true
          }
        },
        {
          "docs": {
            "returns": "\"Hello, resource! SYNC!\"",
            "summary": "Sync version of fsReadFile."
          },
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 969
          },
          "name": "fsReadFileSync",
          "returns": {
            "primitive": "string"
          }
        }
      ],
      "moduleLocation": {
        "filename": "lib/compliance.ts",
        "line": 955
      },
      "name": "NodeStandardLibrary",
      "properties": [
        {
          "docs": {
            "summary": "Returns the current os.platform() from the \"os\" node module."
          },
          "immutable": true,
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 976
          },
          "name": "osPlatform",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "jsii-calc.NullShouldBeTreatedAsUndefined": {
      "assembly": "jsii-calc",
      "docs": {
        "summary": "jsii#282, aws-cdk#157: null should be treated as \"undefined\"."
      },
      "fqn": "jsii-calc.NullShouldBeTreatedAsUndefined",
      "initializer": {
        "initializer": true,
        "parameters": [
          {
            "name": "_param1",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "optional",
            "type": {
              "optional": true,
              "primitive": "any"
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 1180
          },
          "name": "giveMeUndefined",
          "parameters": [
            {
              "name": "value",
              "type": {
                "optional": true,
                "primitive": "any"
              }
            }
          ]
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 1186
          },
          "name": "giveMeUndefinedInsideAnObject",
          "parameters": [
            {
              "name": "input",
              "type": {
                "fqn": "jsii-calc.NullShouldBeTreatedAsUndefinedData"
              }
            }
          ]
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 1201
          },
          "name": "verifyPropertyIsUndefined"
        }
      ],
      "moduleLocation": {
        "filename": "lib/compliance.ts",
        "line": 1171
      },
      "name": "NullShouldBeTreatedAsUndefined",
      "properties": [
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 1172
          },
          "name": "changeMeToUndefined",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        }
      ]
    },
    "jsii-calc.NullShouldBeTreatedAsUndefinedData": {
      "assembly": "jsii-calc",
      "datatype": true,
      "fqn": "jsii-calc.NullShouldBeTreatedAsUndefinedData",
      "kind": "interface",
      "moduleLocation": {
        "filename": "lib/compliance.ts",
        "line": 1208
      },
      "name": "NullShouldBeTreatedAsUndefinedData",
      "properties": [
        {
          "abstract": true,
          "immutable": true,
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 1210
          },
          "name": "arrayWithThreeElementsAndUndefinedAsSecondArgument",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "immutable": true,
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 1209
          },
          "name": "thisShouldBeUndefined",
          "type": {
            "optional": true,
            "primitive": "any"
          }
        }
      ]
    },
    "jsii-calc.NumberGenerator": {
      "assembly": "jsii-calc",
      "docs": {
        "summary": "This allows us to test that a reference can be stored for objects that implement interfaces."
      },
      "fqn": "jsii-calc.NumberGenerator",
      "initializer": {
        "initializer": true,
        "parameters": [
          {
            "name": "generator",
            "type": {
              "fqn": "jsii-calc.IRandomNumberGenerator"
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 489
          },
          "name": "isSameGenerator",
          "parameters": [
            {
              "name": "gen",
              "type": {
                "fqn": "jsii-calc.IRandomNumberGenerator"
              }
            }
          ],
          "returns": {
            "primitive": "boolean"
          }
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 485
          },
          "name": "nextTimes100",
          "returns": {
            "primitive": "number"
          }
        }
      ],
      "moduleLocation": {
        "filename": "lib/compliance.ts",
        "line": 480
      },
      "name": "NumberGenerator",
      "properties": [
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 481
          },
          "name": "generator",
          "type": {
            "fqn": "jsii-calc.IRandomNumberGenerator"
          }
        }
      ]
    },
    "jsii-calc.ObjectRefsInCollections": {
      "assembly": "jsii-calc",
      "docs": {
        "summary": "Verify that object references can be passed inside collections."
      },
      "fqn": "jsii-calc.ObjectRefsInCollections",
      "initializer": {
        "initializer": true
      },
      "kind": "class",
      "methods": [
        {
          "docs": {
            "summary": "Returns the sum of all values."
          },
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 241
          },
          "name": "sumFromArray",
          "parameters": [
            {
              "name": "values",
              "type": {
                "collection": {
                  "elementtype": {
                    "fqn": "@scope/jsii-calc-lib.Value"
                  },
                  "kind": "array"
                }
              }
            }
          ],
          "returns": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "summary": "Returns the sum of all values in a map."
          },
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 252
          },
          "name": "sumFromMap",
          "parameters": [
            {
              "name": "values",
              "type": {
                "collection": {
                  "elementtype": {
                    "fqn": "@scope/jsii-calc-lib.Value"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "returns": {
            "primitive": "number"
          }
        }
      ],
      "moduleLocation": {
        "filename": "lib/compliance.ts",
        "line": 237
      },
      "name": "ObjectRefsInCollections"
    },
    "jsii-calc.Old": {
      "assembly": "jsii-calc",
      "docs": {
        "deprecated": "Use the new class",
        "summary": "Old class."
      },
      "fqn": "jsii-calc.Old",
      "initializer": {
        "initializer": true
      },
      "kind": "class",
      "methods": [
        {
          "docs": {
            "summary": "Doo wop that thing."
          },
          "moduleLocation": {
            "filename": "lib/documented.ts",
            "line": 58
          },
          "name": "doAThing"
        }
      ],
      "moduleLocation": {
        "filename": "lib/documented.ts",
        "line": 54
      },
      "name": "Old"
    },
    "jsii-calc.OptionalConstructorArgument": {
      "assembly": "jsii-calc",
      "fqn": "jsii-calc.OptionalConstructorArgument",
      "initializer": {
        "initializer": true,
        "parameters": [
          {
            "name": "arg1",
            "type": {
              "primitive": "number"
            }
          },
          {
            "name": "arg2",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "arg3",
            "type": {
              "optional": true,
              "primitive": "date"
            }
          }
        ]
      },
      "kind": "class",
      "moduleLocation": {
        "filename": "lib/compliance.ts",
        "line": 282
      },
      "name": "OptionalConstructorArgument",
      "properties": [
        {
          "immutable": true,
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 283
          },
          "name": "arg1",
          "type": {
            "primitive": "number"
          }
        },
        {
          "immutable": true,
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 284
          },
          "name": "arg2",
          "type": {
            "primitive": "string"
          }
        },
        {
          "immutable": true,
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 285
          },
          "name": "arg3",
          "type": {
            "optional": true,
            "primitive": "date"
          }
        }
      ]
    },
    "jsii-calc.OptionalStruct": {
      "assembly": "jsii-calc",
      "datatype": true,
      "fqn": "jsii-calc.OptionalStruct",
      "kind": "interface",
      "moduleLocation": {
        "filename": "lib/compliance.ts",
        "line": 1617
      },
      "name": "OptionalStruct",
      "properties": [
        {
          "abstract": true,
          "immutable": true,
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 1618
          },
          "name": "field",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        }
      ]
    },
    "jsii-calc.OptionalStructConsumer": {
      "assembly": "jsii-calc",
      "fqn": "jsii-calc.OptionalStructConsumer",
      "initializer": {
        "initializer": true,
        "parameters": [
          {
            "name": "optionalStruct",
            "type": {
              "fqn": "jsii-calc.OptionalStruct",
              "optional": true
            }
          }
        ]
      },
      "kind": "class",
      "moduleLocation": {
        "filename": "lib/compliance.ts",
        "line": 1608
      },
      "name": "OptionalStructConsumer",
      "properties": [
        {
          "immutable": true,
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 1609
          },
          "name": "parameterWasUndefined",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "immutable": true,
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 1610
          },
          "name": "fieldValue",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        }
      ]
    },
    "jsii-calc.OverrideReturnsObject": {
      "assembly": "jsii-calc",
      "fqn": "jsii-calc.OverrideReturnsObject",
      "initializer": {
        "initializer": true
      },
      "kind": "class",
      "methods": [
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 625
          },
          "name": "test",
          "parameters": [
            {
              "name": "obj",
              "type": {
                "fqn": "jsii-calc.IReturnsNumber"
              }
            }
          ],
          "returns": {
            "primitive": "number"
          }
        }
      ],
      "moduleLocation": {
        "filename": "lib/compliance.ts",
        "line": 624
      },
      "name": "OverrideReturnsObject"
    },
    "jsii-calc.PartiallyInitializedThisConsumer": {
      "abstract": true,
      "assembly": "jsii-calc",
      "fqn": "jsii-calc.PartiallyInitializedThisConsumer",
      "initializer": {
        "initializer": true
      },
      "kind": "class",
      "methods": [
        {
          "abstract": true,
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 1592
          },
          "name": "consumePartiallyInitializedThis",
          "parameters": [
            {
              "name": "obj",
              "type": {
                "fqn": "jsii-calc.ConstructorPassesThisOut"
              }
            },
            {
              "name": "dt",
              "type": {
                "primitive": "date"
              }
            },
            {
              "name": "ev",
              "type": {
                "fqn": "jsii-calc.AllTypesEnum"
              }
            }
          ],
          "returns": {
            "primitive": "string"
          }
        }
      ],
      "moduleLocation": {
        "filename": "lib/compliance.ts",
        "line": 1591
      },
      "name": "PartiallyInitializedThisConsumer"
    },
    "jsii-calc.Polymorphism": {
      "assembly": "jsii-calc",
      "fqn": "jsii-calc.Polymorphism",
      "initializer": {
        "initializer": true
      },
      "kind": "class",
      "methods": [
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 471
          },
          "name": "sayHello",
          "parameters": [
            {
              "name": "friendly",
              "type": {
                "fqn": "@scope/jsii-calc-lib.IFriendly"
              }
            }
          ],
          "returns": {
            "primitive": "string"
          }
        }
      ],
      "moduleLocation": {
        "filename": "lib/compliance.ts",
        "line": 470
      },
      "name": "Polymorphism"
    },
    "jsii-calc.Power": {
      "assembly": "jsii-calc",
      "base": {
        "fqn": "jsii-calc.composition.CompositeOperation"
      },
      "docs": {
        "summary": "The power operation."
      },
      "fqn": "jsii-calc.Power",
      "initializer": {
        "docs": {
          "summary": "Creates a Power operation."
        },
        "initializer": true,
        "parameters": [
          {
            "docs": {
              "summary": "The base of the power."
            },
            "name": "base",
            "type": {
              "fqn": "@scope/jsii-calc-lib.Value"
            }
          },
          {
            "docs": {
              "summary": "The number of times to multiply."
            },
            "name": "pow",
            "type": {
              "fqn": "@scope/jsii-calc-lib.Value"
            }
          }
        ]
      },
      "kind": "class",
      "moduleLocation": {
        "filename": "lib/calculator.ts",
        "line": 212
      },
      "name": "Power",
      "properties": [
        {
          "docs": {
            "summary": "The base of the power."
          },
          "immutable": true,
          "moduleLocation": {
            "filename": "lib/calculator.ts",
            "line": 219
          },
          "name": "base",
          "type": {
            "fqn": "@scope/jsii-calc-lib.Value"
          }
        },
        {
          "docs": {
            "summary": "The expression that this operation consists of. Must be implemented by derived classes."
          },
          "immutable": true,
          "moduleLocation": {
            "filename": "lib/calculator.ts",
            "line": 223
          },
          "name": "expression",
          "overrides": {
            "fqn": "jsii-calc.composition.CompositeOperation"
          },
          "type": {
            "fqn": "@scope/jsii-calc-lib.Value"
          }
        },
        {
          "docs": {
            "summary": "The number of times to multiply."
          },
          "immutable": true,
          "moduleLocation": {
            "filename": "lib/calculator.ts",
            "line": 219
          },
          "name": "pow",
          "type": {
            "fqn": "@scope/jsii-calc-lib.Value"
          }
        }
      ]
    },
    "jsii-calc.PublicClass": {
      "assembly": "jsii-calc",
      "fqn": "jsii-calc.PublicClass",
      "initializer": {
        "initializer": true
      },
      "kind": "class",
      "methods": [
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 1336
          },
          "name": "hello"
        }
      ],
      "moduleLocation": {
        "filename": "lib/compliance.ts",
        "line": 1335
      },
      "name": "PublicClass"
    },
    "jsii-calc.PythonReservedWords": {
      "assembly": "jsii-calc",
      "fqn": "jsii-calc.PythonReservedWords",
      "initializer": {
        "initializer": true
      },
      "kind": "class",
      "methods": [
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 876
          },
          "name": "and"
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 878
          },
          "name": "as"
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 880
          },
          "name": "assert"
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 882
          },
          "name": "async"
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 884
          },
          "name": "await"
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 886
          },
          "name": "break"
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 888
          },
          "name": "class"
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 890
          },
          "name": "continue"
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 892
          },
          "name": "def"
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 894
          },
          "name": "del"
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 896
          },
          "name": "elif"
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 898
          },
          "name": "else"
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 900
          },
          "name": "except"
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 902
          },
          "name": "finally"
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 904
          },
          "name": "for"
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 906
          },
          "name": "from"
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 908
          },
          "name": "global"
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 910
          },
          "name": "if"
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 912
          },
          "name": "import"
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 914
          },
          "name": "in"
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 916
          },
          "name": "is"
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 918
          },
          "name": "lambda"
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 920
          },
          "name": "nonlocal"
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 922
          },
          "name": "not"
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 924
          },
          "name": "or"
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 926
          },
          "name": "pass"
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 928
          },
          "name": "raise"
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 930
          },
          "name": "return"
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 932
          },
          "name": "try"
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 934
          },
          "name": "while"
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 936
          },
          "name": "with"
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 938
          },
          "name": "yield"
        }
      ],
      "moduleLocation": {
        "filename": "lib/compliance.ts",
        "line": 874
      },
      "name": "PythonReservedWords"
    },
    "jsii-calc.ReferenceEnumFromScopedPackage": {
      "assembly": "jsii-calc",
      "docs": {
        "summary": "See awslabs/jsii#138."
      },
      "fqn": "jsii-calc.ReferenceEnumFromScopedPackage",
      "initializer": {
        "initializer": true
      },
      "kind": "class",
      "methods": [
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 1013
          },
          "name": "loadFoo",
          "returns": {
            "fqn": "@scope/jsii-calc-lib.EnumFromScopedModule",
            "optional": true
          }
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 1017
          },
          "name": "saveFoo",
          "parameters": [
            {
              "name": "value",
              "type": {
                "fqn": "@scope/jsii-calc-lib.EnumFromScopedModule"
              }
            }
          ]
        }
      ],
      "moduleLocation": {
        "filename": "lib/compliance.ts",
        "line": 1010
      },
      "name": "ReferenceEnumFromScopedPackage",
      "properties": [
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 1011
          },
          "name": "foo",
          "type": {
            "fqn": "@scope/jsii-calc-lib.EnumFromScopedModule",
            "optional": true
          }
        }
      ]
    },
    "jsii-calc.ReturnsPrivateImplementationOfInterface": {
      "assembly": "jsii-calc",
      "docs": {
        "returns": "an instance of an un-exported class that extends `ExportedBaseClass`, declared as `IPrivatelyImplemented`.",
        "see": "https://github.com/awslabs/jsii/issues/320",
        "summary": "Helps ensure the JSII kernel & runtime cooperate correctly when an un-exported instance of a class is returned with a declared type that is an exported interface, and the instance inherits from an exported class."
      },
      "fqn": "jsii-calc.ReturnsPrivateImplementationOfInterface",
      "initializer": {
        "initializer": true
      },
      "kind": "class",
      "moduleLocation": {
        "filename": "lib/compliance.ts",
        "line": 1290
      },
      "name": "ReturnsPrivateImplementationOfInterface",
      "properties": [
        {
          "immutable": true,
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 1291
          },
          "name": "privateImplementation",
          "type": {
            "fqn": "jsii-calc.IPrivatelyImplemented"
          }
        }
      ]
    },
    "jsii-calc.RuntimeTypeChecking": {
      "assembly": "jsii-calc",
      "fqn": "jsii-calc.RuntimeTypeChecking",
      "initializer": {
        "initializer": true
      },
      "kind": "class",
      "methods": [
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 271
          },
          "name": "methodWithDefaultedArguments",
          "parameters": [
            {
              "name": "arg1",
              "type": {
                "optional": true,
                "primitive": "number"
              }
            },
            {
              "name": "arg2",
              "type": {
                "optional": true,
                "primitive": "string"
              }
            },
            {
              "name": "arg3",
              "type": {
                "optional": true,
                "primitive": "date"
              }
            }
          ]
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 277
          },
          "name": "methodWithOptionalAnyArgument",
          "parameters": [
            {
              "name": "arg",
              "type": {
                "optional": true,
                "primitive": "any"
              }
            }
          ]
        },
        {
          "docs": {
            "summary": "Used to verify verification of number of method arguments."
          },
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 265
          },
          "name": "methodWithOptionalArguments",
          "parameters": [
            {
              "name": "arg1",
              "type": {
                "primitive": "number"
              }
            },
            {
              "name": "arg2",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "arg3",
              "type": {
                "optional": true,
                "primitive": "date"
              }
            }
          ]
        }
      ],
      "moduleLocation": {
        "filename": "lib/compliance.ts",
        "line": 261
      },
      "name": "RuntimeTypeChecking"
    },
    "jsii-calc.SingleInstanceTwoTypes": {
      "assembly": "jsii-calc",
      "docs": {
        "remarks": "JSII clients can instantiate 2 different strongly-typed wrappers for the same\nobject. Unfortunately, this will break object equality, but if we didn't do\nthis it would break runtime type checks in the JVM or CLR.",
        "summary": "Test that a single instance can be returned under two different FQNs."
      },
      "fqn": "jsii-calc.SingleInstanceTwoTypes",
      "initializer": {
        "initializer": true
      },
      "kind": "class",
      "methods": [
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 1400
          },
          "name": "interface1",
          "returns": {
            "fqn": "jsii-calc.InbetweenClass"
          }
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 1404
          },
          "name": "interface2",
          "returns": {
            "fqn": "jsii-calc.IPublicInterface"
          }
        }
      ],
      "moduleLocation": {
        "filename": "lib/compliance.ts",
        "line": 1397
      },
      "name": "SingleInstanceTwoTypes"
    },
    "jsii-calc.Statics": {
      "assembly": "jsii-calc",
      "fqn": "jsii-calc.Statics",
      "initializer": {
        "initializer": true,
        "parameters": [
          {
            "name": "value",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "docs": {
            "summary": "Jsdocs for static method."
          },
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 667
          },
          "name": "staticMethod",
          "parameters": [
            {
              "docs": {
                "summary": "The name of the person to say hello to."
              },
              "name": "name",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "primitive": "string"
          },
          "static": true
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 671
          },
          "name": "justMethod",
          "returns": {
            "primitive": "string"
          }
        }
      ],
      "moduleLocation": {
        "filename": "lib/compliance.ts",
        "line": 659
      },
      "name": "Statics",
      "properties": [
        {
          "const": true,
          "docs": {
            "summary": "Constants may also use all-caps."
          },
          "immutable": true,
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 683
          },
          "name": "BAR",
          "static": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "const": true,
          "immutable": true,
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 710
          },
          "name": "ConstObj",
          "static": true,
          "type": {
            "fqn": "jsii-calc.DoubleTrouble"
          }
        },
        {
          "const": true,
          "docs": {
            "summary": "Jsdocs for static property."
          },
          "immutable": true,
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 678
          },
          "name": "Foo",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "summary": "Constants can also use camelCase."
          },
          "immutable": true,
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 688
          },
          "name": "zooBar",
          "static": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "summary": "Jsdocs for static getter. Jsdocs for static setter."
          },
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 695
          },
          "name": "instance",
          "static": true,
          "type": {
            "fqn": "jsii-calc.Statics"
          }
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 709
          },
          "name": "nonConstStatic",
          "static": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "immutable": true,
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 660
          },
          "name": "value",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "jsii-calc.StringEnum": {
      "assembly": "jsii-calc",
      "fqn": "jsii-calc.StringEnum",
      "kind": "enum",
      "members": [
        {
          "name": "A"
        },
        {
          "name": "B"
        },
        {
          "name": "C"
        }
      ],
      "moduleLocation": {
        "filename": "lib/compliance.ts",
        "line": 29
      },
      "name": "StringEnum"
    },
    "jsii-calc.StripInternal": {
      "assembly": "jsii-calc",
      "fqn": "jsii-calc.StripInternal",
      "initializer": {
        "initializer": true
      },
      "kind": "class",
      "moduleLocation": {
        "filename": "lib/compliance.ts",
        "line": 1447
      },
      "name": "StripInternal",
      "properties": [
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 1448
          },
          "name": "youSeeMe",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "jsii-calc.Sum": {
      "assembly": "jsii-calc",
      "base": {
        "fqn": "jsii-calc.composition.CompositeOperation"
      },
      "docs": {
        "summary": "An operation that sums multiple values."
      },
      "fqn": "jsii-calc.Sum",
      "initializer": {
        "initializer": true
      },
      "kind": "class",
      "moduleLocation": {
        "filename": "lib/calculator.ts",
        "line": 187
      },
      "name": "Sum",
      "properties": [
        {
          "docs": {
            "summary": "The expression that this operation consists of. Must be implemented by derived classes."
          },
          "immutable": true,
          "moduleLocation": {
            "filename": "lib/calculator.ts",
            "line": 200
          },
          "name": "expression",
          "overrides": {
            "fqn": "jsii-calc.composition.CompositeOperation"
          },
          "type": {
            "fqn": "@scope/jsii-calc-lib.Value"
          }
        },
        {
          "docs": {
            "summary": "The parts to sum."
          },
          "moduleLocation": {
            "filename": "lib/calculator.ts",
            "line": 192
          },
          "name": "parts",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@scope/jsii-calc-lib.Value"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "jsii-calc.SyncVirtualMethods": {
      "assembly": "jsii-calc",
      "fqn": "jsii-calc.SyncVirtualMethods",
      "initializer": {
        "initializer": true
      },
      "kind": "class",
      "methods": [
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 360
          },
          "name": "callerIsAsync",
          "returns": {
            "primitive": "number",
            "promise": true
          }
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 348
          },
          "name": "callerIsMethod",
          "returns": {
            "primitive": "number"
          }
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 400
          },
          "name": "modifyOtherProperty",
          "parameters": [
            {
              "name": "value",
              "type": {
                "primitive": "string"
              }
            }
          ]
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 372
          },
          "name": "modifyValueOfTheProperty",
          "parameters": [
            {
              "name": "value",
              "type": {
                "primitive": "string"
              }
            }
          ]
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 413
          },
          "name": "readA",
          "returns": {
            "primitive": "number"
          }
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 404
          },
          "name": "retrieveOtherProperty",
          "returns": {
            "primitive": "string"
          }
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 384
          },
          "name": "retrieveReadOnlyProperty",
          "returns": {
            "primitive": "string"
          }
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 376
          },
          "name": "retrieveValueOfTheProperty",
          "returns": {
            "primitive": "string"
          }
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 364
          },
          "name": "virtualMethod",
          "parameters": [
            {
              "name": "n",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "primitive": "number"
          }
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 417
          },
          "name": "writeA",
          "parameters": [
            {
              "name": "value",
              "type": {
                "primitive": "number"
              }
            }
          ]
        }
      ],
      "moduleLocation": {
        "filename": "lib/compliance.ts",
        "line": 347
      },
      "name": "SyncVirtualMethods",
      "properties": [
        {
          "immutable": true,
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 382
          },
          "name": "readonlyProperty",
          "type": {
            "primitive": "string"
          }
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 411
          },
          "name": "a",
          "type": {
            "primitive": "number"
          }
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 352
          },
          "name": "callerIsProperty",
          "type": {
            "primitive": "number"
          }
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 390
          },
          "name": "otherProperty",
          "type": {
            "primitive": "string"
          }
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 370
          },
          "name": "theProperty",
          "type": {
            "primitive": "string"
          }
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 398
          },
          "name": "valueOfOtherProperty",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "jsii-calc.Thrower": {
      "assembly": "jsii-calc",
      "fqn": "jsii-calc.Thrower",
      "initializer": {
        "initializer": true
      },
      "kind": "class",
      "methods": [
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 631
          },
          "name": "throwError"
        }
      ],
      "moduleLocation": {
        "filename": "lib/compliance.ts",
        "line": 630
      },
      "name": "Thrower"
    },
    "jsii-calc.UnaryOperation": {
      "abstract": true,
      "assembly": "jsii-calc",
      "base": {
        "fqn": "@scope/jsii-calc-lib.Operation"
      },
      "docs": {
        "summary": "An operation on a single operand."
      },
      "fqn": "jsii-calc.UnaryOperation",
      "initializer": {
        "initializer": true,
        "parameters": [
          {
            "name": "operand",
            "type": {
              "fqn": "@scope/jsii-calc-lib.Value"
            }
          }
        ]
      },
      "kind": "class",
      "moduleLocation": {
        "filename": "lib/calculator.ts",
        "line": 94
      },
      "name": "UnaryOperation",
      "properties": [
        {
          "immutable": true,
          "moduleLocation": {
            "filename": "lib/calculator.ts",
            "line": 95
          },
          "name": "operand",
          "type": {
            "fqn": "@scope/jsii-calc-lib.Value"
          }
        }
      ]
    },
    "jsii-calc.UnionProperties": {
      "assembly": "jsii-calc",
      "datatype": true,
      "fqn": "jsii-calc.UnionProperties",
      "kind": "interface",
      "moduleLocation": {
        "filename": "lib/compliance.ts",
        "line": 941
      },
      "name": "UnionProperties",
      "properties": [
        {
          "abstract": true,
          "immutable": true,
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 943
          },
          "name": "bar",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "primitive": "number"
                },
                {
                  "fqn": "jsii-calc.AllTypes"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "immutable": true,
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 942
          },
          "name": "foo",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "primitive": "number"
                }
              ]
            }
          }
        }
      ]
    },
    "jsii-calc.UseBundledDependency": {
      "assembly": "jsii-calc",
      "fqn": "jsii-calc.UseBundledDependency",
      "initializer": {
        "initializer": true
      },
      "kind": "class",
      "methods": [
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 947
          },
          "name": "value",
          "returns": {
            "primitive": "any"
          }
        }
      ],
      "moduleLocation": {
        "filename": "lib/compliance.ts",
        "line": 946
      },
      "name": "UseBundledDependency"
    },
    "jsii-calc.UseCalcBase": {
      "assembly": "jsii-calc",
      "docs": {
        "summary": "Depend on a type from jsii-calc-base as a test for awslabs/jsii#128."
      },
      "fqn": "jsii-calc.UseCalcBase",
      "initializer": {
        "initializer": true
      },
      "kind": "class",
      "methods": [
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 996
          },
          "name": "hello",
          "returns": {
            "fqn": "@scope/jsii-calc-base.Base"
          }
        }
      ],
      "moduleLocation": {
        "filename": "lib/compliance.ts",
        "line": 995
      },
      "name": "UseCalcBase"
    },
    "jsii-calc.UsesInterfaceWithProperties": {
      "assembly": "jsii-calc",
      "fqn": "jsii-calc.UsesInterfaceWithProperties",
      "initializer": {
        "initializer": true,
        "parameters": [
          {
            "name": "obj",
            "type": {
              "fqn": "jsii-calc.IInterfaceWithProperties"
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 579
          },
          "name": "justRead",
          "returns": {
            "primitive": "string"
          }
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 588
          },
          "name": "readStringAndNumber",
          "parameters": [
            {
              "name": "ext",
              "type": {
                "fqn": "jsii-calc.IInterfaceWithPropertiesExtension"
              }
            }
          ],
          "returns": {
            "primitive": "string"
          }
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 583
          },
          "name": "writeAndRead",
          "parameters": [
            {
              "name": "value",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "primitive": "string"
          }
        }
      ],
      "moduleLocation": {
        "filename": "lib/compliance.ts",
        "line": 574
      },
      "name": "UsesInterfaceWithProperties",
      "properties": [
        {
          "immutable": true,
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 575
          },
          "name": "obj",
          "type": {
            "fqn": "jsii-calc.IInterfaceWithProperties"
          }
        }
      ]
    },
    "jsii-calc.VariadicMethod": {
      "assembly": "jsii-calc",
      "fqn": "jsii-calc.VariadicMethod",
      "initializer": {
        "initializer": true,
        "parameters": [
          {
            "docs": {
              "summary": "a prefix that will be use for all values returned by `#asArray`."
            },
            "name": "prefix",
            "type": {
              "primitive": "number"
            },
            "variadic": true
          }
        ],
        "variadic": true
      },
      "kind": "class",
      "methods": [
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 654
          },
          "name": "asArray",
          "parameters": [
            {
              "docs": {
                "summary": "the first element of the array to be returned (after the `prefix` provided at construction time)."
              },
              "name": "first",
              "type": {
                "primitive": "number"
              }
            },
            {
              "docs": {
                "summary": "other elements to be included in the array."
              },
              "name": "others",
              "type": {
                "primitive": "number"
              },
              "variadic": true
            }
          ],
          "returns": {
            "collection": {
              "elementtype": {
                "primitive": "number"
              },
              "kind": "array"
            }
          },
          "variadic": true
        }
      ],
      "moduleLocation": {
        "filename": "lib/compliance.ts",
        "line": 640
      },
      "name": "VariadicMethod"
    },
    "jsii-calc.VirtualMethodPlayground": {
      "assembly": "jsii-calc",
      "fqn": "jsii-calc.VirtualMethodPlayground",
      "initializer": {
        "initializer": true
      },
      "kind": "class",
      "methods": [
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 451
          },
          "name": "overrideMeAsync",
          "parameters": [
            {
              "name": "index",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "primitive": "number",
            "promise": true
          }
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 455
          },
          "name": "overrideMeSync",
          "parameters": [
            {
              "name": "index",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "primitive": "number"
          }
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 433
          },
          "name": "parallelSumAsync",
          "parameters": [
            {
              "name": "count",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "primitive": "number",
            "promise": true
          }
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 424
          },
          "name": "serialSumAsync",
          "parameters": [
            {
              "name": "count",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "primitive": "number",
            "promise": true
          }
        },
        {
          "moduleLocation": {
            "filename": "lib/compliance.ts",
            "line": 443
          },
          "name": "sumSync",
          "parameters": [
            {
              "name": "count",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "primitive": "number"
          }
        }
      ],
      "moduleLocation": {
        "filename": "lib/compliance.ts",
        "line": 423
      },
      "name": "VirtualMethodPlayground"
    },
    "jsii-calc.composition.CompositeOperation": {
      "abstract": true,
      "assembly": "jsii-calc",
      "base": {
        "fqn": "@scope/jsii-calc-lib.Operation"
      },
      "docs": {
        "summary": "Abstract operation composed from an expression of other operations."
      },
      "fqn": "jsii-calc.composition.CompositeOperation",
      "initializer": {
        "initializer": true
      },
      "kind": "class",
      "methods": [
        {
          "docs": {
            "summary": "String representation of the value."
          },
          "moduleLocation": {
            "filename": "lib/calculator.ts",
            "line": 158
          },
          "name": "toString",
          "overrides": {
            "fqn": "@scope/jsii-calc-lib.Operation"
          },
          "returns": {
            "primitive": "string"
          }
        }
      ],
      "moduleLocation": {
        "filename": "lib/calculator.ts",
        "line": 132
      },
      "name": "CompositeOperation",
      "namespace": "composition",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "summary": "The expression that this operation consists of. Must be implemented by derived classes."
          },
          "immutable": true,
          "moduleLocation": {
            "filename": "lib/calculator.ts",
            "line": 156
          },
          "name": "expression",
          "type": {
            "fqn": "@scope/jsii-calc-lib.Value"
          }
        },
        {
          "docs": {
            "summary": "The value."
          },
          "immutable": true,
          "moduleLocation": {
            "filename": "lib/calculator.ts",
            "line": 148
          },
          "name": "value",
          "overrides": {
            "fqn": "@scope/jsii-calc-lib.Value"
          },
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "summary": "A set of postfixes to include in a decorated .toString()."
          },
          "moduleLocation": {
            "filename": "lib/calculator.ts",
            "line": 146
          },
          "name": "decorationPostfixes",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "summary": "A set of prefixes to include in a decorated .toString()."
          },
          "moduleLocation": {
            "filename": "lib/calculator.ts",
            "line": 141
          },
          "name": "decorationPrefixes",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "summary": "The .toString() style."
          },
          "moduleLocation": {
            "filename": "lib/calculator.ts",
            "line": 136
          },
          "name": "stringStyle",
          "type": {
            "fqn": "jsii-calc.composition.CompositeOperation.CompositionStringStyle"
          }
        }
      ]
    },
    "jsii-calc.composition.CompositeOperation.CompositionStringStyle": {
      "assembly": "jsii-calc",
      "docs": {
        "summary": "Style of .toString() output for CompositeOperation."
      },
      "fqn": "jsii-calc.composition.CompositeOperation.CompositionStringStyle",
      "kind": "enum",
      "members": [
        {
          "docs": {
            "summary": "Normal string expression."
          },
          "name": "Normal"
        },
        {
          "docs": {
            "summary": "Decorated string expression."
          },
          "name": "Decorated"
        }
      ],
      "moduleLocation": {
        "filename": "lib/calculator.ts",
        "line": 174
      },
      "name": "CompositionStringStyle",
      "namespace": "composition.CompositeOperation"
    }
  },
  "version": "0.8.2",
  "fingerprint": "WDXYo37Lrjrb9sVguROuTuu6nWZMNc2102SRw4wEvHw="
}
