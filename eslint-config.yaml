---
env:
  jest: true
  node: true

plugins:
  - '@typescript-eslint'
  - import
  - prettier

parser: '@typescript-eslint/parser'
parserOptions:
  ecmaVersion: 2018
  impliedStrict: true
  sourceType: module
  project: ./**/tsconfig.json

extends:
  - eslint:recommended
  - plugin:@typescript-eslint/eslint-recommended
  - plugin:@typescript-eslint/recommended
  - plugin:@typescript-eslint/recommended-requiring-type-checking
  - plugin:import/typescript
  - prettier
  - prettier/@typescript-eslint
  - plugin:prettier/recommended

settings:
  import/parsers:
    '@typescript-eslint/parser': ['.ts', '.tsx']
  import/resolver:
    node: {}
    typescript:
      directory: ./**/tsconfig.json


rules:
  # Custom Configurations

  'prettier/prettier':
    - error

  '@typescript-eslint/array-type':
    - error
    - default: array-simple
      readonly: array-simple

  '@typescript-eslint/await-thenable':
    - error

  '@typescript-eslint/brace-style':
    - error
    - 1tbs # One True Brace Style!
    - allowSingleLine: true

  '@typescript-eslint/explicit-module-boundary-types':
    - off

  '@typescript-eslint/explicit-member-accessibility':
    - error

  '@typescript-eslint/member-ordering':
    - error
    - default:
      - static-field
      - static-method
      - instance-field
      - constructor
      - instance-method

  '@typescript-eslint/no-empty-function':
    - error
    - allow: [constructors]

  '@typescript-eslint/no-floating-promises':
    - error

  '@typescript-eslint/no-for-in-array':
    - error

  '@typescript-eslint/no-require-imports':
    - error

  '@typescript-eslint/no-unsafe-assignment':
    - off

  '@typescript-eslint/no-unsafe-call':
    - off

  '@typescript-eslint/no-unsafe-member-access':
    - off

  '@typescript-eslint/no-unsafe-return':
    - off

  '@typescript-eslint/no-unused-vars':
    - error
    - args: all
      argsIgnorePattern: ^_
      caughtErrors: all
      vars: all
      varsIgnorePattern: ^_

  '@typescript-eslint/no-useless-constructor':
    - error

  '@typescript-eslint/prefer-for-of':
    - error

  '@typescript-eslint/prefer-readonly':
    - error

  '@typescript-eslint/promise-function-async':
    - error
    - checkArrowFunctions: false

  '@typescript-eslint/restrict-template-expressions':
    - error
    - allowNumber: true
      allowBoolean: true
      allowAny: true
      allowNullish: true

  '@typescript-eslint/require-await':
    - error

  'complexity':
    - off

  'consistent-return':
    - error

  'dot-notation':
    - error

  'eqeqeq':
    - error
    - always
    - null: ignore

  'import/no-extraneous-dependencies':
    - error
    - devDependencies: ['**/test/**'] # Only allow importing devDependencies from tests
      optionalDependencies: false     # Disallow importing optional dependencies (those shouldn't be used here)
      peerDependencies: false         # Disallow importing peer dependencies (those shouldn't be used here)

  'import/no-unresolved':
    - error

  'no-alert':
    - error

  'no-await-in-loop':
    - error

  'no-caller':
    - error

  'no-else-return':
    - error
    - allowElseIf: true

  'no-eval':
    - error

  'no-extra-bind':
    - error

  'no-implied-eval':
    - error

  'no-lone-blocks':
    - error

  'no-new-symbol':
    - error

  'no-proto':
    - error

  'no-restricted-properties':
    - error

  'no-return-await':
    - error

  'no-unused-expressions':
    - error

  'no-useless-call':
    - error

  'no-var':
    - error

  'prefer-const':
    - error

  'prefer-template':
    - error

  'eol-last':
    - error
    - always

  # Disabled rules
  '@typescript-eslint/explicit-function-return-type': off
  '@typescript-eslint/interface-name-prefix': off
  '@typescript-eslint/no-explicit-any': off
  '@typescript-eslint/no-non-null-assertion': off
  '@typescript-eslint/no-use-before-define': off
  '@typescript-eslint/unbound-method': off
  'no-case-declarations': off
  'require-atomic-updates': off
