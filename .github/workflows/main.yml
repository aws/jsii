# Workflows pertaining to the main/master branch
name: Main

on:
  pull_request:
    branches: [main, master]
  push:
    branches: [main, master]

env:
  DOTNET_NOLOGO: true

jobs:
  build:
    name: Build
    strategy:
      matrix:
        # Only one version here - this is only to centralize configuration
        dotnet: ['3.1.x']
        java: ['8']
        node: ['12']
        os: [ubuntu-latest]
        python: ['3.6']

    runs-on: ${{ matrix.os }}

    steps:
      - name: Set up .NET ${{ matrix.dotnet }}
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ matrix.dotnet }}
      - name: Set up Java ${{ matrix.java }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
      - name: Set up Node ${{ matrix.node }}
        uses: actions/setup-node@v2.1.1
        with:
          node-version: ${{ matrix.node }}
      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-node@v2.1.1
        with:
          python-version: ${{ matrix.python }}
      - name: Install python3-venv
        if: runner.os == 'Linux'
        run: apt install -y python3-venv
      - name: Check out
        uses: actions/checkout@v2
      - name: Locate Caches
        id: cache-locations
        run: |-
          # Need to have PIP >= 20.1 for "pip cache dir" to work
          pip install --update pip
          echo "::set-output name=pip-cache::$(pip cache dir)"
          echo "::set-output name=yarn-cache::$(yarn cache dir)"
      - name: Cache
        uses: actions/cache@v2
        with:
          path: |-
            ${{ steps.cache-locations.outputs.pip-cache }}
            ${{ steps.cache-locations.outputs.yarn-cache }}
            ~/.m2/repository
            ~/.nuget/packages
          key: ${{ runner.os }}-node${{ matrix.node }}-python@${{ matrix.python }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |-
            ${{ runner.os }}-node@${{ matrix.node }}-python@${{ matrix.python }}-
            ${{ runner.os }}-node@${{ matrix.node }}-
            ${{ runner.os }}-
      - name: Install Dependencies
        run: yarn install --frozen-lockfile
      - name: Full Build
        run: yarn build
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: build-output
          path: |-
            ${{ github.workspace }}/
            !${{ github.workspace }}/node_modules

  test:
    name: Test (${{ matrix.os }} / java ${{ matrix.java }} / node ${{ matrix.node }} / python ${{ matrix.python }})
    needs: build
    strategy:
      matrix:
        # All currently supported node versions (Maintenance LTS, Active LTS, Current)
        dotnet: ['3.1.x']
        java: ['8', '11']
        node: ['10', '12', '13', '14']
        os: [ubuntu-latest, windows-latest, macos-latest]
        python: ['3.6', '3.7', '3.8', '3.9']

    runs-on: ${{ matrix.os }}

    steps:
      - name: Set up .NET ${{ matrix.dotnet }}
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ matrix.dotnet }}
      - name: Set up Java ${{ matrix.java }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
      - name: Set up Node ${{ matrix.node }}
        uses: actions/setup-node@v2.1.1
        with:
          node-version: ${{ matrix.node }}
      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-node@v2.1.1
        with:
          python-version: ${{ matrix.python }}
      - name: Install python3-venv
        if: runner.os == 'Linux'
        run: apt install -y python3-venv
      - name: Locate Caches
        id: cache-locations
        run: |-
          # Need to have PIP >= 20.1 for "pip cache dir" to work
          pip install --update pip
          echo "::set-output name=pip-cache::$(pip cache dir)"
          echo "::set-output name=yarn-cache::$(yarn cache dir)"
      - name: Cache
        uses: actions/cache@v2
        with:
          path: |-
            ${{ steps.cache-locations.outputs.pip-cache }}
            ${{ steps.cache-locations.outputs.yarn-cache }}
            ~/.m2/repository
            ~/.nuget/packages
          # Not including .NET / Java in the cache keys, those artifacts are SDK-version-independent
          key: ${{ runner.os }}-node${{ matrix.node }}-python@${{ matrix.python }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |-
            ${{ runner.os }}-node@${{ matrix.node }}-python@${{ matrix.python }}-
            ${{ runner.os }}-node@${{ matrix.node }}-
            ${{ runner.os }}-
      - name: Download Artifact
        uses: actions/download-artifact@v2
        with:
          name: build-output
      - name: Install Dependencies
        run: yarn install --frozen-lockfile
      - name: Test
        run: yarn test
