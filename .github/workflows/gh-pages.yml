# Workflow that publishes to the gh-pacges branch
name: GitHub Pages

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]
    paths: [gh-pages/**]
  workflow_dispatch:

jobs:
  build:
    name: build
    permissions:
      contents: read
    runs-on: ubuntu-latest
    steps:
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.8'
      - name: Check out
        uses: actions/checkout@v3
      - name: Locate Caches
        id: cache-locations
        run: |-
          echo "::set-output name=pip-cache::$(python3 -m pip cache dir)"
      - name: Cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.cache-locations.outputs.pip-cache }}
          key: ${{ runner.os }}-${{ hashFiles('**/requirements-dev.txt') }}
          restore-keys: ${{ runner.os }}-
      - name: Install Dependencies
        run: |-
          pip install -r requirements-dev.txt
        working-directory: gh-pages
      - name: Build DocSite
        run: |-
          mkdir -p ${{ runner.temp }}/site
          mkdocs build                                                          \
            --strict                                                            \
            --site-dir ${{ runner.temp }}/site
        working-directory: gh-pages
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: doc-site
          path: ${{ runner.temp }}/site/

  publish:
    name: Publish
    needs: build
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v3
        with:
          ref: gh-pages
          token: ${{ secrets.PROJEN_GITHUB_TOKEN }}
      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: doc-site
          path: ${{ runner.temp }}/site
      - name: Configure Git
        run: |-
          git config user.name "AWS CDK Automation"
          git config user.email "aws-cdk+automation@amazon.com"
      - name: Prepare Commit
        run: |-
          rsync --delete --exclude=.git --recursive ${{ runner.temp }}/site/ ./
          touch .nojekyll
          git add .
          git diff --cached --exit-code >/dev/null || (
            git commit -am 'docs: publish from ${{ github.sha }}'
          )
      - name: Push
        run: |-
          git push origin gh-pages:gh-pages
  benchmark:
    name: Benchmark
    needs: publish
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          cache: yarn
          node-version: '16'
      - name: Install Dependencies
        run: |-
          yarn install --frozen-lockfile
          yarn build
      - name: Run Benchmark
        run: |-
          cd packages/jsii
          yarn bench | tee output.txt
      - name: Store benchmark result
        uses: benchmark-action/github-action-benchmark@v1
        with:
          name: JSII Compiler Benchmark
          tool: 'benchmarkjs'
          output-file-path: packages/jsii/output.txt
          # Access token to deploy GitHub Pages branch
          github-token: ${{ secrets.GITHUB_TOKEN }}
          # Push and deploy GitHub pages branch automatically
          auto-push: true
